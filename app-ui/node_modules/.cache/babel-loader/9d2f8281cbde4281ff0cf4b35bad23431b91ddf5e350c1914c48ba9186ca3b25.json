{"ast":null,"code":"import { defaultChains, mainnet } from \"./chunk-4DNFSL2K.js\";\nimport { __privateAdd, __privateGet, __privateMethod, __privateSet } from \"./chunk-MQXBDTVK.js\";\n\n// src/client.ts\nimport { persist, subscribeWithSelector } from \"zustand/middleware\";\nimport { default as create } from \"zustand/vanilla\";\n\n// src/connectors/injected.ts\nimport { providers as providers2 } from \"ethers\";\nimport { getAddress, hexValue } from \"ethers/lib/utils.js\";\n\n// src/utils/configureChains.ts\nimport { providers } from \"ethers\";\nfunction configureChains(defaultChains2, providers3) {\n  let {\n    minQuorum = 1,\n    pollingInterval = 4e3,\n    targetQuorum = 1,\n    stallTimeout\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (!defaultChains2.length) throw new Error(\"must have at least one chain\");\n  if (targetQuorum < minQuorum) throw new Error(\"quorum cannot be lower than minQuorum\");\n  let chains = [];\n  const providers_ = {};\n  const webSocketProviders_ = {};\n  for (const chain2 of defaultChains2) {\n    let configExists = false;\n    for (const provider of providers3) {\n      const apiConfig = provider(chain2);\n      if (!apiConfig) continue;\n      configExists = true;\n      if (!chains.some(_ref => {\n        let {\n          id\n        } = _ref;\n        return id === chain2.id;\n      })) {\n        chains = [...chains, apiConfig.chain];\n      }\n      providers_[chain2.id] = [...(providers_[chain2.id] || []), apiConfig.provider];\n      if (apiConfig.webSocketProvider) {\n        webSocketProviders_[chain2.id] = [...(webSocketProviders_[chain2.id] || []), apiConfig.webSocketProvider];\n      }\n    }\n    if (!configExists) {\n      throw new Error([`Could not find valid provider configuration for chain \"${chain2.name}\".\n`, \"You may need to add `jsonRpcProvider` to `configureChains` with the chain's RPC URLs.\", \"Read more: https://wagmi.sh/react/providers/jsonRpc\"].join(\"\\n\"));\n    }\n  }\n  return {\n    chains,\n    provider: _ref2 => {\n      let {\n        chainId: chainId2\n      } = _ref2;\n      const activeChain = chains.find(x => x.id === chainId2) ?? defaultChains2[0];\n      const chainProviders = providers_[activeChain.id];\n      if (!chainProviders || !chainProviders[0]) throw new Error(`No providers configured for chain \"${activeChain.id}\"`);\n      let provider;\n      if (chainProviders.length === 1) {\n        provider = chainProviders[0]();\n      } else {\n        provider = fallbackProvider(targetQuorum, minQuorum, chainProviders, {\n          stallTimeout\n        });\n      }\n      if (activeChain.id === 42220) {\n        provider.formatter.formats.block = {\n          ...provider.formatter.formats.block,\n          difficulty: () => 0,\n          gasLimit: () => 0\n        };\n      }\n      return Object.assign(provider, {\n        chains,\n        pollingInterval\n      });\n    },\n    webSocketProvider: _ref3 => {\n      let {\n        chainId: chainId2\n      } = _ref3;\n      const activeChain = chains.find(x => x.id === chainId2) ?? defaultChains2[0];\n      const chainWebSocketProviders = webSocketProviders_[activeChain.id];\n      if (!chainWebSocketProviders) return void 0;\n      const provider = chainWebSocketProviders[0]?.();\n      if (provider && activeChain.id === 42220) {\n        provider.formatter.formats.block = {\n          ...provider.formatter.formats.block,\n          difficulty: () => 0,\n          gasLimit: () => 0\n        };\n      }\n      return Object.assign(provider || {}, {\n        chains\n      });\n    }\n  };\n}\nfunction fallbackProvider(targetQuorum, minQuorum, providers_, _ref4) {\n  let {\n    stallTimeout\n  } = _ref4;\n  try {\n    return new providers.FallbackProvider(providers_.map((chainProvider, index) => {\n      const provider = chainProvider();\n      return {\n        provider,\n        priority: provider.priority ?? index,\n        stallTimeout: provider.stallTimeout ?? stallTimeout,\n        weight: provider.weight\n      };\n    }), targetQuorum);\n  } catch (error) {\n    if (error?.message?.includes(\"quorum will always fail; larger than total weight\")) {\n      if (targetQuorum === minQuorum) throw error;\n      return fallbackProvider(targetQuorum - 1, minQuorum, providers_, {\n        stallTimeout\n      });\n    }\n    throw error;\n  }\n}\n\n// src/utils/assertActiveChain.ts\nfunction assertActiveChain(_ref5) {\n  let {\n    chainId: chainId2,\n    signer\n  } = _ref5;\n  const {\n    chain: activeChain,\n    chains\n  } = getNetwork();\n  const activeChainId = activeChain?.id;\n  if (activeChainId && chainId2 !== activeChainId) {\n    throw new ChainMismatchError({\n      activeChain: chains.find(x => x.id === activeChainId)?.name ?? `Chain ${activeChainId}`,\n      targetChain: chains.find(x => x.id === chainId2)?.name ?? `Chain ${chainId2}`\n    });\n  }\n  if (signer) {\n    const signerChainId = signer.provider?.network?.chainId;\n    if (signerChainId && chainId2 !== signerChainId) {\n      const connector = getClient().connector;\n      throw new ChainNotConfiguredError({\n        chainId: chainId2,\n        connectorId: connector?.id ?? \"unknown\"\n      });\n    }\n  }\n}\n\n// src/utils/debounce.ts\nfunction debounce(fn) {\n  let waitTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let timeout;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    if (!waitTime) return fn(...args);\n    if (timeout) clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      timeout = null;\n      fn(...args);\n    }, waitTime);\n  };\n}\n\n// src/utils/deepEqual.ts\nfunction deepEqual(a, b) {\n  if (a === b) return true;\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    if (a.constructor !== b.constructor) return false;\n    let length;\n    let i;\n    if (Array.isArray(a) && Array.isArray(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;) if (!deepEqual(a[i], b[i])) return false;\n      return true;\n    }\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n    const keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n    for (i = length; i-- !== 0;) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    for (i = length; i-- !== 0;) {\n      const key = keys[i];\n      if (key && !deepEqual(a[key], b[key])) return false;\n    }\n    return true;\n  }\n  return a !== a && b !== b;\n}\n\n// src/utils/deserialize.ts\nimport { BigNumber } from \"ethers\";\nvar findAndReplace = (cacheRef, _ref6) => {\n  let {\n    find,\n    replace\n  } = _ref6;\n  if (cacheRef && find(cacheRef)) {\n    return replace(cacheRef);\n  }\n  if (typeof cacheRef !== \"object\") {\n    return cacheRef;\n  }\n  if (Array.isArray(cacheRef)) {\n    return cacheRef.map(item => findAndReplace(item, {\n      find,\n      replace\n    }));\n  }\n  if (cacheRef instanceof Object) {\n    return Object.entries(cacheRef).reduce((curr, _ref7) => {\n      let [key, value] = _ref7;\n      return {\n        ...curr,\n        [key]: findAndReplace(value, {\n          find,\n          replace\n        })\n      };\n    }, {});\n  }\n  return cacheRef;\n};\nfunction deserialize(cachedString) {\n  const cache = JSON.parse(cachedString);\n  const deserializedCacheWithBigNumbers = findAndReplace(cache, {\n    find: data => data.type === \"BigNumber\",\n    replace: data => BigNumber.from(data.hex)\n  });\n  return deserializedCacheWithBigNumbers;\n}\n\n// src/utils/normalizeFunctionName.ts\nimport { BigNumber as BigNumber2 } from \"ethers\";\nimport { FunctionFragment, isAddress } from \"ethers/lib/utils.js\";\nfunction normalizeFunctionName(_ref8) {\n  let {\n    contract,\n    functionName,\n    args = []\n  } = _ref8;\n  if (functionName in contract.functions) return functionName;\n  const argsLength = args?.length ?? 0;\n  const overloadFunctions = Object.keys(contract.functions).filter(x => x.startsWith(`${functionName}(`)).map(x => ({\n    name: x,\n    fragment: FunctionFragment.fromString(x)\n  })).filter(x => argsLength === x.fragment.inputs.length);\n  for (const overloadFunction of overloadFunctions) {\n    const matched = args.every((arg, index) => {\n      const abiParameter = overloadFunction.fragment.inputs[index];\n      return isArgOfType(arg, abiParameter);\n    });\n    if (matched) return overloadFunction.name;\n  }\n  return functionName;\n}\nfunction isArgOfType(arg, abiParameter) {\n  const argType = typeof arg;\n  const abiParameterType = abiParameter.type;\n  switch (abiParameterType) {\n    case \"address\":\n      return isAddress(arg);\n    case \"bool\":\n      return argType === \"boolean\";\n    case \"function\":\n      return argType === \"string\";\n    case \"string\":\n      return argType === \"string\";\n    default:\n      {\n        if (abiParameterType === \"tuple\" && \"components\" in abiParameter) return Object.values(abiParameter.components).every((component, index) => {\n          return isArgOfType(Object.values(arg)[index], component);\n        });\n        if (/^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(abiParameterType)) return argType === \"number\" || argType === \"bigint\" || BigNumber2.isBigNumber(arg);\n        if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(abiParameterType)) return argType === \"string\" || arg instanceof Uint8Array;\n        if (/[a-z]+[1-9]{0,3}(\\[[0-9]{0,}\\])+$/.test(abiParameterType)) {\n          return Array.isArray(arg) && arg.every(x => isArgOfType(x, {\n            ...abiParameter,\n            type: abiParameterType.replace(/(\\[[0-9]{0,}\\])$/, \"\")\n          }));\n        }\n        return false;\n      }\n  }\n}\n\n// src/utils/getInjectedName.ts\nfunction getInjectedName(ethereum) {\n  if (!ethereum) return \"Injected\";\n  const getName = provider => {\n    if (provider.isAvalanche) return \"Core Wallet\";\n    if (provider.isBitKeep) return \"BitKeep\";\n    if (provider.isBraveWallet) return \"Brave Wallet\";\n    if (provider.isCoinbaseWallet) return \"Coinbase Wallet\";\n    if (provider.isExodus) return \"Exodus\";\n    if (provider.isFrame) return \"Frame\";\n    if (provider.isKuCoinWallet) return \"KuCoin Wallet\";\n    if (provider.isMathWallet) return \"MathWallet\";\n    if (provider.isOneInchIOSWallet || provider.isOneInchAndroidWallet) return \"1inch Wallet\";\n    if (provider.isOpera) return \"Opera\";\n    if (provider.isPortal) return \"Ripio Portal\";\n    if (provider.isTally) return \"Tally\";\n    if (provider.isTokenPocket) return \"TokenPocket\";\n    if (provider.isTokenary) return \"Tokenary\";\n    if (provider.isTrust || provider.isTrustWallet) return \"Trust Wallet\";\n    if (provider.isMetaMask) return \"MetaMask\";\n  };\n  if (ethereum.providers?.length) {\n    const nameSet = /* @__PURE__ */new Set();\n    let unknownCount = 1;\n    for (const provider of ethereum.providers) {\n      let name = getName(provider);\n      if (!name) {\n        name = `Unknown Wallet #${unknownCount}`;\n        unknownCount += 1;\n      }\n      nameSet.add(name);\n    }\n    const names = [...nameSet];\n    if (names.length) return names;\n    return names[0] ?? \"Injected\";\n  }\n  return getName(ethereum) ?? \"Injected\";\n}\n\n// src/utils/logger.ts\nfunction logWarn(message) {\n  getClient()?.config.logger?.warn?.(message);\n}\n\n// src/utils/minimizeContractInterface.ts\nimport { Contract } from \"ethers\";\nimport { FormatTypes } from \"ethers/lib/utils.js\";\nfunction minimizeContractInterface(config) {\n  try {\n    const minimizedAbi = config.abi.filter(x => x.type === \"function\" && x.name === config.functionName);\n    if (minimizedAbi.length === 0) throw new Error(\"Invalid ABI\");\n    return minimizedAbi;\n  } catch (error) {\n    const abi = Contract.getInterface(config.abi).format(FormatTypes.full);\n    const minimizedInterface = Array.isArray(abi) ? abi : [abi];\n    return minimizedInterface.filter(i => i.includes(config.functionName));\n  }\n}\n\n// src/utils/normalizeChainId.ts\nfunction normalizeChainId(chainId2) {\n  if (typeof chainId2 === \"string\") return Number.parseInt(chainId2, chainId2.trim().substring(0, 2) === \"0x\" ? 16 : 10);\n  if (typeof chainId2 === \"bigint\") return Number(chainId2);\n  return chainId2;\n}\n\n// src/utils/parseContractResult.ts\nimport { Contract as Contract2 } from \"ethers\";\nfunction isPlainArray(value) {\n  return Array.isArray(value) && Object.keys(value).length === value.length;\n}\nfunction parseContractResult(_ref9) {\n  let {\n    abi,\n    data,\n    functionName\n  } = _ref9;\n  if (data && isPlainArray(data)) {\n    const iface = Contract2.getInterface(abi);\n    const fragment = iface.getFunction(functionName);\n    const isTuple = (fragment.outputs?.length || 0) > 1;\n    const data_ = isTuple ? data : [data];\n    const encodedResult = iface.encodeFunctionResult(functionName, data_);\n    const decodedResult = iface.decodeFunctionResult(functionName, encodedResult);\n    return isTuple ? decodedResult : decodedResult[0];\n  }\n  return data;\n}\n\n// src/utils/serialize.ts\nfunction getReferenceKey(keys, cutoff) {\n  return keys.slice(0, cutoff).join(\".\") || \".\";\n}\nfunction getCutoff(array, value) {\n  const {\n    length\n  } = array;\n  for (let index = 0; index < length; ++index) {\n    if (array[index] === value) {\n      return index + 1;\n    }\n  }\n  return 0;\n}\nfunction createReplacer(replacer, circularReplacer) {\n  const hasReplacer = typeof replacer === \"function\";\n  const hasCircularReplacer = typeof circularReplacer === \"function\";\n  const cache = [];\n  const keys = [];\n  return function replace(key, value) {\n    if (typeof value === \"object\") {\n      if (cache.length) {\n        const thisCutoff = getCutoff(cache, this);\n        if (thisCutoff === 0) {\n          cache[cache.length] = this;\n        } else {\n          cache.splice(thisCutoff);\n          keys.splice(thisCutoff);\n        }\n        keys[keys.length] = key;\n        const valueCutoff = getCutoff(cache, value);\n        if (valueCutoff !== 0) {\n          return hasCircularReplacer ? circularReplacer.call(this, key, value, getReferenceKey(keys, valueCutoff)) : `[ref=${getReferenceKey(keys, valueCutoff)}]`;\n        }\n      } else {\n        cache[0] = value;\n        keys[0] = key;\n      }\n    }\n    return hasReplacer ? replacer.call(this, key, value) : value;\n  };\n}\nfunction serialize(value, replacer, indent, circularReplacer) {\n  return JSON.stringify(value, createReplacer(replacer, circularReplacer), indent ?? void 0);\n}\n\n// src/connectors/base.ts\nimport { default as EventEmitter } from \"eventemitter3\";\n\n// src/constants/abis.ts\nvar erc20ABI = [{\n  type: \"event\",\n  name: \"Approval\",\n  inputs: [{\n    indexed: true,\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"value\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"event\",\n  name: \"Transfer\",\n  inputs: [{\n    indexed: true,\n    name: \"from\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"to\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"value\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"allowance\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    name: \"spender\",\n    type: \"address\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"approve\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }]\n}, {\n  type: \"function\",\n  name: \"balanceOf\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"account\",\n    type: \"address\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"decimals\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"uint8\"\n  }]\n}, {\n  type: \"function\",\n  name: \"name\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"string\"\n  }]\n}, {\n  type: \"function\",\n  name: \"symbol\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"string\"\n  }]\n}, {\n  type: \"function\",\n  name: \"totalSupply\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"transfer\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"recipient\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }]\n}, {\n  type: \"function\",\n  name: \"transferFrom\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"sender\",\n    type: \"address\"\n  }, {\n    name: \"recipient\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }]\n}];\nvar erc20ABI_bytes32 = [{\n  type: \"event\",\n  name: \"Approval\",\n  inputs: [{\n    indexed: true,\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"value\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"event\",\n  name: \"Transfer\",\n  inputs: [{\n    indexed: true,\n    name: \"from\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"to\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"value\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"allowance\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    name: \"spender\",\n    type: \"address\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"approve\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }]\n}, {\n  type: \"function\",\n  name: \"balanceOf\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"account\",\n    type: \"address\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"decimals\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"uint8\"\n  }]\n}, {\n  type: \"function\",\n  name: \"name\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"bytes32\"\n  }]\n}, {\n  type: \"function\",\n  name: \"symbol\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"bytes32\"\n  }]\n}, {\n  type: \"function\",\n  name: \"totalSupply\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"transfer\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"recipient\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }]\n}, {\n  type: \"function\",\n  name: \"transferFrom\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"sender\",\n    type: \"address\"\n  }, {\n    name: \"recipient\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }]\n}];\nvar erc721ABI = [{\n  type: \"event\",\n  name: \"Approval\",\n  inputs: [{\n    indexed: true,\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"tokenId\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"event\",\n  name: \"ApprovalForAll\",\n  inputs: [{\n    indexed: true,\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"operator\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"approved\",\n    type: \"bool\"\n  }]\n}, {\n  type: \"event\",\n  name: \"Transfer\",\n  inputs: [{\n    indexed: true,\n    name: \"from\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"to\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"tokenId\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"approve\",\n  stateMutability: \"payable\",\n  inputs: [{\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  outputs: []\n}, {\n  type: \"function\",\n  name: \"balanceOf\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"account\",\n    type: \"address\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"getApproved\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"address\"\n  }]\n}, {\n  type: \"function\",\n  name: \"isApprovedForAll\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    name: \"operator\",\n    type: \"address\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }]\n}, {\n  type: \"function\",\n  name: \"name\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"string\"\n  }]\n}, {\n  type: \"function\",\n  name: \"ownerOf\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }]\n}, {\n  type: \"function\",\n  name: \"safeTransferFrom\",\n  stateMutability: \"payable\",\n  inputs: [{\n    name: \"from\",\n    type: \"address\"\n  }, {\n    name: \"to\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  outputs: []\n}, {\n  type: \"function\",\n  name: \"safeTransferFrom\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"from\",\n    type: \"address\"\n  }, {\n    name: \"to\",\n    type: \"address\"\n  }, {\n    name: \"id\",\n    type: \"uint256\"\n  }, {\n    name: \"data\",\n    type: \"bytes\"\n  }],\n  outputs: []\n}, {\n  type: \"function\",\n  name: \"setApprovalForAll\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"operator\",\n    type: \"address\"\n  }, {\n    name: \"approved\",\n    type: \"bool\"\n  }],\n  outputs: []\n}, {\n  type: \"function\",\n  name: \"symbol\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"string\"\n  }]\n}, {\n  type: \"function\",\n  name: \"tokenByIndex\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"index\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"tokenByIndex\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    name: \"index\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"tokenId\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"tokenURI\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"string\"\n  }]\n}, {\n  type: \"function\",\n  name: \"totalSupply\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"transferFrom\",\n  stateMutability: \"payable\",\n  inputs: [{\n    name: \"sender\",\n    type: \"address\"\n  }, {\n    name: \"recipient\",\n    type: \"address\"\n  }, {\n    name: \"tokeId\",\n    type: \"uint256\"\n  }],\n  outputs: []\n}];\nvar multicallABI = [{\n  inputs: [{\n    components: [{\n      name: \"target\",\n      type: \"address\"\n    }, {\n      name: \"allowFailure\",\n      type: \"bool\"\n    }, {\n      name: \"callData\",\n      type: \"bytes\"\n    }],\n    name: \"calls\",\n    type: \"tuple[]\"\n  }],\n  name: \"aggregate3\",\n  outputs: [{\n    components: [{\n      name: \"success\",\n      type: \"bool\"\n    }, {\n      name: \"returnData\",\n      type: \"bytes\"\n    }],\n    name: \"returnData\",\n    type: \"tuple[]\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}];\nvar erc4626ABI = [{\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"value\",\n    type: \"uint256\"\n  }],\n  name: \"Approval\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: \"sender\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"receiver\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"assets\",\n    type: \"uint256\"\n  }, {\n    indexed: false,\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  name: \"Deposit\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: \"from\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"to\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"value\",\n    type: \"uint256\"\n  }],\n  name: \"Transfer\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: \"sender\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"receiver\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"assets\",\n    type: \"uint256\"\n  }, {\n    indexed: false,\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  name: \"Withdraw\",\n  type: \"event\"\n}, {\n  inputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    name: \"spender\",\n    type: \"address\"\n  }],\n  name: \"allowance\",\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  name: \"approve\",\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"asset\",\n  outputs: [{\n    name: \"assetTokenAddress\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"account\",\n    type: \"address\"\n  }],\n  name: \"balanceOf\",\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  name: \"convertToAssets\",\n  outputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  name: \"convertToShares\",\n  outputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }, {\n    name: \"receiver\",\n    type: \"address\"\n  }],\n  name: \"deposit\",\n  outputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"caller\",\n    type: \"address\"\n  }],\n  name: \"maxDeposit\",\n  outputs: [{\n    name: \"maxAssets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"caller\",\n    type: \"address\"\n  }],\n  name: \"maxMint\",\n  outputs: [{\n    name: \"maxShares\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }],\n  name: \"maxRedeem\",\n  outputs: [{\n    name: \"maxShares\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }],\n  name: \"maxWithdraw\",\n  outputs: [{\n    name: \"maxAssets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }, {\n    name: \"receiver\",\n    type: \"address\"\n  }],\n  name: \"mint\",\n  outputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  name: \"previewDeposit\",\n  outputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  name: \"previewMint\",\n  outputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  name: \"previewRedeem\",\n  outputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  name: \"previewWithdraw\",\n  outputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }, {\n    name: \"receiver\",\n    type: \"address\"\n  }, {\n    name: \"owner\",\n    type: \"address\"\n  }],\n  name: \"redeem\",\n  outputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"totalAssets\",\n  outputs: [{\n    name: \"totalManagedAssets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"totalSupply\",\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"to\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  name: \"transfer\",\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"from\",\n    type: \"address\"\n  }, {\n    name: \"to\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  name: \"transferFrom\",\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }, {\n    name: \"receiver\",\n    type: \"address\"\n  }, {\n    name: \"owner\",\n    type: \"address\"\n  }],\n  name: \"withdraw\",\n  outputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}];\n\n// src/constants/units.ts\nvar units = [\"wei\", \"kwei\", \"mwei\", \"gwei\", \"szabo\", \"finney\", \"ether\"];\n\n// src/connectors/base.ts\nvar Connector = class extends EventEmitter {\n  constructor(_ref10) {\n    let {\n      chains = defaultChains,\n      options\n    } = _ref10;\n    super();\n    this.chains = chains;\n    this.options = options;\n  }\n  getBlockExplorerUrls(chain2) {\n    const {\n      default: blockExplorer,\n      ...blockExplorers\n    } = chain2.blockExplorers ?? {};\n    if (blockExplorer) return [blockExplorer.url, ...Object.values(blockExplorers).map(x => x.url)];\n  }\n  isChainUnsupported(chainId2) {\n    return !this.chains.some(x => x.id === chainId2);\n  }\n};\n\n// src/connectors/injected.ts\nvar _provider, _switchingChains;\nvar InjectedConnector = class extends Connector {\n  constructor() {\n    let {\n      chains,\n      options: options_\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const options = {\n      shimDisconnect: true,\n      shimChainChangedDisconnect: true,\n      getProvider: () => typeof window !== \"undefined\" ? window.ethereum : void 0,\n      ...options_\n    };\n    super({\n      chains,\n      options\n    });\n    __privateAdd(this, _provider, void 0);\n    __privateAdd(this, _switchingChains, void 0);\n    this.shimDisconnectKey = \"injected.shimDisconnect\";\n    this.onAccountsChanged = accounts => {\n      if (accounts.length === 0) this.emit(\"disconnect\");else this.emit(\"change\", {\n        account: getAddress(accounts[0])\n      });\n    };\n    this.onChainChanged = chainId2 => {\n      const id = normalizeChainId(chainId2);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    };\n    this.onDisconnect = () => {\n      if (this.options.shimChainChangedDisconnect && __privateGet(this, _switchingChains)) {\n        __privateSet(this, _switchingChains, false);\n        return;\n      }\n      this.emit(\"disconnect\");\n      if (this.options.shimDisconnect) getClient().storage?.removeItem(this.shimDisconnectKey);\n    };\n    const provider = options.getProvider();\n    if (typeof options.name === \"string\") this.name = options.name;else if (provider) {\n      const detectedName = getInjectedName(provider);\n      if (options.name) this.name = options.name(detectedName);else {\n        if (typeof detectedName === \"string\") this.name = detectedName;else this.name = detectedName[0];\n      }\n    } else this.name = \"Injected\";\n    this.id = \"injected\";\n    this.ready = !!provider;\n  }\n  async connect() {\n    let {\n      chainId: chainId2\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    try {\n      const provider = await this.getProvider();\n      if (!provider) throw new ConnectorNotFoundError();\n      if (provider.on) {\n        provider.on(\"accountsChanged\", this.onAccountsChanged);\n        provider.on(\"chainChanged\", this.onChainChanged);\n        provider.on(\"disconnect\", this.onDisconnect);\n      }\n      this.emit(\"message\", {\n        type: \"connecting\"\n      });\n      const accounts = await provider.request({\n        method: \"eth_requestAccounts\"\n      });\n      const account = getAddress(accounts[0]);\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n      if (chainId2 && id !== chainId2) {\n        const chain2 = await this.switchChain(chainId2);\n        id = chain2.id;\n        unsupported = this.isChainUnsupported(id);\n      }\n      if (this.options.shimDisconnect) getClient().storage?.setItem(this.shimDisconnectKey, true);\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider\n      };\n    } catch (error) {\n      if (this.isUserRejectedRequestError(error)) throw new UserRejectedRequestError(error);\n      if (error.code === -32002) throw new ResourceUnavailableError(error);\n      throw error;\n    }\n  }\n  async disconnect() {\n    const provider = await this.getProvider();\n    if (!provider?.removeListener) return;\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\n    provider.removeListener(\"disconnect\", this.onDisconnect);\n    if (this.options.shimDisconnect) getClient().storage?.removeItem(this.shimDisconnectKey);\n  }\n  async getAccount() {\n    const provider = await this.getProvider();\n    if (!provider) throw new ConnectorNotFoundError();\n    const accounts = await provider.request({\n      method: \"eth_accounts\"\n    });\n    return getAddress(accounts[0]);\n  }\n  async getChainId() {\n    const provider = await this.getProvider();\n    if (!provider) throw new ConnectorNotFoundError();\n    return provider.request({\n      method: \"eth_chainId\"\n    }).then(normalizeChainId);\n  }\n  async getProvider() {\n    const provider = this.options.getProvider();\n    if (provider) __privateSet(this, _provider, provider);\n    return __privateGet(this, _provider);\n  }\n  async getSigner() {\n    let {\n      chainId: chainId2\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const [provider, account] = await Promise.all([this.getProvider(), this.getAccount()]);\n    return new providers2.Web3Provider(provider, chainId2).getSigner(account);\n  }\n  async isAuthorized() {\n    try {\n      if (this.options.shimDisconnect && !getClient().storage?.getItem(this.shimDisconnectKey)) return false;\n      const provider = await this.getProvider();\n      if (!provider) throw new ConnectorNotFoundError();\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n  async switchChain(chainId2) {\n    if (this.options.shimChainChangedDisconnect) __privateSet(this, _switchingChains, true);\n    const provider = await this.getProvider();\n    if (!provider) throw new ConnectorNotFoundError();\n    const id = hexValue(chainId2);\n    try {\n      await provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId: id\n        }]\n      });\n      return this.chains.find(x => x.id === chainId2) ?? {\n        id: chainId2,\n        name: `Chain ${id}`,\n        network: `${id}`,\n        rpcUrls: {\n          default: \"\"\n        }\n      };\n    } catch (error) {\n      const chain2 = this.chains.find(x => x.id === chainId2);\n      if (!chain2) throw new ChainNotConfiguredError({\n        chainId: chainId2,\n        connectorId: this.id\n      });\n      if (error.code === 4902 || error?.data?.originalError?.code === 4902) {\n        try {\n          await provider.request({\n            method: \"wallet_addEthereumChain\",\n            params: [{\n              chainId: id,\n              chainName: chain2.name,\n              nativeCurrency: chain2.nativeCurrency,\n              rpcUrls: [chain2.rpcUrls.public ?? chain2.rpcUrls.default],\n              blockExplorerUrls: this.getBlockExplorerUrls(chain2)\n            }]\n          });\n          return chain2;\n        } catch (addError) {\n          if (this.isUserRejectedRequestError(addError)) throw new UserRejectedRequestError(error);\n          throw new AddChainError();\n        }\n      }\n      if (this.isUserRejectedRequestError(error)) throw new UserRejectedRequestError(error);\n      throw new SwitchChainError(error);\n    }\n  }\n  async watchAsset(_ref11) {\n    let {\n      address,\n      decimals = 18,\n      image,\n      symbol\n    } = _ref11;\n    const provider = await this.getProvider();\n    if (!provider) throw new ConnectorNotFoundError();\n    return provider.request({\n      method: \"wallet_watchAsset\",\n      params: {\n        type: \"ERC20\",\n        options: {\n          address,\n          decimals,\n          image,\n          symbol\n        }\n      }\n    });\n  }\n  isUserRejectedRequestError(error) {\n    return error.code === 4001;\n  }\n};\n_provider = new WeakMap();\n_switchingChains = new WeakMap();\n\n// src/storage.ts\nvar noopStorage = {\n  getItem: _key => \"\",\n  setItem: (_key, _value) => null,\n  removeItem: _key => null\n};\nfunction createStorage(_ref12) {\n  let {\n    deserialize: deserialize2 = deserialize,\n    key: prefix = \"wagmi\",\n    serialize: serialize2 = serialize,\n    storage\n  } = _ref12;\n  return {\n    ...storage,\n    getItem: function (key) {\n      let defaultState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      const value = storage.getItem(`${prefix}.${key}`);\n      try {\n        return value ? deserialize2(value) : defaultState;\n      } catch (error) {\n        console.warn(error);\n        return defaultState;\n      }\n    },\n    setItem: (key, value) => {\n      if (value === null) {\n        storage.removeItem(`${prefix}.${key}`);\n      } else {\n        try {\n          storage.setItem(`${prefix}.${key}`, serialize2(value));\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    },\n    removeItem: key => storage.removeItem(`${prefix}.${key}`)\n  };\n}\n\n// src/client.ts\nvar storeKey = \"store\";\nvar _isAutoConnecting, _lastUsedConnector, _addEffects, addEffects_fn;\nvar Client = class {\n  constructor(_ref13) {\n    let {\n      autoConnect = false,\n      connectors = [new InjectedConnector()],\n      provider,\n      storage = createStorage({\n        storage: typeof window !== \"undefined\" ? window.localStorage : noopStorage\n      }),\n      logger = {\n        warn: console.warn\n      },\n      webSocketProvider\n    } = _ref13;\n    __privateAdd(this, _addEffects);\n    this.providers = /* @__PURE__ */new Map();\n    this.webSocketProviders = /* @__PURE__ */new Map();\n    __privateAdd(this, _isAutoConnecting, void 0);\n    __privateAdd(this, _lastUsedConnector, void 0);\n    this.config = {\n      autoConnect,\n      connectors,\n      logger,\n      provider,\n      storage,\n      webSocketProvider\n    };\n    let status = \"disconnected\";\n    let chainId2;\n    if (autoConnect) {\n      try {\n        const rawState = storage.getItem(storeKey, \"\");\n        const data = JSON.parse(rawState || \"{}\")?.state?.data;\n        status = data?.account ? \"reconnecting\" : \"connecting\";\n        chainId2 = data?.chain?.id;\n      } catch (_error) {}\n    }\n    this.store = create(subscribeWithSelector(persist(() => ({\n      connectors: typeof connectors === \"function\" ? connectors() : connectors,\n      provider: this.getProvider({\n        chainId: chainId2\n      }),\n      status,\n      webSocketProvider: this.getWebSocketProvider({\n        chainId: chainId2\n      })\n    }), {\n      deserialize: state => state,\n      name: storeKey,\n      getStorage: () => storage,\n      partialize: state => ({\n        ...(autoConnect && {\n          data: {\n            account: state?.data?.account,\n            chain: state?.data?.chain\n          }\n        }),\n        chains: state?.chains\n      }),\n      serialize: state => state,\n      version: 2\n    })));\n    this.storage = storage;\n    __privateSet(this, _lastUsedConnector, storage?.getItem(\"wallet\"));\n    __privateMethod(this, _addEffects, addEffects_fn).call(this);\n    if (autoConnect && typeof window !== \"undefined\") setTimeout(async () => await this.autoConnect(), 0);\n  }\n  get chains() {\n    return this.store.getState().chains;\n  }\n  get connectors() {\n    return this.store.getState().connectors;\n  }\n  get connector() {\n    return this.store.getState().connector;\n  }\n  get data() {\n    return this.store.getState().data;\n  }\n  get error() {\n    return this.store.getState().error;\n  }\n  get lastUsedChainId() {\n    return this.data?.chain?.id;\n  }\n  get provider() {\n    return this.store.getState().provider;\n  }\n  get status() {\n    return this.store.getState().status;\n  }\n  get subscribe() {\n    return this.store.subscribe;\n  }\n  get webSocketProvider() {\n    return this.store.getState().webSocketProvider;\n  }\n  setState(updater) {\n    const newState = typeof updater === \"function\" ? updater(this.store.getState()) : updater;\n    this.store.setState(newState, true);\n  }\n  clearState() {\n    this.setState(x => ({\n      ...x,\n      chains: void 0,\n      connector: void 0,\n      data: void 0,\n      error: void 0,\n      status: \"disconnected\"\n    }));\n  }\n  async destroy() {\n    if (this.connector) await this.connector.disconnect?.();\n    __privateSet(this, _isAutoConnecting, false);\n    this.clearState();\n    this.store.destroy();\n  }\n  async autoConnect() {\n    if (__privateGet(this, _isAutoConnecting)) return;\n    __privateSet(this, _isAutoConnecting, true);\n    this.setState(x => ({\n      ...x,\n      status: x.data?.account ? \"reconnecting\" : \"connecting\"\n    }));\n    const sorted = __privateGet(this, _lastUsedConnector) ? [...this.connectors].sort(x => x.id === __privateGet(this, _lastUsedConnector) ? -1 : 1) : this.connectors;\n    let connected = false;\n    for (const connector of sorted) {\n      if (!connector.ready || !connector.isAuthorized) continue;\n      const isAuthorized = await connector.isAuthorized();\n      if (!isAuthorized) continue;\n      const data = await connector.connect();\n      this.setState(x => ({\n        ...x,\n        connector,\n        chains: connector?.chains,\n        data,\n        status: \"connected\"\n      }));\n      connected = true;\n      break;\n    }\n    if (!connected) this.setState(x => ({\n      ...x,\n      data: void 0,\n      status: \"disconnected\"\n    }));\n    __privateSet(this, _isAutoConnecting, false);\n    return this.data;\n  }\n  getProvider() {\n    let {\n      bust,\n      chainId: chainId2\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let provider_ = this.providers.get(chainId2 ?? -1);\n    if (provider_ && !bust) return provider_;\n    const {\n      provider\n    } = this.config;\n    provider_ = typeof provider === \"function\" ? provider({\n      chainId: chainId2\n    }) : provider;\n    this.providers.set(chainId2 ?? -1, provider_);\n    return provider_;\n  }\n  getWebSocketProvider() {\n    let {\n      bust,\n      chainId: chainId2\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let webSocketProvider_ = this.webSocketProviders.get(chainId2 ?? -1);\n    if (webSocketProvider_ && !bust) return webSocketProvider_;\n    const {\n      webSocketProvider\n    } = this.config;\n    webSocketProvider_ = typeof webSocketProvider === \"function\" ? webSocketProvider({\n      chainId: chainId2\n    }) : webSocketProvider;\n    if (webSocketProvider_) this.webSocketProviders.set(chainId2 ?? -1, webSocketProvider_);\n    return webSocketProvider_;\n  }\n  setLastUsedConnector() {\n    let lastUsedConnector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    this.storage?.setItem(\"wallet\", lastUsedConnector);\n  }\n};\n_isAutoConnecting = new WeakMap();\n_lastUsedConnector = new WeakMap();\n_addEffects = new WeakSet();\naddEffects_fn = function () {\n  const onChange = data => {\n    this.setState(x => ({\n      ...x,\n      data: {\n        ...x.data,\n        ...data\n      }\n    }));\n  };\n  const onDisconnect = () => {\n    this.clearState();\n  };\n  const onError = error => {\n    this.setState(x => ({\n      ...x,\n      error\n    }));\n  };\n  this.store.subscribe(_ref14 => {\n    let {\n      connector\n    } = _ref14;\n    return connector;\n  }, (connector, prevConnector) => {\n    prevConnector?.off?.(\"change\", onChange);\n    prevConnector?.off?.(\"disconnect\", onDisconnect);\n    prevConnector?.off?.(\"error\", onError);\n    if (!connector) return;\n    connector.on?.(\"change\", onChange);\n    connector.on?.(\"disconnect\", onDisconnect);\n    connector.on?.(\"error\", onError);\n  });\n  const {\n    provider,\n    webSocketProvider\n  } = this.config;\n  const subscribeProvider = typeof provider === \"function\";\n  const subscribeWebSocketProvider = typeof webSocketProvider === \"function\";\n  if (subscribeProvider || subscribeWebSocketProvider) this.store.subscribe(_ref15 => {\n    let {\n      data\n    } = _ref15;\n    return data?.chain?.id;\n  }, chainId2 => {\n    this.setState(x => ({\n      ...x,\n      provider: this.getProvider({\n        bust: true,\n        chainId: chainId2\n      }),\n      webSocketProvider: this.getWebSocketProvider({\n        bust: true,\n        chainId: chainId2\n      })\n    }));\n  });\n};\nvar client;\nfunction createClient(config) {\n  const client_ = new Client(config);\n  client = client_;\n  return client_;\n}\nfunction getClient() {\n  if (!client) {\n    throw new Error(\"No wagmi client found. Ensure you have set up a client: https://wagmi.sh/react/client\");\n  }\n  return client;\n}\n\n// src/actions/accounts/connect.ts\nasync function connect(_ref16) {\n  let {\n    chainId: chainId2,\n    connector\n  } = _ref16;\n  const client2 = getClient();\n  const activeConnector = client2.connector;\n  if (activeConnector && connector.id === activeConnector.id) throw new ConnectorAlreadyConnectedError();\n  try {\n    client2.setState(x => ({\n      ...x,\n      status: \"connecting\"\n    }));\n    const data = await connector.connect({\n      chainId: chainId2\n    });\n    client2.setLastUsedConnector(connector.id);\n    client2.setState(x => ({\n      ...x,\n      connector,\n      chains: connector?.chains,\n      data,\n      status: \"connected\"\n    }));\n    client2.storage.setItem(\"connected\", true);\n    return {\n      ...data,\n      connector\n    };\n  } catch (err) {\n    client2.setState(x => {\n      return {\n        ...x,\n        status: x.connector ? \"connected\" : \"disconnected\"\n      };\n    });\n    throw err;\n  }\n}\n\n// src/actions/accounts/disconnect.ts\nasync function disconnect() {\n  const client2 = getClient();\n  if (client2.connector) await client2.connector.disconnect();\n  client2.clearState();\n  client2.storage.removeItem(\"connected\");\n}\n\n// src/actions/accounts/fetchBalance.ts\nimport { formatUnits as formatUnits2, parseBytes32String as parseBytes32String2 } from \"ethers/lib/utils.js\";\n\n// src/actions/contracts/fetchToken.ts\nimport { formatUnits, parseBytes32String } from \"ethers/lib/utils.js\";\nasync function fetchToken(_ref17) {\n  let {\n    address,\n    chainId: chainId2,\n    formatUnits: units2 = \"ether\"\n  } = _ref17;\n  async function fetchToken_(_ref18) {\n    let {\n      abi\n    } = _ref18;\n    const erc20Config = {\n      address,\n      abi,\n      chainId: chainId2\n    };\n    const [decimals, name, symbol, totalSupply] = await readContracts({\n      allowFailure: false,\n      contracts: [{\n        ...erc20Config,\n        functionName: \"decimals\"\n      }, {\n        ...erc20Config,\n        functionName: \"name\"\n      }, {\n        ...erc20Config,\n        functionName: \"symbol\"\n      }, {\n        ...erc20Config,\n        functionName: \"totalSupply\"\n      }]\n    });\n    return {\n      address,\n      decimals,\n      name,\n      symbol,\n      totalSupply: {\n        formatted: formatUnits(totalSupply, units2),\n        value: totalSupply\n      }\n    };\n  }\n  try {\n    return await fetchToken_({\n      abi: erc20ABI\n    });\n  } catch (err) {\n    if (err instanceof ContractResultDecodeError) {\n      const {\n        name,\n        symbol,\n        ...rest\n      } = await fetchToken_({\n        abi: erc20ABI_bytes32\n      });\n      return {\n        name: parseBytes32String(name),\n        symbol: parseBytes32String(symbol),\n        ...rest\n      };\n    }\n    throw err;\n  }\n}\n\n// src/actions/contracts/getContract.ts\nimport { Contract as EthersContract } from \"ethers\";\nfunction getContract(_ref19) {\n  let {\n    address,\n    abi,\n    signerOrProvider\n  } = _ref19;\n  return new EthersContract(address, abi, signerOrProvider);\n}\n\n// src/actions/contracts/prepareWriteContract.ts\nasync function prepareWriteContract(_ref20) {\n  let {\n    abi,\n    address,\n    args,\n    chainId: chainId2,\n    functionName,\n    overrides,\n    signer: signer_\n  } = _ref20;\n  const signer = signer_ ?? (await fetchSigner({\n    chainId: chainId2\n  }));\n  if (!signer) throw new ConnectorNotFoundError();\n  if (chainId2) assertActiveChain({\n    chainId: chainId2,\n    signer\n  });\n  const contract = getContract({\n    address,\n    abi,\n    signerOrProvider: signer\n  });\n  const normalizedFunctionName = normalizeFunctionName({\n    contract,\n    functionName,\n    args\n  });\n  const populateTransactionFn = contract.populateTransaction[normalizedFunctionName];\n  if (!populateTransactionFn) throw new ContractMethodDoesNotExistError({\n    address,\n    functionName: normalizedFunctionName\n  });\n  const params = [...(args ?? []), ...(overrides ? [overrides] : [])];\n  const unsignedTransaction = await populateTransactionFn(...params);\n  const gasLimit = unsignedTransaction.gasLimit || (await signer.estimateGas(unsignedTransaction));\n  const minimizedAbi = minimizeContractInterface({\n    abi,\n    functionName\n  });\n  return {\n    abi: minimizedAbi,\n    address,\n    chainId: chainId2,\n    functionName,\n    mode: \"prepared\",\n    request: {\n      ...unsignedTransaction,\n      gasLimit\n    }\n  };\n}\n\n// src/actions/providers/getProvider.ts\nfunction getProvider() {\n  let {\n    chainId: chainId2\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const client2 = getClient();\n  if (chainId2) return client2.getProvider({\n    chainId: chainId2\n  }) || client2.provider;\n  return client2.provider;\n}\n\n// src/actions/providers/getWebSocketProvider.ts\nfunction getWebSocketProvider() {\n  let {\n    chainId: chainId2\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const client2 = getClient();\n  if (chainId2) return client2.getWebSocketProvider({\n    chainId: chainId2\n  }) || client2.webSocketProvider;\n  return client2.webSocketProvider;\n}\n\n// src/actions/providers/watchProvider.ts\nfunction watchProvider(args, callback) {\n  const client2 = getClient();\n  const handleChange = async () => callback(getProvider(args));\n  const unsubscribe = client2.subscribe(_ref21 => {\n    let {\n      provider\n    } = _ref21;\n    return provider;\n  }, handleChange);\n  return unsubscribe;\n}\n\n// src/actions/providers/watchWebSocketProvider.ts\nfunction watchWebSocketProvider(args, callback) {\n  const client2 = getClient();\n  const handleChange = async () => callback(getWebSocketProvider(args));\n  const unsubscribe = client2.subscribe(_ref22 => {\n    let {\n      webSocketProvider\n    } = _ref22;\n    return webSocketProvider;\n  }, handleChange);\n  return unsubscribe;\n}\n\n// src/actions/contracts/multicall.ts\nasync function multicall(_ref23) {\n  let {\n    allowFailure = true,\n    chainId: chainId2,\n    contracts,\n    overrides\n  } = _ref23;\n  const provider = getProvider({\n    chainId: chainId2\n  });\n  if (!provider.chains) throw new ProviderChainsNotFound();\n  const chain2 = provider.chains.find(chain3 => chain3.id === chainId2) || provider.chains[0];\n  if (!chain2) throw new ProviderChainsNotFound();\n  if (!chain2?.multicall) throw new ChainDoesNotSupportMulticallError({\n    chain: chain2\n  });\n  if (typeof overrides?.blockTag === \"number\" && overrides?.blockTag < chain2.multicall.blockCreated) throw new ChainDoesNotSupportMulticallError({\n    blockNumber: overrides?.blockTag,\n    chain: chain2\n  });\n  const multicallContract = getContract({\n    address: chain2.multicall.address,\n    abi: multicallABI,\n    signerOrProvider: provider\n  });\n  const calls = contracts.map(_ref24 => {\n    let {\n      address,\n      abi,\n      functionName,\n      ...config\n    } = _ref24;\n    const {\n      args\n    } = config || {};\n    const contract = getContract({\n      address,\n      abi\n    });\n    const params2 = args ?? [];\n    const normalizedFunctionName = normalizeFunctionName({\n      contract,\n      functionName,\n      args\n    });\n    try {\n      const contractFunction = contract[normalizedFunctionName];\n      if (!contractFunction) logWarn(`\"${normalizedFunctionName}\" is not in the interface for contract \"${address}\"`);\n      const callData = contract.interface.encodeFunctionData(normalizedFunctionName, params2);\n      return {\n        target: address,\n        allowFailure,\n        callData\n      };\n    } catch (err) {\n      if (!allowFailure) throw err;\n      return {\n        target: address,\n        allowFailure,\n        callData: \"0x\"\n      };\n    }\n  });\n  const params = [...[calls], ...(overrides ? [overrides] : [])];\n  const results = await multicallContract.aggregate3(...params);\n  return results.map((_ref25, i) => {\n    let {\n      returnData,\n      success\n    } = _ref25;\n    const {\n      address,\n      abi,\n      args,\n      functionName\n    } = contracts[i];\n    const contract = getContract({\n      address,\n      abi\n    });\n    const normalizedFunctionName = normalizeFunctionName({\n      contract,\n      functionName,\n      args\n    });\n    if (!success) {\n      let error;\n      try {\n        contract.interface.decodeFunctionResult(normalizedFunctionName, returnData);\n      } catch (err) {\n        error = new ContractMethodRevertedError({\n          address,\n          args,\n          chainId: chain2.id,\n          functionName: normalizedFunctionName,\n          errorMessage: err.message\n        });\n        if (!allowFailure) throw error;\n        logWarn(error.message);\n      }\n      return null;\n    }\n    if (returnData === \"0x\") {\n      const error = new ContractMethodNoResultError({\n        address,\n        args,\n        chainId: chain2.id,\n        functionName: normalizedFunctionName\n      });\n      if (!allowFailure) throw error;\n      logWarn(error.message);\n      return null;\n    }\n    try {\n      const result = contract.interface.decodeFunctionResult(normalizedFunctionName, returnData);\n      return Array.isArray(result) && result.length === 1 ? result[0] : result;\n    } catch (err) {\n      const error = new ContractResultDecodeError({\n        address,\n        args,\n        chainId: chain2.id,\n        functionName: normalizedFunctionName,\n        errorMessage: err.message\n      });\n      if (!allowFailure) throw error;\n      logWarn(error.message);\n      return null;\n    }\n  });\n}\n\n// src/actions/contracts/readContract.ts\nasync function readContract(_ref26) {\n  let {\n    address,\n    args,\n    chainId: chainId2,\n    abi,\n    functionName,\n    overrides\n  } = _ref26;\n  const provider = getProvider({\n    chainId: chainId2\n  });\n  const contract = getContract({\n    address,\n    abi,\n    signerOrProvider: provider\n  });\n  const normalizedFunctionName = normalizeFunctionName({\n    contract,\n    functionName,\n    args\n  });\n  const contractFunction = contract[normalizedFunctionName];\n  if (!contractFunction) throw new ContractMethodDoesNotExistError({\n    address,\n    functionName: normalizedFunctionName\n  });\n  const params = [...(args ?? []), ...(overrides ? [overrides] : [])];\n  return contractFunction?.(...params);\n}\n\n// src/actions/contracts/readContracts.ts\nasync function readContracts(_ref27) {\n  let {\n    allowFailure = true,\n    contracts,\n    overrides\n  } = _ref27;\n  try {\n    const provider = getProvider();\n    const contractsByChainId = contracts.reduce((contracts2, contract, index) => {\n      const chainId2 = contract.chainId ?? provider.network.chainId;\n      return {\n        ...contracts2,\n        [chainId2]: [...(contracts2[chainId2] || []), {\n          contract,\n          index\n        }]\n      };\n    }, {});\n    const promises = () => Object.entries(contractsByChainId).map(_ref28 => {\n      let [chainId2, contracts2] = _ref28;\n      return multicall({\n        allowFailure,\n        chainId: parseInt(chainId2),\n        contracts: contracts2.map(_ref29 => {\n          let {\n            contract\n          } = _ref29;\n          return contract;\n        }),\n        overrides\n      });\n    });\n    let multicallResults;\n    if (allowFailure) {\n      multicallResults = (await Promise.allSettled(promises())).map(result => {\n        if (result.status === \"fulfilled\") return result.value;\n        if (result.reason instanceof ChainDoesNotSupportMulticallError) {\n          logWarn(result.reason.message);\n          throw result.reason;\n        }\n        return null;\n      }).flat();\n    } else {\n      multicallResults = (await Promise.all(promises())).flat();\n    }\n    const resultIndexes = Object.values(contractsByChainId).map(contracts2 => contracts2.map(_ref30 => {\n      let {\n        index\n      } = _ref30;\n      return index;\n    })).flat();\n    return multicallResults.reduce((results, result, index) => {\n      if (results) results[resultIndexes[index]] = result;\n      return results;\n    }, []);\n  } catch (err) {\n    if (err instanceof ContractResultDecodeError) throw err;\n    if (err instanceof ContractMethodNoResultError) throw err;\n    if (err instanceof ContractMethodRevertedError) throw err;\n    const promises = () => contracts.map(contract => readContract({\n      ...contract,\n      overrides\n    }));\n    if (allowFailure) return (await Promise.allSettled(promises())).map((result, i) => {\n      if (result.status === \"fulfilled\") return result.value;\n      const {\n        address,\n        args,\n        chainId: chainId2,\n        functionName\n      } = contracts[i];\n      const error = new ContractMethodRevertedError({\n        address,\n        functionName,\n        chainId: chainId2 ?? mainnet.id,\n        args,\n        errorMessage: result.reason\n      });\n      logWarn(error.message);\n      return null;\n    });\n    return await Promise.all(promises());\n  }\n}\n\n// src/actions/contracts/watchContractEvent.ts\nimport shallow from \"zustand/shallow\";\nfunction watchContractEvent(_ref31, callback) {\n  let {\n    address,\n    abi,\n    chainId: chainId2,\n    eventName,\n    once\n  } = _ref31;\n  const handler = function () {\n    return callback(...arguments);\n  };\n  let contract;\n  const watchEvent = async () => {\n    if (contract) contract?.off(eventName, handler);\n    const signerOrProvider = getWebSocketProvider({\n      chainId: chainId2\n    }) || getProvider({\n      chainId: chainId2\n    });\n    contract = getContract({\n      address,\n      abi,\n      signerOrProvider\n    });\n    if (once) contract.once(eventName, handler);else contract.on(eventName, handler);\n  };\n  watchEvent();\n  const client2 = getClient();\n  const unsubscribe = client2.subscribe(_ref32 => {\n    let {\n      provider,\n      webSocketProvider\n    } = _ref32;\n    return {\n      provider,\n      webSocketProvider\n    };\n  }, watchEvent, {\n    equalityFn: shallow\n  });\n  return () => {\n    contract?.off(eventName, handler);\n    unsubscribe();\n  };\n}\n\n// src/actions/network-status/watchBlockNumber.ts\nimport shallow2 from \"zustand/shallow\";\n\n// src/actions/network-status/fetchBlockNumber.ts\nasync function fetchBlockNumber() {\n  let {\n    chainId: chainId2\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const provider = getProvider({\n    chainId: chainId2\n  });\n  const blockNumber = await provider.getBlockNumber();\n  return blockNumber;\n}\n\n// src/actions/network-status/watchBlockNumber.ts\nfunction watchBlockNumber(args, callback) {\n  const debouncedCallback = debounce(callback, 1);\n  let previousProvider;\n  const createListener = provider => {\n    if (previousProvider) {\n      previousProvider?.off(\"block\", debouncedCallback);\n    }\n    provider.on(\"block\", debouncedCallback);\n    previousProvider = provider;\n  };\n  const provider_ = getWebSocketProvider({\n    chainId: args.chainId\n  }) ?? getProvider({\n    chainId: args.chainId\n  });\n  if (args.listen) createListener(provider_);\n  let active = true;\n  const client2 = getClient();\n  const unsubscribe = client2.subscribe(_ref33 => {\n    let {\n      provider,\n      webSocketProvider\n    } = _ref33;\n    return {\n      provider,\n      webSocketProvider\n    };\n  }, async _ref34 => {\n    let {\n      provider,\n      webSocketProvider\n    } = _ref34;\n    const provider_2 = webSocketProvider ?? provider;\n    if (args.listen && !args.chainId && provider_2) {\n      createListener(provider_2);\n    }\n    const blockNumber = await fetchBlockNumber({\n      chainId: args.chainId\n    });\n    if (!active) return;\n    callback(blockNumber);\n  }, {\n    equalityFn: shallow2\n  });\n  return () => {\n    active = false;\n    unsubscribe();\n    provider_?.off(\"block\", debouncedCallback);\n    previousProvider?.off(\"block\", debouncedCallback);\n  };\n}\n\n// src/actions/contracts/watchMulticall.ts\nfunction watchMulticall(config, callback) {\n  const client2 = getClient();\n  const handleChange = async () => callback(await multicall(config));\n  const unwatch = config.listenToBlock ? watchBlockNumber({\n    listen: true\n  }, handleChange) : void 0;\n  const unsubscribe = client2.subscribe(_ref35 => {\n    let {\n      provider\n    } = _ref35;\n    return provider;\n  }, handleChange);\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/actions/contracts/watchReadContract.ts\nfunction watchReadContract(config, callback) {\n  const client2 = getClient();\n  const handleChange = async () => callback(await readContract(config));\n  const unwatch = config.listenToBlock ? watchBlockNumber({\n    listen: true\n  }, handleChange) : void 0;\n  const unsubscribe = client2.subscribe(_ref36 => {\n    let {\n      provider\n    } = _ref36;\n    return provider;\n  }, handleChange);\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/actions/contracts/watchReadContracts.ts\nfunction watchReadContracts(config, callback) {\n  const client2 = getClient();\n  const handleChange = async () => callback(await readContracts(config));\n  const unwatch = config.listenToBlock ? watchBlockNumber({\n    listen: true\n  }, handleChange) : void 0;\n  const unsubscribe = client2.subscribe(_ref37 => {\n    let {\n      provider\n    } = _ref37;\n    return provider;\n  }, handleChange);\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/actions/transactions/fetchTransaction.ts\nasync function fetchTransaction(_ref38) {\n  let {\n    chainId: chainId2,\n    hash\n  } = _ref38;\n  const provider = getProvider({\n    chainId: chainId2\n  });\n  return provider.getTransaction(hash);\n}\n\n// src/actions/transactions/prepareSendTransaction.ts\nimport { isAddress as isAddress2 } from \"ethers/lib/utils.js\";\n\n// src/actions/ens/fetchEnsAddress.ts\nimport { getAddress as getAddress2 } from \"ethers/lib/utils.js\";\nasync function fetchEnsAddress(_ref39) {\n  let {\n    chainId: chainId2,\n    name\n  } = _ref39;\n  const provider = getProvider({\n    chainId: chainId2\n  });\n  const address = await provider.resolveName(name);\n  try {\n    return address ? getAddress2(address) : null;\n  } catch (_error) {\n    return null;\n  }\n}\n\n// src/actions/ens/fetchEnsAvatar.ts\nasync function fetchEnsAvatar(_ref40) {\n  let {\n    address,\n    chainId: chainId2\n  } = _ref40;\n  const provider = getProvider({\n    chainId: chainId2\n  });\n  const avatar = await provider.getAvatar(address);\n  return avatar;\n}\n\n// src/actions/ens/fetchEnsName.ts\nimport { getAddress as getAddress3 } from \"ethers/lib/utils.js\";\nasync function fetchEnsName(_ref41) {\n  let {\n    address,\n    chainId: chainId2\n  } = _ref41;\n  const provider = getProvider({\n    chainId: chainId2\n  });\n  return provider.lookupAddress(getAddress3(address));\n}\n\n// src/actions/ens/fetchEnsResolver.ts\nasync function fetchEnsResolver(_ref42) {\n  let {\n    chainId: chainId2,\n    name\n  } = _ref42;\n  const provider = getProvider({\n    chainId: chainId2\n  });\n  const resolver = await provider.getResolver(name);\n  return resolver;\n}\n\n// src/actions/transactions/prepareSendTransaction.ts\nasync function prepareSendTransaction(_ref43) {\n  let {\n    chainId: chainId2,\n    request,\n    signer: signer_\n  } = _ref43;\n  const signer = signer_ ?? (await fetchSigner({\n    chainId: chainId2\n  }));\n  if (!signer) throw new ConnectorNotFoundError();\n  if (chainId2) assertActiveChain({\n    chainId: chainId2,\n    signer\n  });\n  const [to, gasLimit] = await Promise.all([isAddress2(request.to) ? Promise.resolve(request.to) : fetchEnsAddress({\n    name: request.to\n  }), request.gasLimit ? Promise.resolve(request.gasLimit) : signer.estimateGas(request)]);\n  if (!to) throw new Error(\"Could not resolve ENS name\");\n  return {\n    ...(chainId2 ? {\n      chainId: chainId2\n    } : {}),\n    request: {\n      ...request,\n      gasLimit,\n      to\n    },\n    mode: \"prepared\"\n  };\n}\n\n// src/actions/transactions/sendTransaction.ts\nasync function sendTransaction(_ref44) {\n  let {\n    chainId: chainId2,\n    mode,\n    request\n  } = _ref44;\n  const signer = await fetchSigner();\n  if (!signer) throw new ConnectorNotFoundError();\n  if (mode === \"prepared\") {\n    if (!request.gasLimit) throw new Error(\"`gasLimit` is required\");\n    if (!request.to) throw new Error(\"`to` is required\");\n  }\n  if (chainId2) assertActiveChain({\n    chainId: chainId2,\n    signer\n  });\n  try {\n    const uncheckedSigner = signer.connectUnchecked?.();\n    const {\n      hash,\n      wait\n    } = await (uncheckedSigner ?? signer).sendTransaction(request);\n    return {\n      hash,\n      wait\n    };\n  } catch (error) {\n    if (error.code === 4001) throw new UserRejectedRequestError(error);\n    throw error;\n  }\n}\n\n// src/actions/transactions/waitForTransaction.ts\nasync function waitForTransaction(_ref45) {\n  let {\n    chainId: chainId2,\n    confirmations,\n    hash,\n    timeout,\n    wait: wait_\n  } = _ref45;\n  let promise;\n  if (hash) {\n    const provider = getProvider({\n      chainId: chainId2\n    });\n    promise = provider.waitForTransaction(hash, confirmations, timeout);\n  } else if (wait_) promise = wait_(confirmations);else throw new Error(\"hash or wait is required\");\n  return promise;\n}\n\n// src/actions/contracts/writeContract.ts\nasync function writeContract(_ref46) {\n  let {\n    address,\n    args,\n    chainId: chainId2,\n    abi,\n    functionName,\n    mode,\n    overrides,\n    request: request_\n  } = _ref46;\n  const signer = await fetchSigner();\n  if (!signer) throw new ConnectorNotFoundError();\n  if (chainId2) assertActiveChain({\n    chainId: chainId2,\n    signer\n  });\n  if (mode === \"prepared\") {\n    if (!request_) throw new Error(\"`request` is required\");\n  }\n  const request = mode === \"recklesslyUnprepared\" ? (await prepareWriteContract({\n    address,\n    args,\n    chainId: chainId2,\n    abi,\n    functionName,\n    overrides\n  })).request : request_;\n  const transaction = await sendTransaction({\n    request,\n    mode: \"prepared\"\n  });\n  return transaction;\n}\n\n// src/actions/accounts/fetchBalance.ts\nasync function fetchBalance(_ref47) {\n  let {\n    address,\n    chainId: chainId2,\n    formatUnits: unit,\n    token\n  } = _ref47;\n  const client2 = getClient();\n  const provider = getProvider({\n    chainId: chainId2\n  });\n  if (token) {\n    const fetchContractBalance = async _ref48 => {\n      let {\n        abi\n      } = _ref48;\n      const erc20Config = {\n        abi,\n        address: token,\n        chainId: chainId2\n      };\n      const [value2, decimals, symbol] = await readContracts({\n        allowFailure: false,\n        contracts: [{\n          ...erc20Config,\n          functionName: \"balanceOf\",\n          args: [address]\n        }, {\n          ...erc20Config,\n          functionName: \"decimals\"\n        }, {\n          ...erc20Config,\n          functionName: \"symbol\"\n        }]\n      });\n      return {\n        decimals,\n        formatted: formatUnits2(value2 ?? \"0\", unit ?? decimals),\n        symbol,\n        value: value2\n      };\n    };\n    try {\n      return await fetchContractBalance({\n        abi: erc20ABI\n      });\n    } catch (err) {\n      if (err instanceof ContractResultDecodeError) {\n        const {\n          symbol,\n          ...rest\n        } = await fetchContractBalance({\n          abi: erc20ABI_bytes32\n        });\n        return {\n          symbol: parseBytes32String2(symbol),\n          ...rest\n        };\n      }\n      throw err;\n    }\n  }\n  const chains = [...(client2.provider.chains || []), ...(client2.chains ?? [])];\n  const value = await provider.getBalance(address);\n  const chain2 = chains.find(x => x.id === provider.network.chainId);\n  return {\n    decimals: chain2?.nativeCurrency?.decimals ?? 18,\n    formatted: formatUnits2(value ?? \"0\", unit ?? \"ether\"),\n    symbol: chain2?.nativeCurrency?.symbol ?? \"ETH\",\n    value\n  };\n}\n\n// src/actions/accounts/fetchSigner.ts\nasync function fetchSigner() {\n  let {\n    chainId: chainId2\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const client2 = getClient();\n  const signer = (await client2.connector?.getSigner?.({\n    chainId: chainId2\n  })) || null;\n  return signer;\n}\n\n// src/actions/accounts/getAccount.ts\nfunction getAccount() {\n  const {\n    data,\n    connector,\n    status\n  } = getClient();\n  switch (status) {\n    case \"connected\":\n      return {\n        address: data?.account,\n        connector,\n        isConnected: true,\n        isConnecting: false,\n        isDisconnected: false,\n        isReconnecting: false,\n        status\n      };\n    case \"reconnecting\":\n      return {\n        address: data?.account,\n        connector,\n        isConnected: !!data?.account,\n        isConnecting: false,\n        isDisconnected: false,\n        isReconnecting: true,\n        status\n      };\n    case \"connecting\":\n      return {\n        address: void 0,\n        connector: void 0,\n        isConnected: false,\n        isConnecting: true,\n        isDisconnected: false,\n        isReconnecting: false,\n        status\n      };\n    case \"disconnected\":\n      return {\n        address: void 0,\n        connector: void 0,\n        isConnected: false,\n        isConnecting: false,\n        isDisconnected: true,\n        isReconnecting: false,\n        status\n      };\n  }\n}\n\n// src/actions/accounts/getNetwork.ts\nfunction getNetwork() {\n  const client2 = getClient();\n  const chainId2 = client2.data?.chain?.id;\n  const activeChains = client2.chains ?? [];\n  const activeChain = [...(client2.provider.chains || []), ...activeChains].find(x => x.id === chainId2) ?? {\n    id: chainId2,\n    name: `Chain ${chainId2}`,\n    network: `${chainId2}`,\n    rpcUrls: {\n      default: \"\"\n    }\n  };\n  return {\n    chain: chainId2 ? {\n      ...activeChain,\n      ...client2.data?.chain,\n      id: chainId2\n    } : void 0,\n    chains: activeChains\n  };\n}\n\n// src/actions/accounts/signMessage.ts\nasync function signMessage(args) {\n  try {\n    const signer = await fetchSigner();\n    if (!signer) throw new ConnectorNotFoundError();\n    return await signer.signMessage(args.message);\n  } catch (error) {\n    if (error.code === 4001) throw new UserRejectedRequestError(error);\n    throw error;\n  }\n}\n\n// src/actions/accounts/signTypedData.ts\nasync function signTypedData(_ref49) {\n  let {\n    domain,\n    types,\n    value\n  } = _ref49;\n  const signer = await fetchSigner();\n  if (!signer) throw new ConnectorNotFoundError();\n  const {\n    chainId: chainId_\n  } = domain;\n  const chainId2 = chainId_ ? normalizeChainId(chainId_) : void 0;\n  if (chainId2) assertActiveChain({\n    chainId: chainId2,\n    signer\n  });\n  return signer._signTypedData(domain, types, value);\n}\n\n// src/actions/accounts/switchNetwork.ts\nasync function switchNetwork(_ref50) {\n  let {\n    chainId: chainId2\n  } = _ref50;\n  const {\n    connector\n  } = getClient();\n  if (!connector) throw new ConnectorNotFoundError();\n  if (!connector.switchChain) throw new SwitchChainNotSupportedError({\n    connector\n  });\n  return connector.switchChain(chainId2);\n}\n\n// src/actions/accounts/watchAccount.ts\nimport shallow3 from \"zustand/shallow\";\nfunction watchAccount(callback) {\n  let {\n    selector = x => x\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const client2 = getClient();\n  const handleChange = () => callback(getAccount());\n  const unsubscribe = client2.subscribe(_ref51 => {\n    let {\n      data,\n      connector,\n      status\n    } = _ref51;\n    return selector({\n      address: data?.account,\n      connector,\n      status\n    });\n  }, handleChange, {\n    equalityFn: shallow3\n  });\n  return unsubscribe;\n}\n\n// src/actions/accounts/watchNetwork.ts\nimport shallow4 from \"zustand/shallow\";\nfunction watchNetwork(callback) {\n  let {\n    selector = x => x\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const client2 = getClient();\n  const handleChange = () => callback(getNetwork());\n  const unsubscribe = client2.subscribe(_ref52 => {\n    let {\n      data,\n      chains\n    } = _ref52;\n    return selector({\n      chainId: data?.chain?.id,\n      chains\n    });\n  }, handleChange, {\n    equalityFn: shallow4\n  });\n  return unsubscribe;\n}\n\n// src/actions/accounts/watchSigner.ts\nimport shallow5 from \"zustand/shallow\";\nfunction watchSigner(_ref53, callback) {\n  let {\n    chainId: chainId2\n  } = _ref53;\n  const client2 = getClient();\n  const handleChange = async () => callback(await fetchSigner({\n    chainId: chainId2\n  }));\n  const unsubscribe = client2.subscribe(_ref54 => {\n    let {\n      data,\n      connector\n    } = _ref54;\n    return {\n      account: data?.account,\n      chainId: data?.chain?.id,\n      connector\n    };\n  }, handleChange, {\n    equalityFn: shallow5\n  });\n  return unsubscribe;\n}\n\n// src/actions/network-status/fetchFeeData.ts\nimport { formatUnits as formatUnits3 } from \"ethers/lib/utils.js\";\nasync function fetchFeeData() {\n  let {\n    chainId: chainId2,\n    formatUnits: units2 = \"wei\"\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const provider = getProvider({\n    chainId: chainId2\n  });\n  const feeData = await provider.getFeeData();\n  const formatted = {\n    gasPrice: feeData.gasPrice ? formatUnits3(feeData.gasPrice, units2) : null,\n    maxFeePerGas: feeData.maxFeePerGas ? formatUnits3(feeData.maxFeePerGas, units2) : null,\n    maxPriorityFeePerGas: feeData.maxPriorityFeePerGas ? formatUnits3(feeData.maxPriorityFeePerGas, units2) : null\n  };\n  return {\n    ...feeData,\n    formatted\n  };\n}\n\n// src/errors.ts\nvar RpcError = class extends Error {\n  constructor(code, message, internal, data) {\n    if (!Number.isInteger(code)) throw new Error('\"code\" must be an integer.');\n    if (!message || typeof message !== \"string\") throw new Error('\"message\" must be a nonempty string.');\n    super(message);\n    this.code = code;\n    this.data = data;\n    this.internal = internal;\n  }\n};\nvar ProviderRpcError = class extends RpcError {\n  constructor(code, message, internal, data) {\n    if (!(Number.isInteger(code) && code >= 1e3 && code <= 4999)) throw new Error('\"code\" must be an integer such that: 1000 <= code <= 4999');\n    super(code, message, internal, data);\n  }\n};\nvar AddChainError = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"AddChainError\";\n    this.message = \"Error adding chain\";\n  }\n};\nvar ChainDoesNotSupportMulticallError = class extends Error {\n  constructor(_ref55) {\n    let {\n      blockNumber,\n      chain: chain2\n    } = _ref55;\n    super(`Chain \"${chain2.name}\" does not support multicall${blockNumber ? ` on block ${blockNumber}` : \"\"}.`);\n    this.name = \"ChainDoesNotSupportMulticall\";\n  }\n};\nvar ChainMismatchError = class extends Error {\n  constructor(_ref56) {\n    let {\n      activeChain,\n      targetChain\n    } = _ref56;\n    super(`Chain mismatch: Expected \"${targetChain}\", received \"${activeChain}\".`);\n    this.name = \"ChainMismatchError\";\n  }\n};\nvar ChainNotConfiguredError = class extends Error {\n  constructor(_ref57) {\n    let {\n      chainId: chainId2,\n      connectorId\n    } = _ref57;\n    super(`Chain \"${chainId2}\" not configured for connector \"${connectorId}\".`);\n    this.name = \"ChainNotConfigured\";\n  }\n};\nvar ConnectorAlreadyConnectedError = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ConnectorAlreadyConnectedError\";\n    this.message = \"Connector already connected\";\n  }\n};\nvar ConnectorNotFoundError = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ConnectorNotFoundError\";\n    this.message = \"Connector not found\";\n  }\n};\nvar ContractMethodDoesNotExistError = class extends Error {\n  constructor(_ref58) {\n    let {\n      address,\n      chainId: chainId2,\n      functionName\n    } = _ref58;\n    const {\n      chains,\n      network\n    } = getProvider();\n    const chain2 = chains?.find(_ref59 => {\n      let {\n        id\n      } = _ref59;\n      return id === (chainId2 || network.chainId);\n    });\n    const blockExplorer = chain2?.blockExplorers?.default;\n    super([`Function \"${functionName}\" on contract \"${address}\" does not exist.`, ...(blockExplorer ? [\"\", `${blockExplorer?.name}: ${blockExplorer?.url}/address/${address}#readContract`] : [])].join(\"\\n\"));\n    this.name = \"ContractMethodDoesNotExistError\";\n  }\n};\nvar ContractMethodNoResultError = class extends Error {\n  constructor(_ref60) {\n    let {\n      address,\n      args,\n      chainId: chainId2,\n      functionName\n    } = _ref60;\n    super([\"Contract read returned an empty response. This could be due to any of the following:\", `- The contract does not have the function \"${functionName}\",`, \"- The parameters passed to the contract function may be invalid, or\", \"- The address is not a contract.\", \"\", `Config:`, JSON.stringify({\n      address,\n      abi: \"...\",\n      functionName,\n      chainId: chainId2,\n      args\n    }, null, 2)].join(\"\\n\"));\n    this.name = \"ContractMethodNoResultError\";\n  }\n};\nvar ContractMethodRevertedError = class extends Error {\n  constructor(_ref61) {\n    let {\n      address,\n      args,\n      chainId: chainId2,\n      functionName,\n      errorMessage\n    } = _ref61;\n    super([\"Contract method reverted with an error.\", \"\", `Config:`, JSON.stringify({\n      address,\n      abi: \"...\",\n      functionName,\n      chainId: chainId2,\n      args\n    }, null, 2), \"\", `Details: ${errorMessage}`].join(\"\\n\"));\n    this.name = \"ContractMethodRevertedError\";\n  }\n};\nvar ContractResultDecodeError = class extends Error {\n  constructor(_ref62) {\n    let {\n      address,\n      args,\n      chainId: chainId2,\n      functionName,\n      errorMessage\n    } = _ref62;\n    super([\"Failed to decode contract function result.\", \"\", `Config:`, JSON.stringify({\n      address,\n      abi: \"...\",\n      functionName,\n      chainId: chainId2,\n      args\n    }, null, 2), \"\", `Details: ${errorMessage}`].join(\"\\n\"));\n    this.name = \"ContractResultDecodeError\";\n  }\n};\nvar ProviderChainsNotFound = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ProviderChainsNotFound\";\n    this.message = [\"No chains were found on the wagmi provider. Some functions that require a chain may not work.\", \"\", \"It is recommended to add a list of chains to the provider in `createClient`.\", \"\", \"Example:\", \"\", \"```\", \"import { getDefaultProvider } from 'ethers'\", \"import { chain, createClient } from 'wagmi'\", \"\", \"createClient({\", \"  provider: Object.assign(getDefaultProvider(), { chains: [chain.mainnet] })\", \"})\", \"```\"].join(\"\\n\");\n  }\n};\nvar ResourceUnavailableError = class extends RpcError {\n  constructor(error) {\n    super(-32002, \"Resource unavailable\", error);\n    this.name = \"ResourceUnavailable\";\n  }\n};\nvar SwitchChainError = class extends ProviderRpcError {\n  constructor(error) {\n    super(4902, \"Error switching chain\", error);\n    this.name = \"SwitchChainError\";\n  }\n};\nvar SwitchChainNotSupportedError = class extends Error {\n  constructor(_ref63) {\n    let {\n      connector\n    } = _ref63;\n    super(`\"${connector.name}\" does not support programmatic chain switching.`);\n    this.name = \"SwitchChainNotSupportedError\";\n  }\n};\nvar UserRejectedRequestError = class extends ProviderRpcError {\n  constructor(error) {\n    super(4001, \"User rejected request\", error);\n    this.name = \"UserRejectedRequestError\";\n  }\n};\nexport { RpcError, ProviderRpcError, AddChainError, ChainDoesNotSupportMulticallError, ChainMismatchError, ChainNotConfiguredError, ConnectorAlreadyConnectedError, ConnectorNotFoundError, ContractMethodDoesNotExistError, ContractMethodNoResultError, ContractMethodRevertedError, ContractResultDecodeError, ProviderChainsNotFound, ResourceUnavailableError, SwitchChainError, SwitchChainNotSupportedError, UserRejectedRequestError, configureChains, debounce, deepEqual, deserialize, minimizeContractInterface, normalizeChainId, parseContractResult, serialize, erc20ABI, erc721ABI, erc4626ABI, units, Connector, InjectedConnector, noopStorage, createStorage, Client, createClient, getClient, connect, disconnect, fetchToken, getContract, prepareWriteContract, getProvider, getWebSocketProvider, watchProvider, watchWebSocketProvider, multicall, readContract, readContracts, watchContractEvent, fetchBlockNumber, watchBlockNumber, watchMulticall, watchReadContract, watchReadContracts, fetchTransaction, fetchEnsAddress, fetchEnsAvatar, fetchEnsName, fetchEnsResolver, prepareSendTransaction, sendTransaction, waitForTransaction, writeContract, fetchBalance, fetchSigner, getAccount, getNetwork, signMessage, signTypedData, switchNetwork, watchAccount, watchNetwork, watchSigner, fetchFeeData };","map":{"version":3,"names":["defaultChains","mainnet","__privateAdd","__privateGet","__privateMethod","__privateSet","persist","subscribeWithSelector","default","create","providers","providers2","getAddress","hexValue","configureChains","defaultChains2","providers3","minQuorum","pollingInterval","targetQuorum","stallTimeout","length","Error","chains","providers_","webSocketProviders_","chain2","configExists","provider","apiConfig","some","id","chain","webSocketProvider","name","join","chainId","chainId2","activeChain","find","x","chainProviders","fallbackProvider","formatter","formats","block","difficulty","gasLimit","Object","assign","chainWebSocketProviders","FallbackProvider","map","chainProvider","index","priority","weight","error","message","includes","assertActiveChain","signer","getNetwork","activeChainId","ChainMismatchError","targetChain","signerChainId","network","connector","getClient","ChainNotConfiguredError","connectorId","debounce","fn","waitTime","timeout","args","clearTimeout","setTimeout","deepEqual","a","b","constructor","i","Array","isArray","valueOf","prototype","toString","keys","hasOwnProperty","call","key","BigNumber","findAndReplace","cacheRef","replace","item","entries","reduce","curr","value","deserialize","cachedString","cache","JSON","parse","deserializedCacheWithBigNumbers","data","type","from","hex","BigNumber2","FunctionFragment","isAddress","normalizeFunctionName","contract","functionName","functions","argsLength","overloadFunctions","filter","startsWith","fragment","fromString","inputs","overloadFunction","matched","every","arg","abiParameter","isArgOfType","argType","abiParameterType","values","components","component","test","isBigNumber","Uint8Array","getInjectedName","ethereum","getName","isAvalanche","isBitKeep","isBraveWallet","isCoinbaseWallet","isExodus","isFrame","isKuCoinWallet","isMathWallet","isOneInchIOSWallet","isOneInchAndroidWallet","isOpera","isPortal","isTally","isTokenPocket","isTokenary","isTrust","isTrustWallet","isMetaMask","nameSet","Set","unknownCount","add","names","logWarn","config","logger","warn","Contract","FormatTypes","minimizeContractInterface","minimizedAbi","abi","getInterface","format","full","minimizedInterface","normalizeChainId","Number","parseInt","trim","substring","Contract2","isPlainArray","parseContractResult","iface","getFunction","isTuple","outputs","data_","encodedResult","encodeFunctionResult","decodedResult","decodeFunctionResult","getReferenceKey","cutoff","slice","getCutoff","array","createReplacer","replacer","circularReplacer","hasReplacer","hasCircularReplacer","thisCutoff","splice","valueCutoff","serialize","indent","stringify","EventEmitter","erc20ABI","indexed","stateMutability","erc20ABI_bytes32","erc721ABI","multicallABI","erc4626ABI","anonymous","units","Connector","options","getBlockExplorerUrls","blockExplorer","blockExplorers","url","isChainUnsupported","_provider","_switchingChains","InjectedConnector","options_","shimDisconnect","shimChainChangedDisconnect","getProvider","window","shimDisconnectKey","onAccountsChanged","accounts","emit","account","onChainChanged","unsupported","onDisconnect","storage","removeItem","detectedName","ready","connect","ConnectorNotFoundError","on","request","method","getChainId","switchChain","setItem","isUserRejectedRequestError","UserRejectedRequestError","code","ResourceUnavailableError","disconnect","removeListener","getAccount","then","getSigner","Promise","all","Web3Provider","isAuthorized","getItem","params","rpcUrls","originalError","chainName","nativeCurrency","public","blockExplorerUrls","addError","AddChainError","SwitchChainError","watchAsset","address","decimals","image","symbol","WeakMap","noopStorage","_key","_value","createStorage","deserialize2","prefix","serialize2","defaultState","console","err","storeKey","_isAutoConnecting","_lastUsedConnector","_addEffects","addEffects_fn","Client","autoConnect","connectors","localStorage","Map","webSocketProviders","status","rawState","state","_error","store","getWebSocketProvider","getStorage","partialize","version","getState","lastUsedChainId","subscribe","setState","updater","newState","clearState","destroy","sorted","sort","connected","bust","provider_","get","set","webSocketProvider_","setLastUsedConnector","lastUsedConnector","WeakSet","onChange","onError","prevConnector","off","subscribeProvider","subscribeWebSocketProvider","client","createClient","client_","client2","activeConnector","ConnectorAlreadyConnectedError","formatUnits","formatUnits2","parseBytes32String","parseBytes32String2","fetchToken","units2","fetchToken_","erc20Config","totalSupply","readContracts","allowFailure","contracts","formatted","ContractResultDecodeError","rest","EthersContract","getContract","signerOrProvider","prepareWriteContract","overrides","signer_","fetchSigner","normalizedFunctionName","populateTransactionFn","populateTransaction","ContractMethodDoesNotExistError","unsignedTransaction","estimateGas","mode","watchProvider","callback","handleChange","unsubscribe","watchWebSocketProvider","multicall","ProviderChainsNotFound","chain3","ChainDoesNotSupportMulticallError","blockTag","blockCreated","blockNumber","multicallContract","calls","params2","contractFunction","callData","interface","encodeFunctionData","target","results","aggregate3","returnData","success","ContractMethodRevertedError","errorMessage","ContractMethodNoResultError","result","readContract","contractsByChainId","contracts2","promises","multicallResults","allSettled","reason","flat","resultIndexes","shallow","watchContractEvent","eventName","once","handler","watchEvent","equalityFn","shallow2","fetchBlockNumber","getBlockNumber","watchBlockNumber","debouncedCallback","previousProvider","createListener","listen","active","provider_2","watchMulticall","unwatch","listenToBlock","watchReadContract","watchReadContracts","fetchTransaction","hash","getTransaction","isAddress2","getAddress2","fetchEnsAddress","resolveName","fetchEnsAvatar","avatar","getAvatar","getAddress3","fetchEnsName","lookupAddress","fetchEnsResolver","resolver","getResolver","prepareSendTransaction","to","resolve","sendTransaction","uncheckedSigner","connectUnchecked","wait","waitForTransaction","confirmations","wait_","promise","writeContract","request_","transaction","fetchBalance","unit","token","fetchContractBalance","value2","getBalance","isConnected","isConnecting","isDisconnected","isReconnecting","activeChains","signMessage","signTypedData","domain","types","chainId_","_signTypedData","switchNetwork","SwitchChainNotSupportedError","shallow3","watchAccount","selector","shallow4","watchNetwork","shallow5","watchSigner","formatUnits3","fetchFeeData","feeData","getFeeData","gasPrice","maxFeePerGas","maxPriorityFeePerGas","RpcError","internal","isInteger","ProviderRpcError","arguments"],"sources":["/home/dev/Desktop/StakingProject/app-ui/node_modules/@wagmi/core/dist/chunk-HEIMP7HQ.js"],"sourcesContent":["import {\n  defaultChains,\n  mainnet\n} from \"./chunk-4DNFSL2K.js\";\nimport {\n  __privateAdd,\n  __privateGet,\n  __privateMethod,\n  __privateSet\n} from \"./chunk-MQXBDTVK.js\";\n\n// src/client.ts\nimport { persist, subscribeWithSelector } from \"zustand/middleware\";\nimport { default as create } from \"zustand/vanilla\";\n\n// src/connectors/injected.ts\nimport { providers as providers2 } from \"ethers\";\nimport { getAddress, hexValue } from \"ethers/lib/utils.js\";\n\n// src/utils/configureChains.ts\nimport { providers } from \"ethers\";\nfunction configureChains(defaultChains2, providers3, {\n  minQuorum = 1,\n  pollingInterval = 4e3,\n  targetQuorum = 1,\n  stallTimeout\n} = {}) {\n  if (!defaultChains2.length)\n    throw new Error(\"must have at least one chain\");\n  if (targetQuorum < minQuorum)\n    throw new Error(\"quorum cannot be lower than minQuorum\");\n  let chains = [];\n  const providers_ = {};\n  const webSocketProviders_ = {};\n  for (const chain2 of defaultChains2) {\n    let configExists = false;\n    for (const provider of providers3) {\n      const apiConfig = provider(chain2);\n      if (!apiConfig)\n        continue;\n      configExists = true;\n      if (!chains.some(({ id }) => id === chain2.id)) {\n        chains = [...chains, apiConfig.chain];\n      }\n      providers_[chain2.id] = [\n        ...providers_[chain2.id] || [],\n        apiConfig.provider\n      ];\n      if (apiConfig.webSocketProvider) {\n        webSocketProviders_[chain2.id] = [\n          ...webSocketProviders_[chain2.id] || [],\n          apiConfig.webSocketProvider\n        ];\n      }\n    }\n    if (!configExists) {\n      throw new Error(\n        [\n          `Could not find valid provider configuration for chain \"${chain2.name}\".\n`,\n          \"You may need to add `jsonRpcProvider` to `configureChains` with the chain's RPC URLs.\",\n          \"Read more: https://wagmi.sh/react/providers/jsonRpc\"\n        ].join(\"\\n\")\n      );\n    }\n  }\n  return {\n    chains,\n    provider: ({ chainId: chainId2 }) => {\n      const activeChain = chains.find((x) => x.id === chainId2) ?? defaultChains2[0];\n      const chainProviders = providers_[activeChain.id];\n      if (!chainProviders || !chainProviders[0])\n        throw new Error(`No providers configured for chain \"${activeChain.id}\"`);\n      let provider;\n      if (chainProviders.length === 1) {\n        provider = chainProviders[0]();\n      } else {\n        provider = fallbackProvider(targetQuorum, minQuorum, chainProviders, {\n          stallTimeout\n        });\n      }\n      if (activeChain.id === 42220) {\n        provider.formatter.formats.block = {\n          ...provider.formatter.formats.block,\n          difficulty: () => 0,\n          gasLimit: () => 0\n        };\n      }\n      return Object.assign(provider, {\n        chains,\n        pollingInterval\n      });\n    },\n    webSocketProvider: ({ chainId: chainId2 }) => {\n      const activeChain = chains.find((x) => x.id === chainId2) ?? defaultChains2[0];\n      const chainWebSocketProviders = webSocketProviders_[activeChain.id];\n      if (!chainWebSocketProviders)\n        return void 0;\n      const provider = chainWebSocketProviders[0]?.();\n      if (provider && activeChain.id === 42220) {\n        provider.formatter.formats.block = {\n          ...provider.formatter.formats.block,\n          difficulty: () => 0,\n          gasLimit: () => 0\n        };\n      }\n      return Object.assign(provider || {}, {\n        chains\n      });\n    }\n  };\n}\nfunction fallbackProvider(targetQuorum, minQuorum, providers_, { stallTimeout }) {\n  try {\n    return new providers.FallbackProvider(\n      providers_.map((chainProvider, index) => {\n        const provider = chainProvider();\n        return {\n          provider,\n          priority: provider.priority ?? index,\n          stallTimeout: provider.stallTimeout ?? stallTimeout,\n          weight: provider.weight\n        };\n      }),\n      targetQuorum\n    );\n  } catch (error) {\n    if (error?.message?.includes(\n      \"quorum will always fail; larger than total weight\"\n    )) {\n      if (targetQuorum === minQuorum)\n        throw error;\n      return fallbackProvider(targetQuorum - 1, minQuorum, providers_, {\n        stallTimeout\n      });\n    }\n    throw error;\n  }\n}\n\n// src/utils/assertActiveChain.ts\nfunction assertActiveChain({\n  chainId: chainId2,\n  signer\n}) {\n  const { chain: activeChain, chains } = getNetwork();\n  const activeChainId = activeChain?.id;\n  if (activeChainId && chainId2 !== activeChainId) {\n    throw new ChainMismatchError({\n      activeChain: chains.find((x) => x.id === activeChainId)?.name ?? `Chain ${activeChainId}`,\n      targetChain: chains.find((x) => x.id === chainId2)?.name ?? `Chain ${chainId2}`\n    });\n  }\n  if (signer) {\n    const signerChainId = signer.provider?.network?.chainId;\n    if (signerChainId && chainId2 !== signerChainId) {\n      const connector = getClient().connector;\n      throw new ChainNotConfiguredError({\n        chainId: chainId2,\n        connectorId: connector?.id ?? \"unknown\"\n      });\n    }\n  }\n}\n\n// src/utils/debounce.ts\nfunction debounce(fn, waitTime = 0) {\n  let timeout;\n  return function(...args) {\n    if (!waitTime)\n      return fn(...args);\n    if (timeout)\n      clearTimeout(timeout);\n    timeout = setTimeout(function() {\n      timeout = null;\n      fn(...args);\n    }, waitTime);\n  };\n}\n\n// src/utils/deepEqual.ts\nfunction deepEqual(a, b) {\n  if (a === b)\n    return true;\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    if (a.constructor !== b.constructor)\n      return false;\n    let length;\n    let i;\n    if (Array.isArray(a) && Array.isArray(b)) {\n      length = a.length;\n      if (length != b.length)\n        return false;\n      for (i = length; i-- !== 0; )\n        if (!deepEqual(a[i], b[i]))\n          return false;\n      return true;\n    }\n    if (a.valueOf !== Object.prototype.valueOf)\n      return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString)\n      return a.toString() === b.toString();\n    const keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length)\n      return false;\n    for (i = length; i-- !== 0; )\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i]))\n        return false;\n    for (i = length; i-- !== 0; ) {\n      const key = keys[i];\n      if (key && !deepEqual(a[key], b[key]))\n        return false;\n    }\n    return true;\n  }\n  return a !== a && b !== b;\n}\n\n// src/utils/deserialize.ts\nimport { BigNumber } from \"ethers\";\nvar findAndReplace = (cacheRef, {\n  find,\n  replace\n}) => {\n  if (cacheRef && find(cacheRef)) {\n    return replace(cacheRef);\n  }\n  if (typeof cacheRef !== \"object\") {\n    return cacheRef;\n  }\n  if (Array.isArray(cacheRef)) {\n    return cacheRef.map((item) => findAndReplace(item, { find, replace }));\n  }\n  if (cacheRef instanceof Object) {\n    return Object.entries(cacheRef).reduce(\n      (curr, [key, value]) => ({\n        ...curr,\n        [key]: findAndReplace(value, { find, replace })\n      }),\n      {}\n    );\n  }\n  return cacheRef;\n};\nfunction deserialize(cachedString) {\n  const cache = JSON.parse(cachedString);\n  const deserializedCacheWithBigNumbers = findAndReplace(cache, {\n    find: (data) => data.type === \"BigNumber\",\n    replace: (data) => BigNumber.from(data.hex)\n  });\n  return deserializedCacheWithBigNumbers;\n}\n\n// src/utils/normalizeFunctionName.ts\nimport { BigNumber as BigNumber2 } from \"ethers\";\nimport { FunctionFragment, isAddress } from \"ethers/lib/utils.js\";\nfunction normalizeFunctionName({\n  contract,\n  functionName,\n  args = []\n}) {\n  if (functionName in contract.functions)\n    return functionName;\n  const argsLength = args?.length ?? 0;\n  const overloadFunctions = Object.keys(contract.functions).filter((x) => x.startsWith(`${functionName}(`)).map((x) => ({ name: x, fragment: FunctionFragment.fromString(x) })).filter((x) => argsLength === x.fragment.inputs.length);\n  for (const overloadFunction of overloadFunctions) {\n    const matched = args.every((arg, index) => {\n      const abiParameter = overloadFunction.fragment.inputs[index];\n      return isArgOfType(arg, abiParameter);\n    });\n    if (matched)\n      return overloadFunction.name;\n  }\n  return functionName;\n}\nfunction isArgOfType(arg, abiParameter) {\n  const argType = typeof arg;\n  const abiParameterType = abiParameter.type;\n  switch (abiParameterType) {\n    case \"address\":\n      return isAddress(arg);\n    case \"bool\":\n      return argType === \"boolean\";\n    case \"function\":\n      return argType === \"string\";\n    case \"string\":\n      return argType === \"string\";\n    default: {\n      if (abiParameterType === \"tuple\" && \"components\" in abiParameter)\n        return Object.values(abiParameter.components).every(\n          (component, index) => {\n            return isArgOfType(\n              Object.values(arg)[index],\n              component\n            );\n          }\n        );\n      if (/^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(\n        abiParameterType\n      ))\n        return argType === \"number\" || argType === \"bigint\" || BigNumber2.isBigNumber(arg);\n      if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(abiParameterType))\n        return argType === \"string\" || arg instanceof Uint8Array;\n      if (/[a-z]+[1-9]{0,3}(\\[[0-9]{0,}\\])+$/.test(abiParameterType)) {\n        return Array.isArray(arg) && arg.every(\n          (x) => isArgOfType(x, {\n            ...abiParameter,\n            type: abiParameterType.replace(/(\\[[0-9]{0,}\\])$/, \"\")\n          })\n        );\n      }\n      return false;\n    }\n  }\n}\n\n// src/utils/getInjectedName.ts\nfunction getInjectedName(ethereum) {\n  if (!ethereum)\n    return \"Injected\";\n  const getName = (provider) => {\n    if (provider.isAvalanche)\n      return \"Core Wallet\";\n    if (provider.isBitKeep)\n      return \"BitKeep\";\n    if (provider.isBraveWallet)\n      return \"Brave Wallet\";\n    if (provider.isCoinbaseWallet)\n      return \"Coinbase Wallet\";\n    if (provider.isExodus)\n      return \"Exodus\";\n    if (provider.isFrame)\n      return \"Frame\";\n    if (provider.isKuCoinWallet)\n      return \"KuCoin Wallet\";\n    if (provider.isMathWallet)\n      return \"MathWallet\";\n    if (provider.isOneInchIOSWallet || provider.isOneInchAndroidWallet)\n      return \"1inch Wallet\";\n    if (provider.isOpera)\n      return \"Opera\";\n    if (provider.isPortal)\n      return \"Ripio Portal\";\n    if (provider.isTally)\n      return \"Tally\";\n    if (provider.isTokenPocket)\n      return \"TokenPocket\";\n    if (provider.isTokenary)\n      return \"Tokenary\";\n    if (provider.isTrust || provider.isTrustWallet)\n      return \"Trust Wallet\";\n    if (provider.isMetaMask)\n      return \"MetaMask\";\n  };\n  if (ethereum.providers?.length) {\n    const nameSet = /* @__PURE__ */ new Set();\n    let unknownCount = 1;\n    for (const provider of ethereum.providers) {\n      let name = getName(provider);\n      if (!name) {\n        name = `Unknown Wallet #${unknownCount}`;\n        unknownCount += 1;\n      }\n      nameSet.add(name);\n    }\n    const names = [...nameSet];\n    if (names.length)\n      return names;\n    return names[0] ?? \"Injected\";\n  }\n  return getName(ethereum) ?? \"Injected\";\n}\n\n// src/utils/logger.ts\nfunction logWarn(message) {\n  getClient()?.config.logger?.warn?.(message);\n}\n\n// src/utils/minimizeContractInterface.ts\nimport { Contract } from \"ethers\";\nimport { FormatTypes } from \"ethers/lib/utils.js\";\nfunction minimizeContractInterface(config) {\n  try {\n    const minimizedAbi = config.abi.filter(\n      (x) => x.type === \"function\" && x.name === config.functionName\n    );\n    if (minimizedAbi.length === 0)\n      throw new Error(\"Invalid ABI\");\n    return minimizedAbi;\n  } catch (error) {\n    const abi = Contract.getInterface(config.abi).format(\n      FormatTypes.full\n    );\n    const minimizedInterface = Array.isArray(abi) ? abi : [abi];\n    return minimizedInterface.filter((i) => i.includes(config.functionName));\n  }\n}\n\n// src/utils/normalizeChainId.ts\nfunction normalizeChainId(chainId2) {\n  if (typeof chainId2 === \"string\")\n    return Number.parseInt(\n      chainId2,\n      chainId2.trim().substring(0, 2) === \"0x\" ? 16 : 10\n    );\n  if (typeof chainId2 === \"bigint\")\n    return Number(chainId2);\n  return chainId2;\n}\n\n// src/utils/parseContractResult.ts\nimport { Contract as Contract2 } from \"ethers\";\nfunction isPlainArray(value) {\n  return Array.isArray(value) && Object.keys(value).length === value.length;\n}\nfunction parseContractResult({\n  abi,\n  data,\n  functionName\n}) {\n  if (data && isPlainArray(data)) {\n    const iface = Contract2.getInterface(abi);\n    const fragment = iface.getFunction(functionName);\n    const isTuple = (fragment.outputs?.length || 0) > 1;\n    const data_ = isTuple ? data : [data];\n    const encodedResult = iface.encodeFunctionResult(functionName, data_);\n    const decodedResult = iface.decodeFunctionResult(\n      functionName,\n      encodedResult\n    );\n    return isTuple ? decodedResult : decodedResult[0];\n  }\n  return data;\n}\n\n// src/utils/serialize.ts\nfunction getReferenceKey(keys, cutoff) {\n  return keys.slice(0, cutoff).join(\".\") || \".\";\n}\nfunction getCutoff(array, value) {\n  const { length } = array;\n  for (let index = 0; index < length; ++index) {\n    if (array[index] === value) {\n      return index + 1;\n    }\n  }\n  return 0;\n}\nfunction createReplacer(replacer, circularReplacer) {\n  const hasReplacer = typeof replacer === \"function\";\n  const hasCircularReplacer = typeof circularReplacer === \"function\";\n  const cache = [];\n  const keys = [];\n  return function replace(key, value) {\n    if (typeof value === \"object\") {\n      if (cache.length) {\n        const thisCutoff = getCutoff(cache, this);\n        if (thisCutoff === 0) {\n          cache[cache.length] = this;\n        } else {\n          cache.splice(thisCutoff);\n          keys.splice(thisCutoff);\n        }\n        keys[keys.length] = key;\n        const valueCutoff = getCutoff(cache, value);\n        if (valueCutoff !== 0) {\n          return hasCircularReplacer ? circularReplacer.call(\n            this,\n            key,\n            value,\n            getReferenceKey(keys, valueCutoff)\n          ) : `[ref=${getReferenceKey(keys, valueCutoff)}]`;\n        }\n      } else {\n        cache[0] = value;\n        keys[0] = key;\n      }\n    }\n    return hasReplacer ? replacer.call(this, key, value) : value;\n  };\n}\nfunction serialize(value, replacer, indent, circularReplacer) {\n  return JSON.stringify(\n    value,\n    createReplacer(replacer, circularReplacer),\n    indent ?? void 0\n  );\n}\n\n// src/connectors/base.ts\nimport { default as EventEmitter } from \"eventemitter3\";\n\n// src/constants/abis.ts\nvar erc20ABI = [\n  {\n    type: \"event\",\n    name: \"Approval\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"event\",\n    name: \"Transfer\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"allowance\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        name: \"spender\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"approve\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"balanceOf\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"account\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"decimals\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint8\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"name\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"symbol\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"totalSupply\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"transfer\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"recipient\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"transferFrom\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"sender\",\n        type: \"address\"\n      },\n      {\n        name: \"recipient\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  }\n];\nvar erc20ABI_bytes32 = [\n  {\n    type: \"event\",\n    name: \"Approval\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"event\",\n    name: \"Transfer\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"allowance\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        name: \"spender\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"approve\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"balanceOf\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"account\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"decimals\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint8\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"name\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bytes32\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"symbol\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bytes32\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"totalSupply\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"transfer\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"recipient\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"transferFrom\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"sender\",\n        type: \"address\"\n      },\n      {\n        name: \"recipient\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  }\n];\nvar erc721ABI = [\n  {\n    type: \"event\",\n    name: \"Approval\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"event\",\n    name: \"ApprovalForAll\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"operator\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"approved\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"event\",\n    name: \"Transfer\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"approve\",\n    stateMutability: \"payable\",\n    inputs: [\n      {\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: []\n  },\n  {\n    type: \"function\",\n    name: \"balanceOf\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"account\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"getApproved\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"isApprovedForAll\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        name: \"operator\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"name\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"ownerOf\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"safeTransferFrom\",\n    stateMutability: \"payable\",\n    inputs: [\n      {\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: []\n  },\n  {\n    type: \"function\",\n    name: \"safeTransferFrom\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        name: \"id\",\n        type: \"uint256\"\n      },\n      {\n        name: \"data\",\n        type: \"bytes\"\n      }\n    ],\n    outputs: []\n  },\n  {\n    type: \"function\",\n    name: \"setApprovalForAll\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"operator\",\n        type: \"address\"\n      },\n      {\n        name: \"approved\",\n        type: \"bool\"\n      }\n    ],\n    outputs: []\n  },\n  {\n    type: \"function\",\n    name: \"symbol\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"tokenByIndex\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"index\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"tokenByIndex\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        name: \"index\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"tokenURI\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"totalSupply\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"transferFrom\",\n    stateMutability: \"payable\",\n    inputs: [\n      {\n        name: \"sender\",\n        type: \"address\"\n      },\n      {\n        name: \"recipient\",\n        type: \"address\"\n      },\n      {\n        name: \"tokeId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: []\n  }\n];\nvar multicallABI = [\n  {\n    inputs: [\n      {\n        components: [\n          {\n            name: \"target\",\n            type: \"address\"\n          },\n          {\n            name: \"allowFailure\",\n            type: \"bool\"\n          },\n          {\n            name: \"callData\",\n            type: \"bytes\"\n          }\n        ],\n        name: \"calls\",\n        type: \"tuple[]\"\n      }\n    ],\n    name: \"aggregate3\",\n    outputs: [\n      {\n        components: [\n          {\n            name: \"success\",\n            type: \"bool\"\n          },\n          {\n            name: \"returnData\",\n            type: \"bytes\"\n          }\n        ],\n        name: \"returnData\",\n        type: \"tuple[]\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  }\n];\nvar erc4626ABI = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"Approval\",\n    type: \"event\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"sender\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"receiver\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"assets\",\n        type: \"uint256\"\n      },\n      {\n        indexed: false,\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"Deposit\",\n    type: \"event\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"Transfer\",\n    type: \"event\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"sender\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"receiver\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"assets\",\n        type: \"uint256\"\n      },\n      {\n        indexed: false,\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"Withdraw\",\n    type: \"event\"\n  },\n  {\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        name: \"spender\",\n        type: \"address\"\n      }\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [],\n    name: \"asset\",\n    outputs: [\n      {\n        name: \"assetTokenAddress\",\n        type: \"address\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"account\",\n        type: \"address\"\n      }\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"convertToAssets\",\n    outputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"convertToShares\",\n    outputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      },\n      {\n        name: \"receiver\",\n        type: \"address\"\n      }\n    ],\n    name: \"deposit\",\n    outputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"caller\",\n        type: \"address\"\n      }\n    ],\n    name: \"maxDeposit\",\n    outputs: [\n      {\n        name: \"maxAssets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"caller\",\n        type: \"address\"\n      }\n    ],\n    name: \"maxMint\",\n    outputs: [\n      {\n        name: \"maxShares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      }\n    ],\n    name: \"maxRedeem\",\n    outputs: [\n      {\n        name: \"maxShares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      }\n    ],\n    name: \"maxWithdraw\",\n    outputs: [\n      {\n        name: \"maxAssets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      },\n      {\n        name: \"receiver\",\n        type: \"address\"\n      }\n    ],\n    name: \"mint\",\n    outputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"previewDeposit\",\n    outputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"previewMint\",\n    outputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"previewRedeem\",\n    outputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"previewWithdraw\",\n    outputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      },\n      {\n        name: \"receiver\",\n        type: \"address\"\n      },\n      {\n        name: \"owner\",\n        type: \"address\"\n      }\n    ],\n    name: \"redeem\",\n    outputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [],\n    name: \"totalAssets\",\n    outputs: [\n      {\n        name: \"totalManagedAssets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      },\n      {\n        name: \"receiver\",\n        type: \"address\"\n      },\n      {\n        name: \"owner\",\n        type: \"address\"\n      }\n    ],\n    name: \"withdraw\",\n    outputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  }\n];\n\n// src/constants/units.ts\nvar units = [\n  \"wei\",\n  \"kwei\",\n  \"mwei\",\n  \"gwei\",\n  \"szabo\",\n  \"finney\",\n  \"ether\"\n];\n\n// src/connectors/base.ts\nvar Connector = class extends EventEmitter {\n  constructor({\n    chains = defaultChains,\n    options\n  }) {\n    super();\n    this.chains = chains;\n    this.options = options;\n  }\n  getBlockExplorerUrls(chain2) {\n    const { default: blockExplorer, ...blockExplorers } = chain2.blockExplorers ?? {};\n    if (blockExplorer)\n      return [\n        blockExplorer.url,\n        ...Object.values(blockExplorers).map((x) => x.url)\n      ];\n  }\n  isChainUnsupported(chainId2) {\n    return !this.chains.some((x) => x.id === chainId2);\n  }\n};\n\n// src/connectors/injected.ts\nvar _provider, _switchingChains;\nvar InjectedConnector = class extends Connector {\n  constructor({\n    chains,\n    options: options_\n  } = {}) {\n    const options = {\n      shimDisconnect: true,\n      shimChainChangedDisconnect: true,\n      getProvider: () => typeof window !== \"undefined\" ? window.ethereum : void 0,\n      ...options_\n    };\n    super({ chains, options });\n    __privateAdd(this, _provider, void 0);\n    __privateAdd(this, _switchingChains, void 0);\n    this.shimDisconnectKey = \"injected.shimDisconnect\";\n    this.onAccountsChanged = (accounts) => {\n      if (accounts.length === 0)\n        this.emit(\"disconnect\");\n      else\n        this.emit(\"change\", {\n          account: getAddress(accounts[0])\n        });\n    };\n    this.onChainChanged = (chainId2) => {\n      const id = normalizeChainId(chainId2);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", { chain: { id, unsupported } });\n    };\n    this.onDisconnect = () => {\n      if (this.options.shimChainChangedDisconnect && __privateGet(this, _switchingChains)) {\n        __privateSet(this, _switchingChains, false);\n        return;\n      }\n      this.emit(\"disconnect\");\n      if (this.options.shimDisconnect)\n        getClient().storage?.removeItem(this.shimDisconnectKey);\n    };\n    const provider = options.getProvider();\n    if (typeof options.name === \"string\")\n      this.name = options.name;\n    else if (provider) {\n      const detectedName = getInjectedName(provider);\n      if (options.name)\n        this.name = options.name(detectedName);\n      else {\n        if (typeof detectedName === \"string\")\n          this.name = detectedName;\n        else\n          this.name = detectedName[0];\n      }\n    } else\n      this.name = \"Injected\";\n    this.id = \"injected\";\n    this.ready = !!provider;\n  }\n  async connect({ chainId: chainId2 } = {}) {\n    try {\n      const provider = await this.getProvider();\n      if (!provider)\n        throw new ConnectorNotFoundError();\n      if (provider.on) {\n        provider.on(\"accountsChanged\", this.onAccountsChanged);\n        provider.on(\"chainChanged\", this.onChainChanged);\n        provider.on(\"disconnect\", this.onDisconnect);\n      }\n      this.emit(\"message\", { type: \"connecting\" });\n      const accounts = await provider.request({\n        method: \"eth_requestAccounts\"\n      });\n      const account = getAddress(accounts[0]);\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n      if (chainId2 && id !== chainId2) {\n        const chain2 = await this.switchChain(chainId2);\n        id = chain2.id;\n        unsupported = this.isChainUnsupported(id);\n      }\n      if (this.options.shimDisconnect)\n        getClient().storage?.setItem(this.shimDisconnectKey, true);\n      return { account, chain: { id, unsupported }, provider };\n    } catch (error) {\n      if (this.isUserRejectedRequestError(error))\n        throw new UserRejectedRequestError(error);\n      if (error.code === -32002)\n        throw new ResourceUnavailableError(error);\n      throw error;\n    }\n  }\n  async disconnect() {\n    const provider = await this.getProvider();\n    if (!provider?.removeListener)\n      return;\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\n    provider.removeListener(\"disconnect\", this.onDisconnect);\n    if (this.options.shimDisconnect)\n      getClient().storage?.removeItem(this.shimDisconnectKey);\n  }\n  async getAccount() {\n    const provider = await this.getProvider();\n    if (!provider)\n      throw new ConnectorNotFoundError();\n    const accounts = await provider.request({\n      method: \"eth_accounts\"\n    });\n    return getAddress(accounts[0]);\n  }\n  async getChainId() {\n    const provider = await this.getProvider();\n    if (!provider)\n      throw new ConnectorNotFoundError();\n    return provider.request({ method: \"eth_chainId\" }).then(normalizeChainId);\n  }\n  async getProvider() {\n    const provider = this.options.getProvider();\n    if (provider)\n      __privateSet(this, _provider, provider);\n    return __privateGet(this, _provider);\n  }\n  async getSigner({ chainId: chainId2 } = {}) {\n    const [provider, account] = await Promise.all([\n      this.getProvider(),\n      this.getAccount()\n    ]);\n    return new providers2.Web3Provider(\n      provider,\n      chainId2\n    ).getSigner(account);\n  }\n  async isAuthorized() {\n    try {\n      if (this.options.shimDisconnect && !getClient().storage?.getItem(this.shimDisconnectKey))\n        return false;\n      const provider = await this.getProvider();\n      if (!provider)\n        throw new ConnectorNotFoundError();\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n  async switchChain(chainId2) {\n    if (this.options.shimChainChangedDisconnect)\n      __privateSet(this, _switchingChains, true);\n    const provider = await this.getProvider();\n    if (!provider)\n      throw new ConnectorNotFoundError();\n    const id = hexValue(chainId2);\n    try {\n      await provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: id }]\n      });\n      return this.chains.find((x) => x.id === chainId2) ?? {\n        id: chainId2,\n        name: `Chain ${id}`,\n        network: `${id}`,\n        rpcUrls: { default: \"\" }\n      };\n    } catch (error) {\n      const chain2 = this.chains.find((x) => x.id === chainId2);\n      if (!chain2)\n        throw new ChainNotConfiguredError({ chainId: chainId2, connectorId: this.id });\n      if (error.code === 4902 || error?.data?.originalError?.code === 4902) {\n        try {\n          await provider.request({\n            method: \"wallet_addEthereumChain\",\n            params: [\n              {\n                chainId: id,\n                chainName: chain2.name,\n                nativeCurrency: chain2.nativeCurrency,\n                rpcUrls: [chain2.rpcUrls.public ?? chain2.rpcUrls.default],\n                blockExplorerUrls: this.getBlockExplorerUrls(chain2)\n              }\n            ]\n          });\n          return chain2;\n        } catch (addError) {\n          if (this.isUserRejectedRequestError(addError))\n            throw new UserRejectedRequestError(error);\n          throw new AddChainError();\n        }\n      }\n      if (this.isUserRejectedRequestError(error))\n        throw new UserRejectedRequestError(error);\n      throw new SwitchChainError(error);\n    }\n  }\n  async watchAsset({\n    address,\n    decimals = 18,\n    image,\n    symbol\n  }) {\n    const provider = await this.getProvider();\n    if (!provider)\n      throw new ConnectorNotFoundError();\n    return provider.request({\n      method: \"wallet_watchAsset\",\n      params: {\n        type: \"ERC20\",\n        options: {\n          address,\n          decimals,\n          image,\n          symbol\n        }\n      }\n    });\n  }\n  isUserRejectedRequestError(error) {\n    return error.code === 4001;\n  }\n};\n_provider = new WeakMap();\n_switchingChains = new WeakMap();\n\n// src/storage.ts\nvar noopStorage = {\n  getItem: (_key) => \"\",\n  setItem: (_key, _value) => null,\n  removeItem: (_key) => null\n};\nfunction createStorage({\n  deserialize: deserialize2 = deserialize,\n  key: prefix = \"wagmi\",\n  serialize: serialize2 = serialize,\n  storage\n}) {\n  return {\n    ...storage,\n    getItem: (key, defaultState = null) => {\n      const value = storage.getItem(`${prefix}.${key}`);\n      try {\n        return value ? deserialize2(value) : defaultState;\n      } catch (error) {\n        console.warn(error);\n        return defaultState;\n      }\n    },\n    setItem: (key, value) => {\n      if (value === null) {\n        storage.removeItem(`${prefix}.${key}`);\n      } else {\n        try {\n          storage.setItem(`${prefix}.${key}`, serialize2(value));\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    },\n    removeItem: (key) => storage.removeItem(`${prefix}.${key}`)\n  };\n}\n\n// src/client.ts\nvar storeKey = \"store\";\nvar _isAutoConnecting, _lastUsedConnector, _addEffects, addEffects_fn;\nvar Client = class {\n  constructor({\n    autoConnect = false,\n    connectors = [new InjectedConnector()],\n    provider,\n    storage = createStorage({\n      storage: typeof window !== \"undefined\" ? window.localStorage : noopStorage\n    }),\n    logger = {\n      warn: console.warn\n    },\n    webSocketProvider\n  }) {\n    __privateAdd(this, _addEffects);\n    this.providers = /* @__PURE__ */ new Map();\n    this.webSocketProviders = /* @__PURE__ */ new Map();\n    __privateAdd(this, _isAutoConnecting, void 0);\n    __privateAdd(this, _lastUsedConnector, void 0);\n    this.config = {\n      autoConnect,\n      connectors,\n      logger,\n      provider,\n      storage,\n      webSocketProvider\n    };\n    let status = \"disconnected\";\n    let chainId2;\n    if (autoConnect) {\n      try {\n        const rawState = storage.getItem(storeKey, \"\");\n        const data = JSON.parse(rawState || \"{}\")?.state?.data;\n        status = data?.account ? \"reconnecting\" : \"connecting\";\n        chainId2 = data?.chain?.id;\n      } catch (_error) {\n      }\n    }\n    this.store = create(\n      subscribeWithSelector(\n        persist(\n          () => ({\n            connectors: typeof connectors === \"function\" ? connectors() : connectors,\n            provider: this.getProvider({ chainId: chainId2 }),\n            status,\n            webSocketProvider: this.getWebSocketProvider({ chainId: chainId2 })\n          }),\n          {\n            deserialize: (state) => state,\n            name: storeKey,\n            getStorage: () => storage,\n            partialize: (state) => ({\n              ...autoConnect && {\n                data: {\n                  account: state?.data?.account,\n                  chain: state?.data?.chain\n                }\n              },\n              chains: state?.chains\n            }),\n            serialize: (state) => state,\n            version: 2\n          }\n        )\n      )\n    );\n    this.storage = storage;\n    __privateSet(this, _lastUsedConnector, storage?.getItem(\"wallet\"));\n    __privateMethod(this, _addEffects, addEffects_fn).call(this);\n    if (autoConnect && typeof window !== \"undefined\")\n      setTimeout(async () => await this.autoConnect(), 0);\n  }\n  get chains() {\n    return this.store.getState().chains;\n  }\n  get connectors() {\n    return this.store.getState().connectors;\n  }\n  get connector() {\n    return this.store.getState().connector;\n  }\n  get data() {\n    return this.store.getState().data;\n  }\n  get error() {\n    return this.store.getState().error;\n  }\n  get lastUsedChainId() {\n    return this.data?.chain?.id;\n  }\n  get provider() {\n    return this.store.getState().provider;\n  }\n  get status() {\n    return this.store.getState().status;\n  }\n  get subscribe() {\n    return this.store.subscribe;\n  }\n  get webSocketProvider() {\n    return this.store.getState().webSocketProvider;\n  }\n  setState(updater) {\n    const newState = typeof updater === \"function\" ? updater(this.store.getState()) : updater;\n    this.store.setState(newState, true);\n  }\n  clearState() {\n    this.setState((x) => ({\n      ...x,\n      chains: void 0,\n      connector: void 0,\n      data: void 0,\n      error: void 0,\n      status: \"disconnected\"\n    }));\n  }\n  async destroy() {\n    if (this.connector)\n      await this.connector.disconnect?.();\n    __privateSet(this, _isAutoConnecting, false);\n    this.clearState();\n    this.store.destroy();\n  }\n  async autoConnect() {\n    if (__privateGet(this, _isAutoConnecting))\n      return;\n    __privateSet(this, _isAutoConnecting, true);\n    this.setState((x) => ({\n      ...x,\n      status: x.data?.account ? \"reconnecting\" : \"connecting\"\n    }));\n    const sorted = __privateGet(this, _lastUsedConnector) ? [...this.connectors].sort(\n      (x) => x.id === __privateGet(this, _lastUsedConnector) ? -1 : 1\n    ) : this.connectors;\n    let connected = false;\n    for (const connector of sorted) {\n      if (!connector.ready || !connector.isAuthorized)\n        continue;\n      const isAuthorized = await connector.isAuthorized();\n      if (!isAuthorized)\n        continue;\n      const data = await connector.connect();\n      this.setState((x) => ({\n        ...x,\n        connector,\n        chains: connector?.chains,\n        data,\n        status: \"connected\"\n      }));\n      connected = true;\n      break;\n    }\n    if (!connected)\n      this.setState((x) => ({\n        ...x,\n        data: void 0,\n        status: \"disconnected\"\n      }));\n    __privateSet(this, _isAutoConnecting, false);\n    return this.data;\n  }\n  getProvider({ bust, chainId: chainId2 } = {}) {\n    let provider_ = this.providers.get(chainId2 ?? -1);\n    if (provider_ && !bust)\n      return provider_;\n    const { provider } = this.config;\n    provider_ = typeof provider === \"function\" ? provider({ chainId: chainId2 }) : provider;\n    this.providers.set(chainId2 ?? -1, provider_);\n    return provider_;\n  }\n  getWebSocketProvider({\n    bust,\n    chainId: chainId2\n  } = {}) {\n    let webSocketProvider_ = this.webSocketProviders.get(chainId2 ?? -1);\n    if (webSocketProvider_ && !bust)\n      return webSocketProvider_;\n    const { webSocketProvider } = this.config;\n    webSocketProvider_ = typeof webSocketProvider === \"function\" ? webSocketProvider({ chainId: chainId2 }) : webSocketProvider;\n    if (webSocketProvider_)\n      this.webSocketProviders.set(chainId2 ?? -1, webSocketProvider_);\n    return webSocketProvider_;\n  }\n  setLastUsedConnector(lastUsedConnector = null) {\n    this.storage?.setItem(\"wallet\", lastUsedConnector);\n  }\n};\n_isAutoConnecting = new WeakMap();\n_lastUsedConnector = new WeakMap();\n_addEffects = new WeakSet();\naddEffects_fn = function() {\n  const onChange = (data) => {\n    this.setState((x) => ({\n      ...x,\n      data: { ...x.data, ...data }\n    }));\n  };\n  const onDisconnect = () => {\n    this.clearState();\n  };\n  const onError = (error) => {\n    this.setState((x) => ({ ...x, error }));\n  };\n  this.store.subscribe(\n    ({ connector }) => connector,\n    (connector, prevConnector) => {\n      prevConnector?.off?.(\"change\", onChange);\n      prevConnector?.off?.(\"disconnect\", onDisconnect);\n      prevConnector?.off?.(\"error\", onError);\n      if (!connector)\n        return;\n      connector.on?.(\"change\", onChange);\n      connector.on?.(\"disconnect\", onDisconnect);\n      connector.on?.(\"error\", onError);\n    }\n  );\n  const { provider, webSocketProvider } = this.config;\n  const subscribeProvider = typeof provider === \"function\";\n  const subscribeWebSocketProvider = typeof webSocketProvider === \"function\";\n  if (subscribeProvider || subscribeWebSocketProvider)\n    this.store.subscribe(\n      ({ data }) => data?.chain?.id,\n      (chainId2) => {\n        this.setState((x) => ({\n          ...x,\n          provider: this.getProvider({ bust: true, chainId: chainId2 }),\n          webSocketProvider: this.getWebSocketProvider({\n            bust: true,\n            chainId: chainId2\n          })\n        }));\n      }\n    );\n};\nvar client;\nfunction createClient(config) {\n  const client_ = new Client(config);\n  client = client_;\n  return client_;\n}\nfunction getClient() {\n  if (!client) {\n    throw new Error(\n      \"No wagmi client found. Ensure you have set up a client: https://wagmi.sh/react/client\"\n    );\n  }\n  return client;\n}\n\n// src/actions/accounts/connect.ts\nasync function connect({\n  chainId: chainId2,\n  connector\n}) {\n  const client2 = getClient();\n  const activeConnector = client2.connector;\n  if (activeConnector && connector.id === activeConnector.id)\n    throw new ConnectorAlreadyConnectedError();\n  try {\n    client2.setState((x) => ({ ...x, status: \"connecting\" }));\n    const data = await connector.connect({ chainId: chainId2 });\n    client2.setLastUsedConnector(connector.id);\n    client2.setState((x) => ({\n      ...x,\n      connector,\n      chains: connector?.chains,\n      data,\n      status: \"connected\"\n    }));\n    client2.storage.setItem(\"connected\", true);\n    return { ...data, connector };\n  } catch (err) {\n    client2.setState((x) => {\n      return {\n        ...x,\n        status: x.connector ? \"connected\" : \"disconnected\"\n      };\n    });\n    throw err;\n  }\n}\n\n// src/actions/accounts/disconnect.ts\nasync function disconnect() {\n  const client2 = getClient();\n  if (client2.connector)\n    await client2.connector.disconnect();\n  client2.clearState();\n  client2.storage.removeItem(\"connected\");\n}\n\n// src/actions/accounts/fetchBalance.ts\nimport { formatUnits as formatUnits2, parseBytes32String as parseBytes32String2 } from \"ethers/lib/utils.js\";\n\n// src/actions/contracts/fetchToken.ts\nimport { formatUnits, parseBytes32String } from \"ethers/lib/utils.js\";\nasync function fetchToken({\n  address,\n  chainId: chainId2,\n  formatUnits: units2 = \"ether\"\n}) {\n  async function fetchToken_({ abi }) {\n    const erc20Config = { address, abi, chainId: chainId2 };\n    const [decimals, name, symbol, totalSupply] = await readContracts({\n      allowFailure: false,\n      contracts: [\n        { ...erc20Config, functionName: \"decimals\" },\n        { ...erc20Config, functionName: \"name\" },\n        { ...erc20Config, functionName: \"symbol\" },\n        { ...erc20Config, functionName: \"totalSupply\" }\n      ]\n    });\n    return {\n      address,\n      decimals,\n      name,\n      symbol,\n      totalSupply: {\n        formatted: formatUnits(totalSupply, units2),\n        value: totalSupply\n      }\n    };\n  }\n  try {\n    return await fetchToken_({ abi: erc20ABI });\n  } catch (err) {\n    if (err instanceof ContractResultDecodeError) {\n      const { name, symbol, ...rest } = await fetchToken_({\n        abi: erc20ABI_bytes32\n      });\n      return {\n        name: parseBytes32String(name),\n        symbol: parseBytes32String(symbol),\n        ...rest\n      };\n    }\n    throw err;\n  }\n}\n\n// src/actions/contracts/getContract.ts\nimport { Contract as EthersContract } from \"ethers\";\nfunction getContract({\n  address,\n  abi,\n  signerOrProvider\n}) {\n  return new EthersContract(\n    address,\n    abi,\n    signerOrProvider\n  );\n}\n\n// src/actions/contracts/prepareWriteContract.ts\nasync function prepareWriteContract({\n  abi,\n  address,\n  args,\n  chainId: chainId2,\n  functionName,\n  overrides,\n  signer: signer_\n}) {\n  const signer = signer_ ?? await fetchSigner({ chainId: chainId2 });\n  if (!signer)\n    throw new ConnectorNotFoundError();\n  if (chainId2)\n    assertActiveChain({ chainId: chainId2, signer });\n  const contract = getContract({\n    address,\n    abi,\n    signerOrProvider: signer\n  });\n  const normalizedFunctionName = normalizeFunctionName({\n    contract,\n    functionName,\n    args\n  });\n  const populateTransactionFn = contract.populateTransaction[normalizedFunctionName];\n  if (!populateTransactionFn)\n    throw new ContractMethodDoesNotExistError({\n      address,\n      functionName: normalizedFunctionName\n    });\n  const params = [...args ?? [], ...overrides ? [overrides] : []];\n  const unsignedTransaction = await populateTransactionFn(\n    ...params\n  );\n  const gasLimit = unsignedTransaction.gasLimit || await signer.estimateGas(unsignedTransaction);\n  const minimizedAbi = minimizeContractInterface({\n    abi,\n    functionName\n  });\n  return {\n    abi: minimizedAbi,\n    address,\n    chainId: chainId2,\n    functionName,\n    mode: \"prepared\",\n    request: {\n      ...unsignedTransaction,\n      gasLimit\n    }\n  };\n}\n\n// src/actions/providers/getProvider.ts\nfunction getProvider({\n  chainId: chainId2\n} = {}) {\n  const client2 = getClient();\n  if (chainId2)\n    return client2.getProvider({ chainId: chainId2 }) || client2.provider;\n  return client2.provider;\n}\n\n// src/actions/providers/getWebSocketProvider.ts\nfunction getWebSocketProvider({\n  chainId: chainId2\n} = {}) {\n  const client2 = getClient();\n  if (chainId2)\n    return client2.getWebSocketProvider({ chainId: chainId2 }) || client2.webSocketProvider;\n  return client2.webSocketProvider;\n}\n\n// src/actions/providers/watchProvider.ts\nfunction watchProvider(args, callback) {\n  const client2 = getClient();\n  const handleChange = async () => callback(getProvider(args));\n  const unsubscribe = client2.subscribe(({ provider }) => provider, handleChange);\n  return unsubscribe;\n}\n\n// src/actions/providers/watchWebSocketProvider.ts\nfunction watchWebSocketProvider(args, callback) {\n  const client2 = getClient();\n  const handleChange = async () => callback(getWebSocketProvider(args));\n  const unsubscribe = client2.subscribe(\n    ({ webSocketProvider }) => webSocketProvider,\n    handleChange\n  );\n  return unsubscribe;\n}\n\n// src/actions/contracts/multicall.ts\nasync function multicall({\n  allowFailure = true,\n  chainId: chainId2,\n  contracts,\n  overrides\n}) {\n  const provider = getProvider({ chainId: chainId2 });\n  if (!provider.chains)\n    throw new ProviderChainsNotFound();\n  const chain2 = provider.chains.find((chain3) => chain3.id === chainId2) || provider.chains[0];\n  if (!chain2)\n    throw new ProviderChainsNotFound();\n  if (!chain2?.multicall)\n    throw new ChainDoesNotSupportMulticallError({ chain: chain2 });\n  if (typeof overrides?.blockTag === \"number\" && overrides?.blockTag < chain2.multicall.blockCreated)\n    throw new ChainDoesNotSupportMulticallError({\n      blockNumber: overrides?.blockTag,\n      chain: chain2\n    });\n  const multicallContract = getContract({\n    address: chain2.multicall.address,\n    abi: multicallABI,\n    signerOrProvider: provider\n  });\n  const calls = contracts.map(\n    ({ address, abi, functionName, ...config }) => {\n      const { args } = config || {};\n      const contract = getContract({ address, abi });\n      const params2 = args ?? [];\n      const normalizedFunctionName = normalizeFunctionName({\n        contract,\n        functionName,\n        args\n      });\n      try {\n        const contractFunction = contract[normalizedFunctionName];\n        if (!contractFunction)\n          logWarn(\n            `\"${normalizedFunctionName}\" is not in the interface for contract \"${address}\"`\n          );\n        const callData = contract.interface.encodeFunctionData(\n          normalizedFunctionName,\n          params2\n        );\n        return {\n          target: address,\n          allowFailure,\n          callData\n        };\n      } catch (err) {\n        if (!allowFailure)\n          throw err;\n        return {\n          target: address,\n          allowFailure,\n          callData: \"0x\"\n        };\n      }\n    }\n  );\n  const params = [...[calls], ...overrides ? [overrides] : []];\n  const results = await multicallContract.aggregate3(\n    ...params\n  );\n  return results.map(({ returnData, success }, i) => {\n    const { address, abi, args, functionName } = contracts[i];\n    const contract = getContract({\n      address,\n      abi\n    });\n    const normalizedFunctionName = normalizeFunctionName({\n      contract,\n      functionName,\n      args\n    });\n    if (!success) {\n      let error;\n      try {\n        contract.interface.decodeFunctionResult(\n          normalizedFunctionName,\n          returnData\n        );\n      } catch (err) {\n        error = new ContractMethodRevertedError({\n          address,\n          args,\n          chainId: chain2.id,\n          functionName: normalizedFunctionName,\n          errorMessage: err.message\n        });\n        if (!allowFailure)\n          throw error;\n        logWarn(error.message);\n      }\n      return null;\n    }\n    if (returnData === \"0x\") {\n      const error = new ContractMethodNoResultError({\n        address,\n        args,\n        chainId: chain2.id,\n        functionName: normalizedFunctionName\n      });\n      if (!allowFailure)\n        throw error;\n      logWarn(error.message);\n      return null;\n    }\n    try {\n      const result = contract.interface.decodeFunctionResult(\n        normalizedFunctionName,\n        returnData\n      );\n      return Array.isArray(result) && result.length === 1 ? result[0] : result;\n    } catch (err) {\n      const error = new ContractResultDecodeError({\n        address,\n        args,\n        chainId: chain2.id,\n        functionName: normalizedFunctionName,\n        errorMessage: err.message\n      });\n      if (!allowFailure)\n        throw error;\n      logWarn(error.message);\n      return null;\n    }\n  });\n}\n\n// src/actions/contracts/readContract.ts\nasync function readContract({\n  address,\n  args,\n  chainId: chainId2,\n  abi,\n  functionName,\n  overrides\n}) {\n  const provider = getProvider({ chainId: chainId2 });\n  const contract = getContract({\n    address,\n    abi,\n    signerOrProvider: provider\n  });\n  const normalizedFunctionName = normalizeFunctionName({\n    contract,\n    functionName,\n    args\n  });\n  const contractFunction = contract[normalizedFunctionName];\n  if (!contractFunction)\n    throw new ContractMethodDoesNotExistError({\n      address,\n      functionName: normalizedFunctionName\n    });\n  const params = [...args ?? [], ...overrides ? [overrides] : []];\n  return contractFunction?.(...params);\n}\n\n// src/actions/contracts/readContracts.ts\nasync function readContracts({\n  allowFailure = true,\n  contracts,\n  overrides\n}) {\n  try {\n    const provider = getProvider();\n    const contractsByChainId = contracts.reduce((contracts2, contract, index) => {\n      const chainId2 = contract.chainId ?? provider.network.chainId;\n      return {\n        ...contracts2,\n        [chainId2]: [...contracts2[chainId2] || [], { contract, index }]\n      };\n    }, {});\n    const promises = () => Object.entries(contractsByChainId).map(\n      ([chainId2, contracts2]) => multicall({\n        allowFailure,\n        chainId: parseInt(chainId2),\n        contracts: contracts2.map(({ contract }) => contract),\n        overrides\n      })\n    );\n    let multicallResults;\n    if (allowFailure) {\n      multicallResults = (await Promise.allSettled(promises())).map((result) => {\n        if (result.status === \"fulfilled\")\n          return result.value;\n        if (result.reason instanceof ChainDoesNotSupportMulticallError) {\n          logWarn(result.reason.message);\n          throw result.reason;\n        }\n        return null;\n      }).flat();\n    } else {\n      multicallResults = (await Promise.all(promises())).flat();\n    }\n    const resultIndexes = Object.values(contractsByChainId).map((contracts2) => contracts2.map(({ index }) => index)).flat();\n    return multicallResults.reduce((results, result, index) => {\n      if (results)\n        results[resultIndexes[index]] = result;\n      return results;\n    }, []);\n  } catch (err) {\n    if (err instanceof ContractResultDecodeError)\n      throw err;\n    if (err instanceof ContractMethodNoResultError)\n      throw err;\n    if (err instanceof ContractMethodRevertedError)\n      throw err;\n    const promises = () => contracts.map(\n      (contract) => readContract({ ...contract, overrides })\n    );\n    if (allowFailure)\n      return (await Promise.allSettled(promises())).map((result, i) => {\n        if (result.status === \"fulfilled\")\n          return result.value;\n        const { address, args, chainId: chainId2, functionName } = contracts[i];\n        const error = new ContractMethodRevertedError({\n          address,\n          functionName,\n          chainId: chainId2 ?? mainnet.id,\n          args,\n          errorMessage: result.reason\n        });\n        logWarn(error.message);\n        return null;\n      });\n    return await Promise.all(promises());\n  }\n}\n\n// src/actions/contracts/watchContractEvent.ts\nimport shallow from \"zustand/shallow\";\nfunction watchContractEvent({\n  address,\n  abi,\n  chainId: chainId2,\n  eventName,\n  once\n}, callback) {\n  const handler = (...event) => callback(...event);\n  let contract;\n  const watchEvent = async () => {\n    if (contract)\n      contract?.off(eventName, handler);\n    const signerOrProvider = getWebSocketProvider({ chainId: chainId2 }) || getProvider({ chainId: chainId2 });\n    contract = getContract({\n      address,\n      abi,\n      signerOrProvider\n    });\n    if (once)\n      contract.once(eventName, handler);\n    else\n      contract.on(eventName, handler);\n  };\n  watchEvent();\n  const client2 = getClient();\n  const unsubscribe = client2.subscribe(\n    ({ provider, webSocketProvider }) => ({\n      provider,\n      webSocketProvider\n    }),\n    watchEvent,\n    { equalityFn: shallow }\n  );\n  return () => {\n    contract?.off(eventName, handler);\n    unsubscribe();\n  };\n}\n\n// src/actions/network-status/watchBlockNumber.ts\nimport shallow2 from \"zustand/shallow\";\n\n// src/actions/network-status/fetchBlockNumber.ts\nasync function fetchBlockNumber({\n  chainId: chainId2\n} = {}) {\n  const provider = getProvider({ chainId: chainId2 });\n  const blockNumber = await provider.getBlockNumber();\n  return blockNumber;\n}\n\n// src/actions/network-status/watchBlockNumber.ts\nfunction watchBlockNumber(args, callback) {\n  const debouncedCallback = debounce(callback, 1);\n  let previousProvider;\n  const createListener = (provider) => {\n    if (previousProvider) {\n      previousProvider?.off(\"block\", debouncedCallback);\n    }\n    provider.on(\"block\", debouncedCallback);\n    previousProvider = provider;\n  };\n  const provider_ = getWebSocketProvider({ chainId: args.chainId }) ?? getProvider({ chainId: args.chainId });\n  if (args.listen)\n    createListener(provider_);\n  let active = true;\n  const client2 = getClient();\n  const unsubscribe = client2.subscribe(\n    ({ provider, webSocketProvider }) => ({ provider, webSocketProvider }),\n    async ({ provider, webSocketProvider }) => {\n      const provider_2 = webSocketProvider ?? provider;\n      if (args.listen && !args.chainId && provider_2) {\n        createListener(provider_2);\n      }\n      const blockNumber = await fetchBlockNumber({ chainId: args.chainId });\n      if (!active)\n        return;\n      callback(blockNumber);\n    },\n    {\n      equalityFn: shallow2\n    }\n  );\n  return () => {\n    active = false;\n    unsubscribe();\n    provider_?.off(\"block\", debouncedCallback);\n    previousProvider?.off(\"block\", debouncedCallback);\n  };\n}\n\n// src/actions/contracts/watchMulticall.ts\nfunction watchMulticall(config, callback) {\n  const client2 = getClient();\n  const handleChange = async () => callback(await multicall(config));\n  const unwatch = config.listenToBlock ? watchBlockNumber({ listen: true }, handleChange) : void 0;\n  const unsubscribe = client2.subscribe(({ provider }) => provider, handleChange);\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/actions/contracts/watchReadContract.ts\nfunction watchReadContract(config, callback) {\n  const client2 = getClient();\n  const handleChange = async () => callback(await readContract(config));\n  const unwatch = config.listenToBlock ? watchBlockNumber({ listen: true }, handleChange) : void 0;\n  const unsubscribe = client2.subscribe(({ provider }) => provider, handleChange);\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/actions/contracts/watchReadContracts.ts\nfunction watchReadContracts(config, callback) {\n  const client2 = getClient();\n  const handleChange = async () => callback(await readContracts(config));\n  const unwatch = config.listenToBlock ? watchBlockNumber({ listen: true }, handleChange) : void 0;\n  const unsubscribe = client2.subscribe(({ provider }) => provider, handleChange);\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/actions/transactions/fetchTransaction.ts\nasync function fetchTransaction({\n  chainId: chainId2,\n  hash\n}) {\n  const provider = getProvider({ chainId: chainId2 });\n  return provider.getTransaction(hash);\n}\n\n// src/actions/transactions/prepareSendTransaction.ts\nimport { isAddress as isAddress2 } from \"ethers/lib/utils.js\";\n\n// src/actions/ens/fetchEnsAddress.ts\nimport { getAddress as getAddress2 } from \"ethers/lib/utils.js\";\nasync function fetchEnsAddress({\n  chainId: chainId2,\n  name\n}) {\n  const provider = getProvider({ chainId: chainId2 });\n  const address = await provider.resolveName(name);\n  try {\n    return address ? getAddress2(address) : null;\n  } catch (_error) {\n    return null;\n  }\n}\n\n// src/actions/ens/fetchEnsAvatar.ts\nasync function fetchEnsAvatar({\n  address,\n  chainId: chainId2\n}) {\n  const provider = getProvider({ chainId: chainId2 });\n  const avatar = await provider.getAvatar(address);\n  return avatar;\n}\n\n// src/actions/ens/fetchEnsName.ts\nimport { getAddress as getAddress3 } from \"ethers/lib/utils.js\";\nasync function fetchEnsName({\n  address,\n  chainId: chainId2\n}) {\n  const provider = getProvider({ chainId: chainId2 });\n  return provider.lookupAddress(getAddress3(address));\n}\n\n// src/actions/ens/fetchEnsResolver.ts\nasync function fetchEnsResolver({\n  chainId: chainId2,\n  name\n}) {\n  const provider = getProvider({ chainId: chainId2 });\n  const resolver = await provider.getResolver(name);\n  return resolver;\n}\n\n// src/actions/transactions/prepareSendTransaction.ts\nasync function prepareSendTransaction({\n  chainId: chainId2,\n  request,\n  signer: signer_\n}) {\n  const signer = signer_ ?? await fetchSigner({ chainId: chainId2 });\n  if (!signer)\n    throw new ConnectorNotFoundError();\n  if (chainId2)\n    assertActiveChain({ chainId: chainId2, signer });\n  const [to, gasLimit] = await Promise.all([\n    isAddress2(request.to) ? Promise.resolve(request.to) : fetchEnsAddress({ name: request.to }),\n    request.gasLimit ? Promise.resolve(request.gasLimit) : signer.estimateGas(request)\n  ]);\n  if (!to)\n    throw new Error(\"Could not resolve ENS name\");\n  return {\n    ...chainId2 ? { chainId: chainId2 } : {},\n    request: { ...request, gasLimit, to },\n    mode: \"prepared\"\n  };\n}\n\n// src/actions/transactions/sendTransaction.ts\nasync function sendTransaction({\n  chainId: chainId2,\n  mode,\n  request\n}) {\n  const signer = await fetchSigner();\n  if (!signer)\n    throw new ConnectorNotFoundError();\n  if (mode === \"prepared\") {\n    if (!request.gasLimit)\n      throw new Error(\"`gasLimit` is required\");\n    if (!request.to)\n      throw new Error(\"`to` is required\");\n  }\n  if (chainId2)\n    assertActiveChain({ chainId: chainId2, signer });\n  try {\n    const uncheckedSigner = signer.connectUnchecked?.();\n    const { hash, wait } = await (uncheckedSigner ?? signer).sendTransaction(\n      request\n    );\n    return { hash, wait };\n  } catch (error) {\n    if (error.code === 4001)\n      throw new UserRejectedRequestError(error);\n    throw error;\n  }\n}\n\n// src/actions/transactions/waitForTransaction.ts\nasync function waitForTransaction({\n  chainId: chainId2,\n  confirmations,\n  hash,\n  timeout,\n  wait: wait_\n}) {\n  let promise;\n  if (hash) {\n    const provider = getProvider({ chainId: chainId2 });\n    promise = provider.waitForTransaction(hash, confirmations, timeout);\n  } else if (wait_)\n    promise = wait_(confirmations);\n  else\n    throw new Error(\"hash or wait is required\");\n  return promise;\n}\n\n// src/actions/contracts/writeContract.ts\nasync function writeContract({\n  address,\n  args,\n  chainId: chainId2,\n  abi,\n  functionName,\n  mode,\n  overrides,\n  request: request_\n}) {\n  const signer = await fetchSigner();\n  if (!signer)\n    throw new ConnectorNotFoundError();\n  if (chainId2)\n    assertActiveChain({ chainId: chainId2, signer });\n  if (mode === \"prepared\") {\n    if (!request_)\n      throw new Error(\"`request` is required\");\n  }\n  const request = mode === \"recklesslyUnprepared\" ? (await prepareWriteContract({\n    address,\n    args,\n    chainId: chainId2,\n    abi,\n    functionName,\n    overrides\n  })).request : request_;\n  const transaction = await sendTransaction({\n    request,\n    mode: \"prepared\"\n  });\n  return transaction;\n}\n\n// src/actions/accounts/fetchBalance.ts\nasync function fetchBalance({\n  address,\n  chainId: chainId2,\n  formatUnits: unit,\n  token\n}) {\n  const client2 = getClient();\n  const provider = getProvider({ chainId: chainId2 });\n  if (token) {\n    const fetchContractBalance = async ({ abi }) => {\n      const erc20Config = { abi, address: token, chainId: chainId2 };\n      const [value2, decimals, symbol] = await readContracts({\n        allowFailure: false,\n        contracts: [\n          {\n            ...erc20Config,\n            functionName: \"balanceOf\",\n            args: [address]\n          },\n          { ...erc20Config, functionName: \"decimals\" },\n          { ...erc20Config, functionName: \"symbol\" }\n        ]\n      });\n      return {\n        decimals,\n        formatted: formatUnits2(value2 ?? \"0\", unit ?? decimals),\n        symbol,\n        value: value2\n      };\n    };\n    try {\n      return await fetchContractBalance({ abi: erc20ABI });\n    } catch (err) {\n      if (err instanceof ContractResultDecodeError) {\n        const { symbol, ...rest } = await fetchContractBalance({\n          abi: erc20ABI_bytes32\n        });\n        return {\n          symbol: parseBytes32String2(symbol),\n          ...rest\n        };\n      }\n      throw err;\n    }\n  }\n  const chains = [...client2.provider.chains || [], ...client2.chains ?? []];\n  const value = await provider.getBalance(address);\n  const chain2 = chains.find((x) => x.id === provider.network.chainId);\n  return {\n    decimals: chain2?.nativeCurrency?.decimals ?? 18,\n    formatted: formatUnits2(value ?? \"0\", unit ?? \"ether\"),\n    symbol: chain2?.nativeCurrency?.symbol ?? \"ETH\",\n    value\n  };\n}\n\n// src/actions/accounts/fetchSigner.ts\nasync function fetchSigner({\n  chainId: chainId2\n} = {}) {\n  const client2 = getClient();\n  const signer = await client2.connector?.getSigner?.({ chainId: chainId2 }) || null;\n  return signer;\n}\n\n// src/actions/accounts/getAccount.ts\nfunction getAccount() {\n  const { data, connector, status } = getClient();\n  switch (status) {\n    case \"connected\":\n      return {\n        address: data?.account,\n        connector,\n        isConnected: true,\n        isConnecting: false,\n        isDisconnected: false,\n        isReconnecting: false,\n        status\n      };\n    case \"reconnecting\":\n      return {\n        address: data?.account,\n        connector,\n        isConnected: !!data?.account,\n        isConnecting: false,\n        isDisconnected: false,\n        isReconnecting: true,\n        status\n      };\n    case \"connecting\":\n      return {\n        address: void 0,\n        connector: void 0,\n        isConnected: false,\n        isConnecting: true,\n        isDisconnected: false,\n        isReconnecting: false,\n        status\n      };\n    case \"disconnected\":\n      return {\n        address: void 0,\n        connector: void 0,\n        isConnected: false,\n        isConnecting: false,\n        isDisconnected: true,\n        isReconnecting: false,\n        status\n      };\n  }\n}\n\n// src/actions/accounts/getNetwork.ts\nfunction getNetwork() {\n  const client2 = getClient();\n  const chainId2 = client2.data?.chain?.id;\n  const activeChains = client2.chains ?? [];\n  const activeChain = [...client2.provider.chains || [], ...activeChains].find(\n    (x) => x.id === chainId2\n  ) ?? {\n    id: chainId2,\n    name: `Chain ${chainId2}`,\n    network: `${chainId2}`,\n    rpcUrls: { default: \"\" }\n  };\n  return {\n    chain: chainId2 ? {\n      ...activeChain,\n      ...client2.data?.chain,\n      id: chainId2\n    } : void 0,\n    chains: activeChains\n  };\n}\n\n// src/actions/accounts/signMessage.ts\nasync function signMessage(args) {\n  try {\n    const signer = await fetchSigner();\n    if (!signer)\n      throw new ConnectorNotFoundError();\n    return await signer.signMessage(\n      args.message\n    );\n  } catch (error) {\n    if (error.code === 4001)\n      throw new UserRejectedRequestError(error);\n    throw error;\n  }\n}\n\n// src/actions/accounts/signTypedData.ts\nasync function signTypedData({\n  domain,\n  types,\n  value\n}) {\n  const signer = await fetchSigner();\n  if (!signer)\n    throw new ConnectorNotFoundError();\n  const { chainId: chainId_ } = domain;\n  const chainId2 = chainId_ ? normalizeChainId(chainId_) : void 0;\n  if (chainId2)\n    assertActiveChain({ chainId: chainId2, signer });\n  return signer._signTypedData(\n    domain,\n    types,\n    value\n  );\n}\n\n// src/actions/accounts/switchNetwork.ts\nasync function switchNetwork({\n  chainId: chainId2\n}) {\n  const { connector } = getClient();\n  if (!connector)\n    throw new ConnectorNotFoundError();\n  if (!connector.switchChain)\n    throw new SwitchChainNotSupportedError({\n      connector\n    });\n  return connector.switchChain(chainId2);\n}\n\n// src/actions/accounts/watchAccount.ts\nimport shallow3 from \"zustand/shallow\";\nfunction watchAccount(callback, { selector = (x) => x } = {}) {\n  const client2 = getClient();\n  const handleChange = () => callback(getAccount());\n  const unsubscribe = client2.subscribe(\n    ({ data, connector, status }) => selector({\n      address: data?.account,\n      connector,\n      status\n    }),\n    handleChange,\n    {\n      equalityFn: shallow3\n    }\n  );\n  return unsubscribe;\n}\n\n// src/actions/accounts/watchNetwork.ts\nimport shallow4 from \"zustand/shallow\";\nfunction watchNetwork(callback, { selector = (x) => x } = {}) {\n  const client2 = getClient();\n  const handleChange = () => callback(getNetwork());\n  const unsubscribe = client2.subscribe(\n    ({ data, chains }) => selector({ chainId: data?.chain?.id, chains }),\n    handleChange,\n    {\n      equalityFn: shallow4\n    }\n  );\n  return unsubscribe;\n}\n\n// src/actions/accounts/watchSigner.ts\nimport shallow5 from \"zustand/shallow\";\nfunction watchSigner({ chainId: chainId2 }, callback) {\n  const client2 = getClient();\n  const handleChange = async () => callback(await fetchSigner({ chainId: chainId2 }));\n  const unsubscribe = client2.subscribe(\n    ({ data, connector }) => ({\n      account: data?.account,\n      chainId: data?.chain?.id,\n      connector\n    }),\n    handleChange,\n    {\n      equalityFn: shallow5\n    }\n  );\n  return unsubscribe;\n}\n\n// src/actions/network-status/fetchFeeData.ts\nimport { formatUnits as formatUnits3 } from \"ethers/lib/utils.js\";\nasync function fetchFeeData({\n  chainId: chainId2,\n  formatUnits: units2 = \"wei\"\n} = {}) {\n  const provider = getProvider({ chainId: chainId2 });\n  const feeData = await provider.getFeeData();\n  const formatted = {\n    gasPrice: feeData.gasPrice ? formatUnits3(feeData.gasPrice, units2) : null,\n    maxFeePerGas: feeData.maxFeePerGas ? formatUnits3(feeData.maxFeePerGas, units2) : null,\n    maxPriorityFeePerGas: feeData.maxPriorityFeePerGas ? formatUnits3(feeData.maxPriorityFeePerGas, units2) : null\n  };\n  return { ...feeData, formatted };\n}\n\n// src/errors.ts\nvar RpcError = class extends Error {\n  constructor(code, message, internal, data) {\n    if (!Number.isInteger(code))\n      throw new Error('\"code\" must be an integer.');\n    if (!message || typeof message !== \"string\")\n      throw new Error('\"message\" must be a nonempty string.');\n    super(message);\n    this.code = code;\n    this.data = data;\n    this.internal = internal;\n  }\n};\nvar ProviderRpcError = class extends RpcError {\n  constructor(code, message, internal, data) {\n    if (!(Number.isInteger(code) && code >= 1e3 && code <= 4999))\n      throw new Error(\n        '\"code\" must be an integer such that: 1000 <= code <= 4999'\n      );\n    super(code, message, internal, data);\n  }\n};\nvar AddChainError = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"AddChainError\";\n    this.message = \"Error adding chain\";\n  }\n};\nvar ChainDoesNotSupportMulticallError = class extends Error {\n  constructor({ blockNumber, chain: chain2 }) {\n    super(\n      `Chain \"${chain2.name}\" does not support multicall${blockNumber ? ` on block ${blockNumber}` : \"\"}.`\n    );\n    this.name = \"ChainDoesNotSupportMulticall\";\n  }\n};\nvar ChainMismatchError = class extends Error {\n  constructor({\n    activeChain,\n    targetChain\n  }) {\n    super(\n      `Chain mismatch: Expected \"${targetChain}\", received \"${activeChain}\".`\n    );\n    this.name = \"ChainMismatchError\";\n  }\n};\nvar ChainNotConfiguredError = class extends Error {\n  constructor({\n    chainId: chainId2,\n    connectorId\n  }) {\n    super(`Chain \"${chainId2}\" not configured for connector \"${connectorId}\".`);\n    this.name = \"ChainNotConfigured\";\n  }\n};\nvar ConnectorAlreadyConnectedError = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ConnectorAlreadyConnectedError\";\n    this.message = \"Connector already connected\";\n  }\n};\nvar ConnectorNotFoundError = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ConnectorNotFoundError\";\n    this.message = \"Connector not found\";\n  }\n};\nvar ContractMethodDoesNotExistError = class extends Error {\n  constructor({\n    address,\n    chainId: chainId2,\n    functionName\n  }) {\n    const { chains, network } = getProvider();\n    const chain2 = chains?.find(({ id }) => id === (chainId2 || network.chainId));\n    const blockExplorer = chain2?.blockExplorers?.default;\n    super(\n      [\n        `Function \"${functionName}\" on contract \"${address}\" does not exist.`,\n        ...blockExplorer ? [\n          \"\",\n          `${blockExplorer?.name}: ${blockExplorer?.url}/address/${address}#readContract`\n        ] : []\n      ].join(\"\\n\")\n    );\n    this.name = \"ContractMethodDoesNotExistError\";\n  }\n};\nvar ContractMethodNoResultError = class extends Error {\n  constructor({\n    address,\n    args,\n    chainId: chainId2,\n    functionName\n  }) {\n    super(\n      [\n        \"Contract read returned an empty response. This could be due to any of the following:\",\n        `- The contract does not have the function \"${functionName}\",`,\n        \"- The parameters passed to the contract function may be invalid, or\",\n        \"- The address is not a contract.\",\n        \"\",\n        `Config:`,\n        JSON.stringify(\n          {\n            address,\n            abi: \"...\",\n            functionName,\n            chainId: chainId2,\n            args\n          },\n          null,\n          2\n        )\n      ].join(\"\\n\")\n    );\n    this.name = \"ContractMethodNoResultError\";\n  }\n};\nvar ContractMethodRevertedError = class extends Error {\n  constructor({\n    address,\n    args,\n    chainId: chainId2,\n    functionName,\n    errorMessage\n  }) {\n    super(\n      [\n        \"Contract method reverted with an error.\",\n        \"\",\n        `Config:`,\n        JSON.stringify(\n          {\n            address,\n            abi: \"...\",\n            functionName,\n            chainId: chainId2,\n            args\n          },\n          null,\n          2\n        ),\n        \"\",\n        `Details: ${errorMessage}`\n      ].join(\"\\n\")\n    );\n    this.name = \"ContractMethodRevertedError\";\n  }\n};\nvar ContractResultDecodeError = class extends Error {\n  constructor({\n    address,\n    args,\n    chainId: chainId2,\n    functionName,\n    errorMessage\n  }) {\n    super(\n      [\n        \"Failed to decode contract function result.\",\n        \"\",\n        `Config:`,\n        JSON.stringify(\n          {\n            address,\n            abi: \"...\",\n            functionName,\n            chainId: chainId2,\n            args\n          },\n          null,\n          2\n        ),\n        \"\",\n        `Details: ${errorMessage}`\n      ].join(\"\\n\")\n    );\n    this.name = \"ContractResultDecodeError\";\n  }\n};\nvar ProviderChainsNotFound = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ProviderChainsNotFound\";\n    this.message = [\n      \"No chains were found on the wagmi provider. Some functions that require a chain may not work.\",\n      \"\",\n      \"It is recommended to add a list of chains to the provider in `createClient`.\",\n      \"\",\n      \"Example:\",\n      \"\",\n      \"```\",\n      \"import { getDefaultProvider } from 'ethers'\",\n      \"import { chain, createClient } from 'wagmi'\",\n      \"\",\n      \"createClient({\",\n      \"  provider: Object.assign(getDefaultProvider(), { chains: [chain.mainnet] })\",\n      \"})\",\n      \"```\"\n    ].join(\"\\n\");\n  }\n};\nvar ResourceUnavailableError = class extends RpcError {\n  constructor(error) {\n    super(-32002, \"Resource unavailable\", error);\n    this.name = \"ResourceUnavailable\";\n  }\n};\nvar SwitchChainError = class extends ProviderRpcError {\n  constructor(error) {\n    super(4902, \"Error switching chain\", error);\n    this.name = \"SwitchChainError\";\n  }\n};\nvar SwitchChainNotSupportedError = class extends Error {\n  constructor({ connector }) {\n    super(`\"${connector.name}\" does not support programmatic chain switching.`);\n    this.name = \"SwitchChainNotSupportedError\";\n  }\n};\nvar UserRejectedRequestError = class extends ProviderRpcError {\n  constructor(error) {\n    super(4001, \"User rejected request\", error);\n    this.name = \"UserRejectedRequestError\";\n  }\n};\n\nexport {\n  RpcError,\n  ProviderRpcError,\n  AddChainError,\n  ChainDoesNotSupportMulticallError,\n  ChainMismatchError,\n  ChainNotConfiguredError,\n  ConnectorAlreadyConnectedError,\n  ConnectorNotFoundError,\n  ContractMethodDoesNotExistError,\n  ContractMethodNoResultError,\n  ContractMethodRevertedError,\n  ContractResultDecodeError,\n  ProviderChainsNotFound,\n  ResourceUnavailableError,\n  SwitchChainError,\n  SwitchChainNotSupportedError,\n  UserRejectedRequestError,\n  configureChains,\n  debounce,\n  deepEqual,\n  deserialize,\n  minimizeContractInterface,\n  normalizeChainId,\n  parseContractResult,\n  serialize,\n  erc20ABI,\n  erc721ABI,\n  erc4626ABI,\n  units,\n  Connector,\n  InjectedConnector,\n  noopStorage,\n  createStorage,\n  Client,\n  createClient,\n  getClient,\n  connect,\n  disconnect,\n  fetchToken,\n  getContract,\n  prepareWriteContract,\n  getProvider,\n  getWebSocketProvider,\n  watchProvider,\n  watchWebSocketProvider,\n  multicall,\n  readContract,\n  readContracts,\n  watchContractEvent,\n  fetchBlockNumber,\n  watchBlockNumber,\n  watchMulticall,\n  watchReadContract,\n  watchReadContracts,\n  fetchTransaction,\n  fetchEnsAddress,\n  fetchEnsAvatar,\n  fetchEnsName,\n  fetchEnsResolver,\n  prepareSendTransaction,\n  sendTransaction,\n  waitForTransaction,\n  writeContract,\n  fetchBalance,\n  fetchSigner,\n  getAccount,\n  getNetwork,\n  signMessage,\n  signTypedData,\n  switchNetwork,\n  watchAccount,\n  watchNetwork,\n  watchSigner,\n  fetchFeeData\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}