{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom/client';import{chain}from'wagmi';import reportWebVitals from'./reportWebVitals';import{createClient,configureChains,defaultChains,WagmiConfig}from\"wagmi\";import{alchemyProvider}from'wagmi/providers/alchemy';import{publicProvider}from\"wagmi/providers/public\";import{CoinbaseWalletConnector}from\"wagmi/connectors/coinbaseWallet\";import{MetaMaskConnector}from\"wagmi/connectors/metaMask\";import App from'./App';import'./index.css';// API key for Ethereum node\n// Two popular services are Infura (infura.io) and Alchemy (alchemy.com)\n// Configure chains for connectors to support\nimport{jsx as _jsx}from\"react/jsx-runtime\";var _configureChains=configureChains([chain.goerli],[alchemyProvider({apiKey:'mUob5BuwDVy8sahxWzBzYBsWHC3KG41r'}),publicProvider()]),chains=_configureChains.chains,provider=_configureChains.provider,webSocketProvider=_configureChains.webSocketProvider;// Set up connectors\nexport var connectors=[new CoinbaseWalletConnector({chains:chains,options:{appName:\"app-ui\"}}),new MetaMaskConnector({chains:chains})];var client=createClient({autoConnect:true,provider:provider,connectors:connectors});var root=ReactDOM.createRoot(document.getElementById('root'));root.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(WagmiConfig,{client:client,children:/*#__PURE__*/_jsx(App,{})})}));// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","chain","reportWebVitals","createClient","configureChains","defaultChains","WagmiConfig","alchemyProvider","publicProvider","CoinbaseWalletConnector","MetaMaskConnector","App","goerli","apiKey","chains","provider","webSocketProvider","connectors","options","appName","client","autoConnect","root","createRoot","document","getElementById","render"],"sources":["/home/dev/Desktop/tes/app-ui/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { chain } from 'wagmi';\nimport reportWebVitals from './reportWebVitals';\nimport { createClient, configureChains, defaultChains, WagmiConfig } from \"wagmi\";\nimport { alchemyProvider } from 'wagmi/providers/alchemy'\nimport { publicProvider } from \"wagmi/providers/public\";\nimport { CoinbaseWalletConnector } from \"wagmi/connectors/coinbaseWallet\";\nimport { MetaMaskConnector } from \"wagmi/connectors/metaMask\";\n\nimport App from './App';\n\nimport './index.css';\n\n// API key for Ethereum node\n// Two popular services are Infura (infura.io) and Alchemy (alchemy.com)\n// Configure chains for connectors to support\nconst { chains, provider, webSocketProvider } = configureChains([chain.goerli], [\n  alchemyProvider({ apiKey: 'mUob5BuwDVy8sahxWzBzYBsWHC3KG41r' }),\n  publicProvider(),\n]);\n\n\n// Set up connectors\nexport const connectors = [\n  new CoinbaseWalletConnector({\n    chains,\n    options: {\n      appName: \"app-ui\",\n    },\n  }),\n  \n  new MetaMaskConnector({\n    chains,\n  }),\n];\n\nconst client = createClient({\n  autoConnect: true,\n  provider,\n  connectors,\n});\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    \n    <WagmiConfig client={ client }>\n      <App />\n    </WagmiConfig>\n    \n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":"AAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,MAAOC,SAAQ,KAAM,kBAAkB,CACvC,OAASC,KAAK,KAAQ,OAAO,CAC7B,MAAOC,gBAAe,KAAM,mBAAmB,CAC/C,OAASC,YAAY,CAAEC,eAAe,CAAEC,aAAa,CAAEC,WAAW,KAAQ,OAAO,CACjF,OAASC,eAAe,KAAQ,yBAAyB,CACzD,OAASC,cAAc,KAAQ,wBAAwB,CACvD,OAASC,uBAAuB,KAAQ,iCAAiC,CACzE,OAASC,iBAAiB,KAAQ,2BAA2B,CAE7D,MAAOC,IAAG,KAAM,OAAO,CAEvB,MAAO,aAAa,CAEpB;AACA;AACA;AAAA,2CACA,qBAAgDP,eAAe,CAAC,CAACH,KAAK,CAACW,MAAM,CAAC,CAAE,CAC9EL,eAAe,CAAC,CAAEM,MAAM,CAAE,kCAAmC,CAAC,CAAC,CAC/DL,cAAc,EAAE,CACjB,CAAC,CAHMM,MAAM,kBAANA,MAAM,CAAEC,QAAQ,kBAARA,QAAQ,CAAEC,iBAAiB,kBAAjBA,iBAAiB,CAM3C;AACA,MAAO,IAAMC,WAAU,CAAG,CACxB,GAAIR,wBAAuB,CAAC,CAC1BK,MAAM,CAANA,MAAM,CACNI,OAAO,CAAE,CACPC,OAAO,CAAE,QACX,CACF,CAAC,CAAC,CAEF,GAAIT,kBAAiB,CAAC,CACpBI,MAAM,CAANA,MACF,CAAC,CAAC,CACH,CAED,GAAMM,OAAM,CAAGjB,YAAY,CAAC,CAC1BkB,WAAW,CAAE,IAAI,CACjBN,QAAQ,CAARA,QAAQ,CACRE,UAAU,CAAVA,UACF,CAAC,CAAC,CAEF,GAAMK,KAAI,CAAGtB,QAAQ,CAACuB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CACjEH,IAAI,CAACI,MAAM,cACT,KAAC,KAAK,CAAC,UAAU,wBAEf,KAAC,WAAW,EAAC,MAAM,CAAGN,MAAQ,uBAC5B,KAAC,GAAG,IAAG,EACK,EAEG,CACpB,CAED;AACA;AACA;AACAlB,eAAe,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}