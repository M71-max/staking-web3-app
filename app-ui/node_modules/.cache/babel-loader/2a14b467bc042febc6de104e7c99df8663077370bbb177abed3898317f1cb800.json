{"ast":null,"code":"import _regeneratorRuntime from\"/home/dev/Desktop/tes/app-ui/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/dev/Desktop/tes/app-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/dev/Desktop/tes/app-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectSpread from\"/home/dev/Desktop/tes/app-ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useEffect,useState}from'react';import{useContractWrite,usePrepareContractWrite,useWaitForTransaction}from'wagmi';import{ToastContainer,toast}from\"react-toastify\";import TokenContext from'./TokenContext.js';import tokenAbi from'../../contractAbi/TokenAbi';import sleep from'../../components/Pause.js';import'react-toastify/dist/ReactToastify.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var tokenContractConfig={address:process.env.React_App_Token_Address,abi:tokenAbi};var stakeAddress=process.env.React_App_Staking_Address;var TokenState=function TokenState(props){var approveAmount1='2000000000000000000';var approveAmount2='4000000000000000000';var approveAmount3='8000000000000000000';var successAlert=function successAlert(){toast.success('Successfully Indexed the block on the Chain',{position:\"top-center\",autoClose:5000,hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined,theme:\"light\"});};// prepare write hooks\nvar _usePrepareContractWr=usePrepareContractWrite(_objectSpread(_objectSpread({},tokenContractConfig),{},{functionName:'approve',args:[stakeAddress,approveAmount1]})),tokenApproveConfig1=_usePrepareContractWr.config;var _usePrepareContractWr2=usePrepareContractWrite(_objectSpread(_objectSpread({},tokenContractConfig),{},{functionName:'approve',args:[stakeAddress,approveAmount2]})),tokenApproveConfig2=_usePrepareContractWr2.config;var _usePrepareContractWr3=usePrepareContractWrite(_objectSpread(_objectSpread({},tokenContractConfig),{},{functionName:'approve',args:[stakeAddress,approveAmount3]})),tokenApproveConfig3=_usePrepareContractWr3.config;// write hooks\nvar _useContractWrite=useContractWrite(tokenApproveConfig1),approveData1=_useContractWrite.data,approveTokenPool1=_useContractWrite.write,approveToken1Loading=_useContractWrite.isLoading;var _useContractWrite2=useContractWrite(tokenApproveConfig2),approveData2=_useContractWrite2.data,approveTokenPool2=_useContractWrite2.write,approveToken2Loading=_useContractWrite2.isLoading;var _useContractWrite3=useContractWrite(tokenApproveConfig3),approveData3=_useContractWrite3.data,approveTokenPool3=_useContractWrite3.write,approveToken3Loading=_useContractWrite3.isLoading;// wait for trans completion hook\nvar _useWaitForTransactio=useWaitForTransaction({hash:approveData1===null||approveData1===void 0?void 0:approveData1.hash}),pool1approve=_useWaitForTransactio.isSuccess;var _useWaitForTransactio2=useWaitForTransaction({hash:approveData2===null||approveData2===void 0?void 0:approveData2.hash}),pool2approve=_useWaitForTransactio2.isSuccess;var _useWaitForTransactio3=useWaitForTransaction({hash:approveData3===null||approveData3===void 0?void 0:approveData3.hash}),pool3approve=_useWaitForTransactio3.isSuccess;var _useState=useState({isLoading1:approveToken1Loading,isSuccess1:pool1approve,isLoading2:approveToken2Loading,isSuccess2:pool2approve,isLoading3:approveToken3Loading,isSuccess3:pool3approve}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];// promises for the trans function (write)\nvar tokenApproval1Alert=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!pool1approve){_context.next=4;break;}_context.next=3;return sleep(5000);case 3:successAlert();case 4:case\"end\":return _context.stop();}}},_callee);}));return function tokenApproval1Alert(){return _ref.apply(this,arguments);};}();var tokenApproval2Alert=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!pool2approve){_context2.next=4;break;}_context2.next=3;return sleep(5000);case 3:successAlert();case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function tokenApproval2Alert(){return _ref2.apply(this,arguments);};}();var tokenApproval3Alert=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!pool3approve){_context3.next=4;break;}_context3.next=3;return sleep(5000);case 3:successAlert();case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function tokenApproval3Alert(){return _ref3.apply(this,arguments);};}();// use-effect for alert on trans completion\nuseEffect(function(){tokenApproval1Alert();},[pool1approve]);useEffect(function(){tokenApproval2Alert();},[pool2approve]);useEffect(function(){tokenApproval3Alert();},[pool3approve]);return/*#__PURE__*/_jsxs(TokenContext.Provider,{value:{state:state,approve1:approveTokenPool1,approve2:approveTokenPool2,approve3:approveTokenPool3},children:[props.children,/*#__PURE__*/_jsx(ToastContainer,{})]});};export default TokenState;","map":{"version":3,"names":["useEffect","useState","useContractWrite","usePrepareContractWrite","useWaitForTransaction","ToastContainer","toast","TokenContext","tokenAbi","sleep","tokenContractConfig","address","process","env","React_App_Token_Address","abi","stakeAddress","React_App_Staking_Address","TokenState","props","approveAmount1","approveAmount2","approveAmount3","successAlert","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","functionName","args","tokenApproveConfig1","config","tokenApproveConfig2","tokenApproveConfig3","approveData1","data","approveTokenPool1","write","approveToken1Loading","isLoading","approveData2","approveTokenPool2","approveToken2Loading","approveData3","approveTokenPool3","approveToken3Loading","hash","pool1approve","isSuccess","pool2approve","pool3approve","isLoading1","isSuccess1","isLoading2","isSuccess2","isLoading3","isSuccess3","state","setState","tokenApproval1Alert","tokenApproval2Alert","tokenApproval3Alert","approve1","approve2","approve3","children"],"sources":["/home/dev/Desktop/tes/app-ui/src/contextComponents/tokensContext/TokenState.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useContractWrite, usePrepareContractWrite, useWaitForTransaction } from 'wagmi';\nimport { ToastContainer, toast } from \"react-toastify\";\n\nimport TokenContext from './TokenContext.js';\nimport tokenAbi from '../../contractAbi/TokenAbi';\nimport sleep from '../../components/Pause.js';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst tokenContractConfig = {\n    address: process.env.React_App_Token_Address,\n    abi: tokenAbi,\n};\n\nconst stakeAddress = process.env.React_App_Staking_Address;\n\nconst TokenState = (props) => {\n    const approveAmount1 = '2000000000000000000';\n    const approveAmount2 = '4000000000000000000';\n    const approveAmount3 = '8000000000000000000';\n\n    const successAlert =() => {toast.success('Successfully Indexed the block on the Chain', {\n        position: \"top-center\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\",\n        });}\n\n    // prepare write hooks\n    const { config: tokenApproveConfig1 } = usePrepareContractWrite({\n        ...tokenContractConfig,\n        functionName: 'approve',\n        args:[ stakeAddress, approveAmount1 ],\n    });\n    const { config: tokenApproveConfig2 } = usePrepareContractWrite({\n        ...tokenContractConfig,\n        functionName: 'approve',\n        args:[ stakeAddress, approveAmount2 ],\n    });\n    const { config: tokenApproveConfig3 } = usePrepareContractWrite({\n        ...tokenContractConfig,\n        functionName: 'approve',\n        args:[ stakeAddress, approveAmount3 ],\n    });\n\n    // write hooks\n    const {\n        data: approveData1,\n        write: approveTokenPool1,\n        isLoading: approveToken1Loading,\n    } = useContractWrite(tokenApproveConfig1);\n    const {\n        data: approveData2,\n        write: approveTokenPool2,\n        isLoading: approveToken2Loading,\n    } = useContractWrite(tokenApproveConfig2);\n    const {\n        data: approveData3,\n        write: approveTokenPool3,\n        isLoading: approveToken3Loading,\n    } = useContractWrite(tokenApproveConfig3);\n\n    // wait for trans completion hook\n    const {isSuccess: pool1approve } = useWaitForTransaction({\n        hash: approveData1?.hash,\n    });\n    const {isSuccess: pool2approve } = useWaitForTransaction({\n        hash: approveData2?.hash,\n    });\n    const {isSuccess: pool3approve } = useWaitForTransaction({\n        hash: approveData3?.hash,\n    });\n\n    const [ state, setState ] = useState({\n        isLoading1: approveToken1Loading,\n        isSuccess1: pool1approve,\n        isLoading2: approveToken2Loading,\n        isSuccess2: pool2approve,\n        isLoading3: approveToken3Loading,\n        isSuccess3: pool3approve,\n    });\n\n    // promises for the trans function (write)\n    const tokenApproval1Alert = async() => {\n        if(pool1approve) {\n            await sleep(5000);\n            successAlert();\n        }\n    };\n    const tokenApproval2Alert = async() => {\n        if(pool2approve) {\n            await sleep(5000);\n            successAlert();\n        }\n    };\n    const tokenApproval3Alert = async() => {\n        if(pool3approve) {\n            await sleep(5000);\n            successAlert();\n        }\n    };\n\n    // use-effect for alert on trans completion\n    useEffect(() => {\n        tokenApproval1Alert();\n    }, [pool1approve]);\n    useEffect(() => {\n        tokenApproval2Alert();\n    }, [pool2approve]);\n    useEffect(() => {\n        tokenApproval3Alert();\n    }, [pool3approve]);\n\n    return (\n        <TokenContext.Provider value={ {state: state, approve1: approveTokenPool1, approve2: approveTokenPool2, approve3: approveTokenPool3 } }>\n            { props.children }\n            <ToastContainer />\n        </TokenContext.Provider>\n    );\n}\n\nexport default TokenState;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}