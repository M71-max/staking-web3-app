{"ast":null,"code":"var _jsxFileName = \"/home/dev/Desktop/StakingProject/app-ui/src/contextComponents/tokensContext/TokenState.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useContractWrite, usePrepareContractWrite, useWaitForTransaction } from 'wagmi';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport TokenContext from './TokenContext.js';\nimport tokenAbi from '../../contractAbi/TokenAbi';\nimport sleep from '../../components/Pause.js';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tokenContractConfig = {\n  address: process.env.React_App_Token_Address,\n  abi: tokenAbi\n};\nconst stakeAddress = process.env.React_App_Staking_Address;\nconst TokenState = props => {\n  _s();\n  const approveAmount1 = '2000000000000000000';\n  const approveAmount2 = '4000000000000000000';\n  const approveAmount3 = '8000000000000000000';\n  const successAlert = () => {\n    toast.success('Successfully Indexed the block on the Chain', {\n      position: \"top-center\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: \"light\"\n    });\n  };\n\n  // prepare write hooks\n  const {\n    config: tokenApproveConfig1\n  } = usePrepareContractWrite({\n    ...tokenContractConfig,\n    functionName: 'approve',\n    args: [stakeAddress, approveAmount1]\n  });\n  const {\n    config: tokenApproveConfig2\n  } = usePrepareContractWrite({\n    ...tokenContractConfig,\n    functionName: 'approve',\n    args: [stakeAddress, approveAmount2]\n  });\n  const {\n    config: tokenApproveConfig3\n  } = usePrepareContractWrite({\n    ...tokenContractConfig,\n    functionName: 'approve',\n    args: [stakeAddress, approveAmount3]\n  });\n\n  // write hooks\n  const {\n    data: approveData1,\n    write: approveTokenPool1,\n    isLoading: approveToken1Loading\n  } = useContractWrite(tokenApproveConfig1);\n  const {\n    data: approveData2,\n    write: approveTokenPool2,\n    isLoading: approveToken2Loading\n  } = useContractWrite(tokenApproveConfig2);\n  const {\n    data: approveData3,\n    write: approveTokenPool3,\n    isLoading: approveToken3Loading\n  } = useContractWrite(tokenApproveConfig3);\n\n  // wait for trans completion hook\n  const {\n    isSuccess: pool1approve\n  } = useWaitForTransaction({\n    hash: approveData1 === null || approveData1 === void 0 ? void 0 : approveData1.hash\n  });\n  const {\n    isSuccess: pool2approve\n  } = useWaitForTransaction({\n    hash: approveData2 === null || approveData2 === void 0 ? void 0 : approveData2.hash\n  });\n  const {\n    isSuccess: pool3approve\n  } = useWaitForTransaction({\n    hash: approveData3 === null || approveData3 === void 0 ? void 0 : approveData3.hash\n  });\n  const [state, setState] = useState({\n    isLoading1: approveToken1Loading,\n    isSuccess1: pool1approve,\n    isLoading2: approveToken2Loading,\n    isSuccess2: pool2approve,\n    isLoading3: approveToken3Loading,\n    isSuccess3: pool3approve\n  });\n\n  // promises for the trans function (write)\n  const tokenApproval1Alert = async () => {\n    if (pool1approve) {\n      await sleep(5000);\n      successAlert();\n    }\n  };\n  const tokenApproval2Alert = async () => {\n    if (pool2approve) {\n      await sleep(5000);\n      successAlert();\n    }\n  };\n  const tokenApproval3Alert = async () => {\n    if (pool3approve) {\n      await sleep(5000);\n      successAlert();\n    }\n  };\n\n  // use-effect for alert on trans completion\n  useEffect(() => {\n    tokenApproval1Alert();\n  }, [pool1approve]);\n  useEffect(() => {\n    tokenApproval2Alert();\n  }, [pool2approve]);\n  useEffect(() => {\n    tokenApproval3Alert();\n  }, [pool3approve]);\n  return /*#__PURE__*/_jsxDEV(TokenContext.Provider, {\n    value: {\n      state: state,\n      approve1: approveTokenPool1,\n      approve2: approveTokenPool2,\n      approve3: approveTokenPool3\n    },\n    children: [props.children, /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n};\n_s(TokenState, \"XEIvwxYMomojFmkg4KutphN16oA=\", false, function () {\n  return [usePrepareContractWrite, usePrepareContractWrite, usePrepareContractWrite, useContractWrite, useContractWrite, useContractWrite, useWaitForTransaction, useWaitForTransaction, useWaitForTransaction];\n});\n_c = TokenState;\nexport default TokenState;\nvar _c;\n$RefreshReg$(_c, \"TokenState\");","map":{"version":3,"names":["useEffect","useState","useContractWrite","usePrepareContractWrite","useWaitForTransaction","ToastContainer","toast","TokenContext","tokenAbi","sleep","tokenContractConfig","address","process","env","React_App_Token_Address","abi","stakeAddress","React_App_Staking_Address","TokenState","props","approveAmount1","approveAmount2","approveAmount3","successAlert","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","config","tokenApproveConfig1","functionName","args","tokenApproveConfig2","tokenApproveConfig3","data","approveData1","write","approveTokenPool1","isLoading","approveToken1Loading","approveData2","approveTokenPool2","approveToken2Loading","approveData3","approveTokenPool3","approveToken3Loading","isSuccess","pool1approve","hash","pool2approve","pool3approve","state","setState","isLoading1","isSuccess1","isLoading2","isSuccess2","isLoading3","isSuccess3","tokenApproval1Alert","tokenApproval2Alert","tokenApproval3Alert","approve1","approve2","approve3","children"],"sources":["/home/dev/Desktop/StakingProject/app-ui/src/contextComponents/tokensContext/TokenState.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useContractWrite, usePrepareContractWrite, useWaitForTransaction } from 'wagmi';\nimport { ToastContainer, toast } from \"react-toastify\";\n\nimport TokenContext from './TokenContext.js';\nimport tokenAbi from '../../contractAbi/TokenAbi';\nimport sleep from '../../components/Pause.js';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst tokenContractConfig = {\n    address: process.env.React_App_Token_Address,\n    abi: tokenAbi,\n};\n\nconst stakeAddress = process.env.React_App_Staking_Address;\n\nconst TokenState = (props) => {\n    const approveAmount1 = '2000000000000000000';\n    const approveAmount2 = '4000000000000000000';\n    const approveAmount3 = '8000000000000000000';\n\n    const successAlert =() => {toast.success('Successfully Indexed the block on the Chain', {\n        position: \"top-center\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\",\n        });}\n\n    // prepare write hooks\n    const { config: tokenApproveConfig1 } = usePrepareContractWrite({\n        ...tokenContractConfig,\n        functionName: 'approve',\n        args:[ stakeAddress, approveAmount1 ],\n    });\n    const { config: tokenApproveConfig2 } = usePrepareContractWrite({\n        ...tokenContractConfig,\n        functionName: 'approve',\n        args:[ stakeAddress, approveAmount2 ],\n    });\n    const { config: tokenApproveConfig3 } = usePrepareContractWrite({\n        ...tokenContractConfig,\n        functionName: 'approve',\n        args:[ stakeAddress, approveAmount3 ],\n    });\n\n    // write hooks\n    const {\n        data: approveData1,\n        write: approveTokenPool1,\n        isLoading: approveToken1Loading,\n    } = useContractWrite(tokenApproveConfig1);\n    const {\n        data: approveData2,\n        write: approveTokenPool2,\n        isLoading: approveToken2Loading,\n    } = useContractWrite(tokenApproveConfig2);\n    const {\n        data: approveData3,\n        write: approveTokenPool3,\n        isLoading: approveToken3Loading,\n    } = useContractWrite(tokenApproveConfig3);\n\n    // wait for trans completion hook\n    const {isSuccess: pool1approve } = useWaitForTransaction({\n        hash: approveData1?.hash,\n    });\n    const {isSuccess: pool2approve } = useWaitForTransaction({\n        hash: approveData2?.hash,\n    });\n    const {isSuccess: pool3approve } = useWaitForTransaction({\n        hash: approveData3?.hash,\n    });\n\n    const [ state, setState ] = useState({\n        isLoading1: approveToken1Loading,\n        isSuccess1: pool1approve,\n        isLoading2: approveToken2Loading,\n        isSuccess2: pool2approve,\n        isLoading3: approveToken3Loading,\n        isSuccess3: pool3approve,\n    });\n\n    // promises for the trans function (write)\n    const tokenApproval1Alert = async() => {\n        if(pool1approve) {\n            await sleep(5000);\n            successAlert();\n        }\n    };\n    const tokenApproval2Alert = async() => {\n        if(pool2approve) {\n            await sleep(5000);\n            successAlert();\n        }\n    };\n    const tokenApproval3Alert = async() => {\n        if(pool3approve) {\n            await sleep(5000);\n            successAlert();\n        }\n    };\n\n    // use-effect for alert on trans completion\n    useEffect(() => {\n        tokenApproval1Alert();\n    }, [pool1approve]);\n    useEffect(() => {\n        tokenApproval2Alert();\n    }, [pool2approve]);\n    useEffect(() => {\n        tokenApproval3Alert();\n    }, [pool3approve]);\n\n    return (\n        <TokenContext.Provider value={ {state: state, approve1: approveTokenPool1, approve2: approveTokenPool2, approve3: approveTokenPool3 } }>\n            { props.children }\n            <ToastContainer />\n        </TokenContext.Provider>\n    );\n}\n\nexport default TokenState;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}