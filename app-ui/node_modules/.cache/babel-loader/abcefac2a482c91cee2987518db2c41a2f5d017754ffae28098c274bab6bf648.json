{"ast":null,"code":"import _regeneratorRuntime from \"/home/dev/Desktop/tes/app-ui/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/dev/Desktop/tes/app-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/home/dev/Desktop/tes/app-ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/home/dev/Desktop/tes/app-ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/dev/Desktop/tes/app-ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/dev/Desktop/tes/app-ui/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/dev/Desktop/tes/app-ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/dev/Desktop/tes/app-ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { ConnectorNotFoundError, InjectedConnector, ResourceUnavailableError, UserRejectedRequestError, getClient } from \"../chunk-HEIMP7HQ.js\";\nimport \"../chunk-4DNFSL2K.js\";\nimport { __privateAdd, __privateGet, __privateSet } from \"../chunk-MQXBDTVK.js\";\n\n// src/connectors/metaMask.ts\nimport { getAddress } from \"ethers/lib/utils.js\";\nvar _UNSTABLE_shimOnConnectSelectAccount;\nvar MetaMaskConnector = /*#__PURE__*/function (_InjectedConnector) {\n  _inherits(MetaMaskConnector, _InjectedConnector);\n  var _super = _createSuper(MetaMaskConnector);\n  function MetaMaskConnector() {\n    var _this;\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      chains = _ref.chains,\n      options_ = _ref.options;\n    _classCallCheck(this, MetaMaskConnector);\n    var options = _objectSpread({\n      name: \"MetaMask\",\n      shimDisconnect: true,\n      shimChainChangedDisconnect: true,\n      getProvider: function getProvider() {\n        var _window$ethereum;\n        function getReady(ethereum) {\n          var isMetaMask = !!(ethereum !== null && ethereum !== void 0 && ethereum.isMetaMask);\n          if (!isMetaMask) return;\n          if (ethereum.isBraveWallet && !ethereum._events && !ethereum._state) return;\n          if (ethereum.isAvalanche) return;\n          if (ethereum.isKuCoinWallet) return;\n          if (ethereum.isPortal) return;\n          if (ethereum.isTokenPocket) return;\n          if (ethereum.isTokenary) return;\n          return ethereum;\n        }\n        if (typeof window === \"undefined\") return;\n        if ((_window$ethereum = window.ethereum) !== null && _window$ethereum !== void 0 && _window$ethereum.providers) return window.ethereum.providers.find(getReady);\n        return getReady(window.ethereum);\n      }\n    }, options_);\n    _this = _super.call(this, {\n      chains: chains,\n      options: options\n    });\n    _this.id = \"metaMask\";\n    __privateAdd(_assertThisInitialized(_this), _UNSTABLE_shimOnConnectSelectAccount, void 0);\n    __privateSet(_assertThisInitialized(_this), _UNSTABLE_shimOnConnectSelectAccount, options.UNSTABLE_shimOnConnectSelectAccount);\n    return _this;\n  }\n  _createClass(MetaMaskConnector, [{\n    key: \"connect\",\n    value: function () {\n      var _connect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _ref2,\n          chainId,\n          _this$options,\n          _getClient$storage,\n          _this$options2,\n          _getClient$storage2,\n          provider,\n          account,\n          isConnected,\n          accounts,\n          id,\n          unsupported,\n          chain,\n          _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, chainId = _ref2.chainId;\n                _context.prev = 1;\n                _context.next = 4;\n                return this.getProvider();\n              case 4:\n                provider = _context.sent;\n                if (provider) {\n                  _context.next = 7;\n                  break;\n                }\n                throw new ConnectorNotFoundError();\n              case 7:\n                if (provider.on) {\n                  provider.on(\"accountsChanged\", this.onAccountsChanged);\n                  provider.on(\"chainChanged\", this.onChainChanged);\n                  provider.on(\"disconnect\", this.onDisconnect);\n                }\n                this.emit(\"message\", {\n                  type: \"connecting\"\n                });\n                account = null;\n                if (!(__privateGet(this, _UNSTABLE_shimOnConnectSelectAccount) && (_this$options = this.options) !== null && _this$options !== void 0 && _this$options.shimDisconnect && !((_getClient$storage = getClient().storage) !== null && _getClient$storage !== void 0 && _getClient$storage.getItem(this.shimDisconnectKey)))) {\n                  _context.next = 25;\n                  break;\n                }\n                _context.next = 13;\n                return this.getAccount().catch(function () {\n                  return null;\n                });\n              case 13:\n                account = _context.sent;\n                isConnected = !!account;\n                if (!isConnected) {\n                  _context.next = 25;\n                  break;\n                }\n                _context.prev = 16;\n                _context.next = 19;\n                return provider.request({\n                  method: \"wallet_requestPermissions\",\n                  params: [{\n                    eth_accounts: {}\n                  }]\n                });\n              case 19:\n                _context.next = 25;\n                break;\n              case 21:\n                _context.prev = 21;\n                _context.t0 = _context[\"catch\"](16);\n                if (!this.isUserRejectedRequestError(_context.t0)) {\n                  _context.next = 25;\n                  break;\n                }\n                throw new UserRejectedRequestError(_context.t0);\n              case 25:\n                if (account) {\n                  _context.next = 30;\n                  break;\n                }\n                _context.next = 28;\n                return provider.request({\n                  method: \"eth_requestAccounts\"\n                });\n              case 28:\n                accounts = _context.sent;\n                account = getAddress(accounts[0]);\n              case 30:\n                _context.next = 32;\n                return this.getChainId();\n              case 32:\n                id = _context.sent;\n                unsupported = this.isChainUnsupported(id);\n                if (!(chainId && id !== chainId)) {\n                  _context.next = 40;\n                  break;\n                }\n                _context.next = 37;\n                return this.switchChain(chainId);\n              case 37:\n                chain = _context.sent;\n                id = chain.id;\n                unsupported = this.isChainUnsupported(id);\n              case 40:\n                if ((_this$options2 = this.options) !== null && _this$options2 !== void 0 && _this$options2.shimDisconnect) (_getClient$storage2 = getClient().storage) === null || _getClient$storage2 === void 0 ? void 0 : _getClient$storage2.setItem(this.shimDisconnectKey, true);\n                return _context.abrupt(\"return\", {\n                  account: account,\n                  chain: {\n                    id: id,\n                    unsupported: unsupported\n                  },\n                  provider: provider\n                });\n              case 44:\n                _context.prev = 44;\n                _context.t1 = _context[\"catch\"](1);\n                if (!this.isUserRejectedRequestError(_context.t1)) {\n                  _context.next = 48;\n                  break;\n                }\n                throw new UserRejectedRequestError(_context.t1);\n              case 48:\n                if (!(_context.t1.code === -32002)) {\n                  _context.next = 50;\n                  break;\n                }\n                throw new ResourceUnavailableError(_context.t1);\n              case 50:\n                throw _context.t1;\n              case 51:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 44], [16, 21]]);\n      }));\n      function connect() {\n        return _connect.apply(this, arguments);\n      }\n      return connect;\n    }()\n  }]);\n  return MetaMaskConnector;\n}(InjectedConnector);\n_UNSTABLE_shimOnConnectSelectAccount = new WeakMap();\nexport { MetaMaskConnector };","map":{"version":3,"names":["ConnectorNotFoundError","InjectedConnector","ResourceUnavailableError","UserRejectedRequestError","getClient","__privateAdd","__privateGet","__privateSet","getAddress","_UNSTABLE_shimOnConnectSelectAccount","MetaMaskConnector","chains","options_","options","name","shimDisconnect","shimChainChangedDisconnect","getProvider","getReady","ethereum","isMetaMask","isBraveWallet","_events","_state","isAvalanche","isKuCoinWallet","isPortal","isTokenPocket","isTokenary","window","providers","find","id","UNSTABLE_shimOnConnectSelectAccount","chainId","provider","on","onAccountsChanged","onChainChanged","onDisconnect","emit","type","account","storage","getItem","shimDisconnectKey","getAccount","catch","isConnected","request","method","params","eth_accounts","isUserRejectedRequestError","accounts","getChainId","unsupported","isChainUnsupported","switchChain","chain","setItem","code","WeakMap"],"sources":["/home/dev/Desktop/tes/app-ui/node_modules/@wagmi/core/dist/connectors/metaMask.js"],"sourcesContent":["import {\n  ConnectorNotFoundError,\n  InjectedConnector,\n  ResourceUnavailableError,\n  UserRejectedRequestError,\n  getClient\n} from \"../chunk-HEIMP7HQ.js\";\nimport \"../chunk-4DNFSL2K.js\";\nimport {\n  __privateAdd,\n  __privateGet,\n  __privateSet\n} from \"../chunk-MQXBDTVK.js\";\n\n// src/connectors/metaMask.ts\nimport { getAddress } from \"ethers/lib/utils.js\";\nvar _UNSTABLE_shimOnConnectSelectAccount;\nvar MetaMaskConnector = class extends InjectedConnector {\n  constructor({\n    chains,\n    options: options_\n  } = {}) {\n    const options = {\n      name: \"MetaMask\",\n      shimDisconnect: true,\n      shimChainChangedDisconnect: true,\n      getProvider() {\n        function getReady(ethereum) {\n          const isMetaMask = !!ethereum?.isMetaMask;\n          if (!isMetaMask)\n            return;\n          if (ethereum.isBraveWallet && !ethereum._events && !ethereum._state)\n            return;\n          if (ethereum.isAvalanche)\n            return;\n          if (ethereum.isKuCoinWallet)\n            return;\n          if (ethereum.isPortal)\n            return;\n          if (ethereum.isTokenPocket)\n            return;\n          if (ethereum.isTokenary)\n            return;\n          return ethereum;\n        }\n        if (typeof window === \"undefined\")\n          return;\n        if (window.ethereum?.providers)\n          return window.ethereum.providers.find(getReady);\n        return getReady(window.ethereum);\n      },\n      ...options_\n    };\n    super({ chains, options });\n    this.id = \"metaMask\";\n    __privateAdd(this, _UNSTABLE_shimOnConnectSelectAccount, void 0);\n    __privateSet(this, _UNSTABLE_shimOnConnectSelectAccount, options.UNSTABLE_shimOnConnectSelectAccount);\n  }\n  async connect({ chainId } = {}) {\n    try {\n      const provider = await this.getProvider();\n      if (!provider)\n        throw new ConnectorNotFoundError();\n      if (provider.on) {\n        provider.on(\"accountsChanged\", this.onAccountsChanged);\n        provider.on(\"chainChanged\", this.onChainChanged);\n        provider.on(\"disconnect\", this.onDisconnect);\n      }\n      this.emit(\"message\", { type: \"connecting\" });\n      let account = null;\n      if (__privateGet(this, _UNSTABLE_shimOnConnectSelectAccount) && this.options?.shimDisconnect && !getClient().storage?.getItem(this.shimDisconnectKey)) {\n        account = await this.getAccount().catch(() => null);\n        const isConnected = !!account;\n        if (isConnected)\n          try {\n            await provider.request({\n              method: \"wallet_requestPermissions\",\n              params: [{ eth_accounts: {} }]\n            });\n          } catch (error) {\n            if (this.isUserRejectedRequestError(error))\n              throw new UserRejectedRequestError(error);\n          }\n      }\n      if (!account) {\n        const accounts = await provider.request({\n          method: \"eth_requestAccounts\"\n        });\n        account = getAddress(accounts[0]);\n      }\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n      if (chainId && id !== chainId) {\n        const chain = await this.switchChain(chainId);\n        id = chain.id;\n        unsupported = this.isChainUnsupported(id);\n      }\n      if (this.options?.shimDisconnect)\n        getClient().storage?.setItem(this.shimDisconnectKey, true);\n      return { account, chain: { id, unsupported }, provider };\n    } catch (error) {\n      if (this.isUserRejectedRequestError(error))\n        throw new UserRejectedRequestError(error);\n      if (error.code === -32002)\n        throw new ResourceUnavailableError(error);\n      throw error;\n    }\n  }\n};\n_UNSTABLE_shimOnConnectSelectAccount = new WeakMap();\nexport {\n  MetaMaskConnector\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}