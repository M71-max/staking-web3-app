{"ast":null,"code":"// src/constants/blockExplorers.ts\nvar etherscanBlockExplorers = {\n  mainnet: {\n    name: \"Etherscan\",\n    url: \"https://etherscan.io\"\n  },\n  goerli: {\n    name: \"Etherscan\",\n    url: \"https://goerli.etherscan.io\"\n  },\n  sepolia: {\n    name: \"Etherscan\",\n    url: \"https://sepolia.etherscan.io\"\n  },\n  optimism: {\n    name: \"Etherscan\",\n    url: \"https://optimistic.etherscan.io\"\n  },\n  optimismGoerli: {\n    name: \"Etherscan\",\n    url: \"https://goerli-optimism.etherscan.io\"\n  },\n  polygon: {\n    name: \"PolygonScan\",\n    url: \"https://polygonscan.com\"\n  },\n  polygonMumbai: {\n    name: \"PolygonScan\",\n    url: \"https://mumbai.polygonscan.com\"\n  },\n  arbitrum: {\n    name: \"Arbiscan\",\n    url: \"https://arbiscan.io\"\n  },\n  arbitrumGoerli: {\n    name: \"Arbiscan\",\n    url: \"https://goerli.arbiscan.io\"\n  }\n};\n\n// src/constants/rpcs.ts\nvar alchemyRpcUrls = {\n  mainnet: \"https://eth-mainnet.alchemyapi.io/v2\",\n  goerli: \"https://eth-goerli.alchemyapi.io/v2\",\n  optimism: \"https://opt-mainnet.g.alchemy.com/v2\",\n  optimismGoerli: \"https://opt-goerli.g.alchemy.com/v2\",\n  polygon: \"https://polygon-mainnet.g.alchemy.com/v2\",\n  polygonMumbai: \"https://polygon-mumbai.g.alchemy.com/v2\",\n  arbitrum: \"https://arb-mainnet.g.alchemy.com/v2\",\n  arbitrumGoerli: \"https://arb-goerli.g.alchemy.com/v2\"\n};\nvar infuraRpcUrls = {\n  mainnet: \"https://mainnet.infura.io/v3\",\n  goerli: \"https://goerli.infura.io/v3\",\n  sepolia: \"https://sepolia.infura.io/v3\",\n  optimism: \"https://optimism-mainnet.infura.io/v3\",\n  optimismGoerli: \"https://optimism-goerli.infura.io/v3\",\n  polygon: \"https://polygon-mainnet.infura.io/v3\",\n  polygonMumbai: \"https://polygon-mumbai.infura.io/v3\",\n  arbitrum: \"https://arbitrum-mainnet.infura.io/v3\",\n  arbitrumGoerli: \"https://arbitrum-goerli.infura.io/v3\"\n};\nvar publicRpcUrls = {\n  mainnet: \"https://cloudflare-eth.com\",\n  goerli: \"https://rpc.ankr.com/eth_goerli\",\n  sepolia: \"https://rpc.sepolia.org\",\n  optimism: \"https://mainnet.optimism.io\",\n  optimismGoerli: \"https://goerli.optimism.io\",\n  polygon: \"https://polygon-rpc.com\",\n  polygonMumbai: \"https://matic-mumbai.chainstacklabs.com\",\n  arbitrum: \"https://arb1.arbitrum.io/rpc\",\n  arbitrumGoerli: \"https://goerli-rollup.arbitrum.io/rpc\"\n};\n\n// src/constants/chains.ts\nvar chainId = {\n  mainnet: 1,\n  goerli: 5,\n  sepolia: 11155111,\n  optimism: 10,\n  optimismGoerli: 420,\n  polygon: 137,\n  polygonMumbai: 80001,\n  arbitrum: 42161,\n  arbitrumGoerli: 421613,\n  localhost: 1337,\n  hardhat: 31337,\n  foundry: 31337\n};\nvar mainnet = {\n  id: chainId.mainnet,\n  name: \"Ethereum\",\n  network: \"homestead\",\n  nativeCurrency: {\n    name: \"Ether\",\n    symbol: \"ETH\",\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.mainnet,\n    default: publicRpcUrls.mainnet,\n    infura: infuraRpcUrls.mainnet,\n    public: publicRpcUrls.mainnet\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.mainnet,\n    default: etherscanBlockExplorers.mainnet\n  },\n  ens: {\n    address: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\"\n  },\n  multicall: {\n    address: \"0xca11bde05977b3631167028862be2a173976ca11\",\n    blockCreated: 14353601\n  }\n};\nvar goerli = {\n  id: chainId.goerli,\n  name: \"Goerli\",\n  network: \"goerli\",\n  nativeCurrency: {\n    name: \"Goerli Ether\",\n    symbol: \"ETH\",\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.goerli,\n    default: publicRpcUrls.goerli,\n    infura: infuraRpcUrls.goerli,\n    public: publicRpcUrls.goerli\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.goerli,\n    default: etherscanBlockExplorers.goerli\n  },\n  ens: {\n    address: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\"\n  },\n  multicall: {\n    address: \"0xca11bde05977b3631167028862be2a173976ca11\",\n    blockCreated: 6507670\n  },\n  testnet: true\n};\nvar sepolia = {\n  id: chainId.sepolia,\n  name: \"Sepolia\",\n  network: \"sepolia\",\n  nativeCurrency: {\n    name: \"Sepolia Ether\",\n    symbol: \"ETH\",\n    decimals: 18\n  },\n  rpcUrls: {\n    default: publicRpcUrls.sepolia,\n    infura: infuraRpcUrls.sepolia,\n    public: publicRpcUrls.sepolia\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.sepolia,\n    default: etherscanBlockExplorers.sepolia\n  },\n  multicall: {\n    address: \"0xca11bde05977b3631167028862be2a173976ca11\",\n    blockCreated: 751532\n  },\n  testnet: true\n};\nvar optimism = {\n  id: chainId.optimism,\n  name: \"Optimism\",\n  network: \"optimism\",\n  nativeCurrency: {\n    name: \"Ether\",\n    symbol: \"ETH\",\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.optimism,\n    default: publicRpcUrls.optimism,\n    infura: infuraRpcUrls.optimism,\n    public: publicRpcUrls.optimism\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.optimism,\n    default: etherscanBlockExplorers.optimism\n  },\n  multicall: {\n    address: \"0xca11bde05977b3631167028862be2a173976ca11\",\n    blockCreated: 4286263\n  }\n};\nvar optimismGoerli = {\n  id: chainId.optimismGoerli,\n  name: \"Optimism Goerli\",\n  network: \"optimism-goerli\",\n  nativeCurrency: {\n    name: \"Goerli Ether\",\n    symbol: \"ETH\",\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.optimismGoerli,\n    default: publicRpcUrls.optimismGoerli,\n    infura: infuraRpcUrls.optimismGoerli,\n    public: publicRpcUrls.optimismGoerli\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.optimismGoerli,\n    default: etherscanBlockExplorers.optimismGoerli\n  },\n  multicall: {\n    address: \"0xca11bde05977b3631167028862be2a173976ca11\",\n    blockCreated: 49461\n  },\n  testnet: true\n};\nvar polygon = {\n  id: chainId.polygon,\n  name: \"Polygon\",\n  network: \"matic\",\n  nativeCurrency: {\n    name: \"MATIC\",\n    symbol: \"MATIC\",\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.polygon,\n    default: publicRpcUrls.polygon,\n    infura: infuraRpcUrls.polygon,\n    public: publicRpcUrls.polygon\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.polygon,\n    default: etherscanBlockExplorers.polygon\n  },\n  multicall: {\n    address: \"0xca11bde05977b3631167028862be2a173976ca11\",\n    blockCreated: 25770160\n  }\n};\nvar polygonMumbai = {\n  id: chainId.polygonMumbai,\n  name: \"Polygon Mumbai\",\n  network: \"maticmum\",\n  nativeCurrency: {\n    name: \"MATIC\",\n    symbol: \"MATIC\",\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.polygonMumbai,\n    default: publicRpcUrls.polygonMumbai,\n    infura: infuraRpcUrls.polygonMumbai,\n    public: publicRpcUrls.polygonMumbai\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.polygonMumbai,\n    default: etherscanBlockExplorers.polygonMumbai\n  },\n  multicall: {\n    address: \"0xca11bde05977b3631167028862be2a173976ca11\",\n    blockCreated: 25444704\n  },\n  testnet: true\n};\nvar arbitrum = {\n  id: chainId.arbitrum,\n  name: \"Arbitrum One\",\n  network: \"arbitrum\",\n  nativeCurrency: {\n    name: \"Ether\",\n    symbol: \"ETH\",\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.arbitrum,\n    default: publicRpcUrls.arbitrum,\n    infura: infuraRpcUrls.arbitrum,\n    public: publicRpcUrls.arbitrum\n  },\n  blockExplorers: {\n    arbitrum: {\n      name: \"Arbitrum Explorer\",\n      url: \"https://explorer.arbitrum.io\"\n    },\n    etherscan: etherscanBlockExplorers.arbitrum,\n    default: etherscanBlockExplorers.arbitrum\n  },\n  multicall: {\n    address: \"0xca11bde05977b3631167028862be2a173976ca11\",\n    blockCreated: 7654707\n  }\n};\nvar arbitrumGoerli = {\n  id: chainId.arbitrumGoerli,\n  name: \"Arbitrum Goerli\",\n  network: \"arbitrum-goerli\",\n  nativeCurrency: {\n    name: \"Arbitrum Goerli Ether\",\n    symbol: \"ETH\",\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.arbitrumGoerli,\n    default: publicRpcUrls.arbitrumGoerli,\n    infura: infuraRpcUrls.arbitrumGoerli,\n    public: publicRpcUrls.arbitrumGoerli\n  },\n  blockExplorers: {\n    arbitrum: {\n      name: \"Arbitrum Explorer\",\n      url: \"https://goerli-rollup-explorer.arbitrum.io\"\n    },\n    etherscan: etherscanBlockExplorers.arbitrumGoerli,\n    default: etherscanBlockExplorers.arbitrumGoerli\n  },\n  multicall: {\n    address: \"0xca11bde05977b3631167028862be2a173976ca11\",\n    blockCreated: 88114\n  },\n  testnet: true\n};\nvar localhost = {\n  id: chainId.localhost,\n  name: \"Localhost\",\n  network: \"localhost\",\n  rpcUrls: {\n    default: \"http://127.0.0.1:8545\"\n  }\n};\nvar hardhat = {\n  id: chainId.hardhat,\n  name: \"Hardhat\",\n  network: \"hardhat\",\n  rpcUrls: {\n    default: \"http://127.0.0.1:8545\"\n  }\n};\nvar foundry = {\n  id: chainId.foundry,\n  name: \"Foundry\",\n  network: \"foundry\",\n  rpcUrls: {\n    default: \"http://127.0.0.1:8545\"\n  }\n};\nvar chain = {\n  mainnet,\n  goerli,\n  sepolia,\n  optimism,\n  optimismGoerli,\n  polygon,\n  polygonMumbai,\n  arbitrum,\n  arbitrumGoerli,\n  localhost,\n  hardhat,\n  foundry\n};\nvar allChains = [mainnet, goerli, sepolia, optimism, optimismGoerli, polygon, polygonMumbai, arbitrum, arbitrumGoerli, localhost, hardhat, foundry];\nvar defaultChains = [mainnet, goerli];\nvar defaultL2Chains = [arbitrum, arbitrumGoerli, optimism, optimismGoerli];\nexport { etherscanBlockExplorers, alchemyRpcUrls, infuraRpcUrls, publicRpcUrls, chainId, mainnet, goerli, sepolia, optimism, optimismGoerli, polygon, polygonMumbai, arbitrum, arbitrumGoerli, localhost, hardhat, foundry, chain, allChains, defaultChains, defaultL2Chains };","map":{"version":3,"names":["etherscanBlockExplorers","mainnet","name","url","goerli","sepolia","optimism","optimismGoerli","polygon","polygonMumbai","arbitrum","arbitrumGoerli","alchemyRpcUrls","infuraRpcUrls","publicRpcUrls","chainId","localhost","hardhat","foundry","id","network","nativeCurrency","symbol","decimals","rpcUrls","alchemy","default","infura","public","blockExplorers","etherscan","ens","address","multicall","blockCreated","testnet","chain","allChains","defaultChains","defaultL2Chains"],"sources":["/home/dev/Desktop/StakingProject/app-ui/node_modules/@wagmi/core/dist/chunk-4DNFSL2K.js"],"sourcesContent":["// src/constants/blockExplorers.ts\nvar etherscanBlockExplorers = {\n  mainnet: {\n    name: \"Etherscan\",\n    url: \"https://etherscan.io\"\n  },\n  goerli: {\n    name: \"Etherscan\",\n    url: \"https://goerli.etherscan.io\"\n  },\n  sepolia: {\n    name: \"Etherscan\",\n    url: \"https://sepolia.etherscan.io\"\n  },\n  optimism: {\n    name: \"Etherscan\",\n    url: \"https://optimistic.etherscan.io\"\n  },\n  optimismGoerli: {\n    name: \"Etherscan\",\n    url: \"https://goerli-optimism.etherscan.io\"\n  },\n  polygon: {\n    name: \"PolygonScan\",\n    url: \"https://polygonscan.com\"\n  },\n  polygonMumbai: {\n    name: \"PolygonScan\",\n    url: \"https://mumbai.polygonscan.com\"\n  },\n  arbitrum: { name: \"Arbiscan\", url: \"https://arbiscan.io\" },\n  arbitrumGoerli: { name: \"Arbiscan\", url: \"https://goerli.arbiscan.io\" }\n};\n\n// src/constants/rpcs.ts\nvar alchemyRpcUrls = {\n  mainnet: \"https://eth-mainnet.alchemyapi.io/v2\",\n  goerli: \"https://eth-goerli.alchemyapi.io/v2\",\n  optimism: \"https://opt-mainnet.g.alchemy.com/v2\",\n  optimismGoerli: \"https://opt-goerli.g.alchemy.com/v2\",\n  polygon: \"https://polygon-mainnet.g.alchemy.com/v2\",\n  polygonMumbai: \"https://polygon-mumbai.g.alchemy.com/v2\",\n  arbitrum: \"https://arb-mainnet.g.alchemy.com/v2\",\n  arbitrumGoerli: \"https://arb-goerli.g.alchemy.com/v2\"\n};\nvar infuraRpcUrls = {\n  mainnet: \"https://mainnet.infura.io/v3\",\n  goerli: \"https://goerli.infura.io/v3\",\n  sepolia: \"https://sepolia.infura.io/v3\",\n  optimism: \"https://optimism-mainnet.infura.io/v3\",\n  optimismGoerli: \"https://optimism-goerli.infura.io/v3\",\n  polygon: \"https://polygon-mainnet.infura.io/v3\",\n  polygonMumbai: \"https://polygon-mumbai.infura.io/v3\",\n  arbitrum: \"https://arbitrum-mainnet.infura.io/v3\",\n  arbitrumGoerli: \"https://arbitrum-goerli.infura.io/v3\"\n};\nvar publicRpcUrls = {\n  mainnet: \"https://cloudflare-eth.com\",\n  goerli: \"https://rpc.ankr.com/eth_goerli\",\n  sepolia: \"https://rpc.sepolia.org\",\n  optimism: \"https://mainnet.optimism.io\",\n  optimismGoerli: \"https://goerli.optimism.io\",\n  polygon: \"https://polygon-rpc.com\",\n  polygonMumbai: \"https://matic-mumbai.chainstacklabs.com\",\n  arbitrum: \"https://arb1.arbitrum.io/rpc\",\n  arbitrumGoerli: \"https://goerli-rollup.arbitrum.io/rpc\"\n};\n\n// src/constants/chains.ts\nvar chainId = {\n  mainnet: 1,\n  goerli: 5,\n  sepolia: 11155111,\n  optimism: 10,\n  optimismGoerli: 420,\n  polygon: 137,\n  polygonMumbai: 80001,\n  arbitrum: 42161,\n  arbitrumGoerli: 421613,\n  localhost: 1337,\n  hardhat: 31337,\n  foundry: 31337\n};\nvar mainnet = {\n  id: chainId.mainnet,\n  name: \"Ethereum\",\n  network: \"homestead\",\n  nativeCurrency: { name: \"Ether\", symbol: \"ETH\", decimals: 18 },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.mainnet,\n    default: publicRpcUrls.mainnet,\n    infura: infuraRpcUrls.mainnet,\n    public: publicRpcUrls.mainnet\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.mainnet,\n    default: etherscanBlockExplorers.mainnet\n  },\n  ens: {\n    address: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\"\n  },\n  multicall: {\n    address: \"0xca11bde05977b3631167028862be2a173976ca11\",\n    blockCreated: 14353601\n  }\n};\nvar goerli = {\n  id: chainId.goerli,\n  name: \"Goerli\",\n  network: \"goerli\",\n  nativeCurrency: { name: \"Goerli Ether\", symbol: \"ETH\", decimals: 18 },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.goerli,\n    default: publicRpcUrls.goerli,\n    infura: infuraRpcUrls.goerli,\n    public: publicRpcUrls.goerli\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.goerli,\n    default: etherscanBlockExplorers.goerli\n  },\n  ens: {\n    address: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\"\n  },\n  multicall: {\n    address: \"0xca11bde05977b3631167028862be2a173976ca11\",\n    blockCreated: 6507670\n  },\n  testnet: true\n};\nvar sepolia = {\n  id: chainId.sepolia,\n  name: \"Sepolia\",\n  network: \"sepolia\",\n  nativeCurrency: { name: \"Sepolia Ether\", symbol: \"ETH\", decimals: 18 },\n  rpcUrls: {\n    default: publicRpcUrls.sepolia,\n    infura: infuraRpcUrls.sepolia,\n    public: publicRpcUrls.sepolia\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.sepolia,\n    default: etherscanBlockExplorers.sepolia\n  },\n  multicall: {\n    address: \"0xca11bde05977b3631167028862be2a173976ca11\",\n    blockCreated: 751532\n  },\n  testnet: true\n};\nvar optimism = {\n  id: chainId.optimism,\n  name: \"Optimism\",\n  network: \"optimism\",\n  nativeCurrency: { name: \"Ether\", symbol: \"ETH\", decimals: 18 },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.optimism,\n    default: publicRpcUrls.optimism,\n    infura: infuraRpcUrls.optimism,\n    public: publicRpcUrls.optimism\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.optimism,\n    default: etherscanBlockExplorers.optimism\n  },\n  multicall: {\n    address: \"0xca11bde05977b3631167028862be2a173976ca11\",\n    blockCreated: 4286263\n  }\n};\nvar optimismGoerli = {\n  id: chainId.optimismGoerli,\n  name: \"Optimism Goerli\",\n  network: \"optimism-goerli\",\n  nativeCurrency: {\n    name: \"Goerli Ether\",\n    symbol: \"ETH\",\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.optimismGoerli,\n    default: publicRpcUrls.optimismGoerli,\n    infura: infuraRpcUrls.optimismGoerli,\n    public: publicRpcUrls.optimismGoerli\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.optimismGoerli,\n    default: etherscanBlockExplorers.optimismGoerli\n  },\n  multicall: {\n    address: \"0xca11bde05977b3631167028862be2a173976ca11\",\n    blockCreated: 49461\n  },\n  testnet: true\n};\nvar polygon = {\n  id: chainId.polygon,\n  name: \"Polygon\",\n  network: \"matic\",\n  nativeCurrency: { name: \"MATIC\", symbol: \"MATIC\", decimals: 18 },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.polygon,\n    default: publicRpcUrls.polygon,\n    infura: infuraRpcUrls.polygon,\n    public: publicRpcUrls.polygon\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.polygon,\n    default: etherscanBlockExplorers.polygon\n  },\n  multicall: {\n    address: \"0xca11bde05977b3631167028862be2a173976ca11\",\n    blockCreated: 25770160\n  }\n};\nvar polygonMumbai = {\n  id: chainId.polygonMumbai,\n  name: \"Polygon Mumbai\",\n  network: \"maticmum\",\n  nativeCurrency: {\n    name: \"MATIC\",\n    symbol: \"MATIC\",\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.polygonMumbai,\n    default: publicRpcUrls.polygonMumbai,\n    infura: infuraRpcUrls.polygonMumbai,\n    public: publicRpcUrls.polygonMumbai\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.polygonMumbai,\n    default: etherscanBlockExplorers.polygonMumbai\n  },\n  multicall: {\n    address: \"0xca11bde05977b3631167028862be2a173976ca11\",\n    blockCreated: 25444704\n  },\n  testnet: true\n};\nvar arbitrum = {\n  id: chainId.arbitrum,\n  name: \"Arbitrum One\",\n  network: \"arbitrum\",\n  nativeCurrency: { name: \"Ether\", symbol: \"ETH\", decimals: 18 },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.arbitrum,\n    default: publicRpcUrls.arbitrum,\n    infura: infuraRpcUrls.arbitrum,\n    public: publicRpcUrls.arbitrum\n  },\n  blockExplorers: {\n    arbitrum: {\n      name: \"Arbitrum Explorer\",\n      url: \"https://explorer.arbitrum.io\"\n    },\n    etherscan: etherscanBlockExplorers.arbitrum,\n    default: etherscanBlockExplorers.arbitrum\n  },\n  multicall: {\n    address: \"0xca11bde05977b3631167028862be2a173976ca11\",\n    blockCreated: 7654707\n  }\n};\nvar arbitrumGoerli = {\n  id: chainId.arbitrumGoerli,\n  name: \"Arbitrum Goerli\",\n  network: \"arbitrum-goerli\",\n  nativeCurrency: {\n    name: \"Arbitrum Goerli Ether\",\n    symbol: \"ETH\",\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.arbitrumGoerli,\n    default: publicRpcUrls.arbitrumGoerli,\n    infura: infuraRpcUrls.arbitrumGoerli,\n    public: publicRpcUrls.arbitrumGoerli\n  },\n  blockExplorers: {\n    arbitrum: {\n      name: \"Arbitrum Explorer\",\n      url: \"https://goerli-rollup-explorer.arbitrum.io\"\n    },\n    etherscan: etherscanBlockExplorers.arbitrumGoerli,\n    default: etherscanBlockExplorers.arbitrumGoerli\n  },\n  multicall: {\n    address: \"0xca11bde05977b3631167028862be2a173976ca11\",\n    blockCreated: 88114\n  },\n  testnet: true\n};\nvar localhost = {\n  id: chainId.localhost,\n  name: \"Localhost\",\n  network: \"localhost\",\n  rpcUrls: {\n    default: \"http://127.0.0.1:8545\"\n  }\n};\nvar hardhat = {\n  id: chainId.hardhat,\n  name: \"Hardhat\",\n  network: \"hardhat\",\n  rpcUrls: {\n    default: \"http://127.0.0.1:8545\"\n  }\n};\nvar foundry = {\n  id: chainId.foundry,\n  name: \"Foundry\",\n  network: \"foundry\",\n  rpcUrls: {\n    default: \"http://127.0.0.1:8545\"\n  }\n};\nvar chain = {\n  mainnet,\n  goerli,\n  sepolia,\n  optimism,\n  optimismGoerli,\n  polygon,\n  polygonMumbai,\n  arbitrum,\n  arbitrumGoerli,\n  localhost,\n  hardhat,\n  foundry\n};\nvar allChains = [\n  mainnet,\n  goerli,\n  sepolia,\n  optimism,\n  optimismGoerli,\n  polygon,\n  polygonMumbai,\n  arbitrum,\n  arbitrumGoerli,\n  localhost,\n  hardhat,\n  foundry\n];\nvar defaultChains = [mainnet, goerli];\nvar defaultL2Chains = [\n  arbitrum,\n  arbitrumGoerli,\n  optimism,\n  optimismGoerli\n];\n\nexport {\n  etherscanBlockExplorers,\n  alchemyRpcUrls,\n  infuraRpcUrls,\n  publicRpcUrls,\n  chainId,\n  mainnet,\n  goerli,\n  sepolia,\n  optimism,\n  optimismGoerli,\n  polygon,\n  polygonMumbai,\n  arbitrum,\n  arbitrumGoerli,\n  localhost,\n  hardhat,\n  foundry,\n  chain,\n  allChains,\n  defaultChains,\n  defaultL2Chains\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}