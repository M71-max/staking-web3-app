{"ast":null,"code":"var _jsxFileName = \"/home/dev/Desktop/tes/app-ui/src/contextComponents/stakeContext/StakeState.js\",\n  _s = $RefreshSig$();\nimport { useEffect, createContext, useContext } from \"react\";\nimport { useContractWrite, usePrepareContractWrite, useWaitForTransaction } from 'wagmi';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport StakeContext from \"./StakeContext\";\nimport StakeAbi from '../../contractAbi/StakingAbi';\nimport sleep from \"../../components/Pause\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stakeContractConfig = {\n  address: process.env.React_App_Staking_Address,\n  abi: StakeAbi\n};\nconst StakingState = props => {\n  _s();\n  let success = /*#__PURE__*/createContext();\n  let error1 = /*#__PURE__*/createContext();\n  let error2 = /*#__PURE__*/createContext();\n  const poolId1 = 0;\n  const poolId2 = 1;\n  const poolId3 = 2;\n\n  // fixed staking configs\n  const {\n    config: stakeFixConfig1\n  } = usePrepareContractWrite({\n    ...stakeContractConfig,\n    functionName: 'fixStake',\n    args: [poolId1]\n  });\n  const {\n    config: stakeFixConfig2\n  } = usePrepareContractWrite({\n    ...stakeContractConfig,\n    functionName: 'fixStake',\n    args: [poolId2]\n  });\n  const {\n    config: stakeFixConfig3\n  } = usePrepareContractWrite({\n    ...stakeContractConfig,\n    functionName: 'fixStake',\n    args: [poolId3]\n  });\n\n  // flexible pools configs\n  const {\n    config: flexPoolStakeConfig1\n  } = usePrepareContractWrite({\n    ...stakeContractConfig,\n    functionName: 'flexStake',\n    args: [poolId1]\n  });\n  const {\n    config: flexPoolStakeConfig2\n  } = usePrepareContractWrite({\n    ...stakeContractConfig,\n    functionName: 'flexStake',\n    args: [poolId2]\n  });\n  const {\n    config: flexPoolStakeConfig3\n  } = usePrepareContractWrite({\n    ...stakeContractConfig,\n    functionName: 'flexStake',\n    args: [poolId3]\n  });\n\n  // claim configs Fixed\n  const {\n    config: claimFixedConfig1\n  } = usePrepareContractWrite({\n    ...stakeContractConfig,\n    functionName: 'claimFixStake',\n    args: [poolId1]\n  });\n  const {\n    config: claimFixedConfig2\n  } = usePrepareContractWrite({\n    ...stakeContractConfig,\n    functionName: 'claimFixStake',\n    args: [poolId2]\n  });\n  const {\n    config: claimFixedConfig3\n  } = usePrepareContractWrite({\n    ...stakeContractConfig,\n    functionName: 'claimFixStake',\n    args: [poolId3]\n  });\n\n  // claim flexible configs\n  const {\n    config: claimFlexConfig1\n  } = usePrepareContractWrite({\n    ...stakeContractConfig,\n    functionName: 'claimFlexReward',\n    args: [poolId1]\n  });\n  const {\n    config: claimFlexConfig2\n  } = usePrepareContractWrite({\n    ...stakeContractConfig,\n    functionName: 'claimFlexReward',\n    args: [poolId2]\n  });\n  const {\n    config: claimFlexConfig3\n  } = usePrepareContractWrite({\n    ...stakeContractConfig,\n    functionName: 'claimFlexReward',\n    args: [poolId3]\n  });\n\n  // fixed staking writes & wait for completion\n  const {\n    data: fixStake1Data,\n    write: fixStake1,\n    isLoading: fixStake1Load,\n    isError: fixStake1E\n  } = useContractWrite(stakeFixConfig1);\n  const {\n    isSuccess: pool1Staking,\n    isError: fixStake1Error\n  } = useWaitForTransaction({\n    hash: fixStake1Data === null || fixStake1Data === void 0 ? void 0 : fixStake1Data.hash\n  });\n  const {\n    data: fixStake2Data,\n    write: fixStake2,\n    isLoading: fixStake2Load,\n    isError: fixStake2E\n  } = useContractWrite(stakeFixConfig2);\n  const {\n    isSuccess: pool2Staking,\n    isError: fixStake2Error\n  } = useWaitForTransaction({\n    hash: fixStake2Data === null || fixStake2Data === void 0 ? void 0 : fixStake2Data.hash\n  });\n  const {\n    data: fixStake3Data,\n    write: fixStake3,\n    isLoading: fixStake3Load,\n    isError: fixStake3E\n  } = useContractWrite(stakeFixConfig3);\n  const {\n    isSuccess: pool3Staking,\n    isError: fixStake3Error\n  } = useWaitForTransaction({\n    hash: fixStake3Data === null || fixStake3Data === void 0 ? void 0 : fixStake3Data.hash\n  });\n\n  // flex pool write & wait for trans completion\n  const {\n    data: flexPool1Data,\n    write: flexPool1,\n    isLoading: flexPool1Loading,\n    isError: flexStake1E\n  } = useContractWrite(flexPoolStakeConfig1);\n  const {\n    isSuccess: flexPool1Staking,\n    isError: flexStake1Error\n  } = useWaitForTransaction({\n    hash: flexPool1Data === null || flexPool1Data === void 0 ? void 0 : flexPool1Data.hash\n  });\n  const {\n    data: flexPool2Data,\n    write: flexPool2,\n    isLoading: flexPool2Loading,\n    isError: flexStake2E\n  } = useContractWrite(flexPoolStakeConfig2);\n  const {\n    isSuccess: flexPool2Staking,\n    isError: flexStake2Error\n  } = useWaitForTransaction({\n    hash: flexPool2Data === null || flexPool2Data === void 0 ? void 0 : flexPool2Data.hash\n  });\n  const {\n    data: flexPool3Data,\n    write: flexPool3,\n    isLoading: flexPool3Loading,\n    isError: flexStake3E\n  } = useContractWrite(flexPoolStakeConfig3);\n  const {\n    isSuccess: flexPool3Staking,\n    isError: flexStake3Error\n  } = useWaitForTransaction({\n    hash: flexPool3Data === null || flexPool3Data === void 0 ? void 0 : flexPool3Data.hash\n  });\n\n  // claim fixed pool writes\n  const {\n    data: fixClaimData1,\n    write: fixClaim1,\n    isLoading: fixClaim1Loading,\n    isError: fixClaim1E\n  } = useContractWrite(claimFixedConfig1);\n  const {\n    isSuccess: fixPool1Claim,\n    isError: fixPool1ClaimError\n  } = useWaitForTransaction({\n    hash: fixClaimData1 === null || fixClaimData1 === void 0 ? void 0 : fixClaimData1.hash\n  });\n  const {\n    data: fixClaimData2,\n    write: fixClaim2,\n    isLoading: fixClaim2Loading,\n    isError: fixClaim2E\n  } = useContractWrite(claimFixedConfig2);\n  const {\n    isSuccess: fixPool2Claim,\n    isError: fixPool2ClaimError\n  } = useWaitForTransaction({\n    hash: fixClaimData2 === null || fixClaimData2 === void 0 ? void 0 : fixClaimData2.hash\n  });\n  const {\n    data: fixClaimData3,\n    write: fixClaim3,\n    isLoading: fixClaim3Loading,\n    isError: fixClaim3E\n  } = useContractWrite(claimFixedConfig3);\n  const {\n    isSuccess: fixPool3Claim,\n    isError: fixPool3ClaimError\n  } = useWaitForTransaction({\n    hash: fixClaimData3 === null || fixClaimData3 === void 0 ? void 0 : fixClaimData3.hash\n  });\n\n  // claim flexible pools writes & trans wait\n  const {\n    data: flexClaimData1,\n    write: flexClaim1,\n    isLoading: flexClaim1Loading,\n    isError: flexClaim1E\n  } = useContractWrite(claimFlexConfig1);\n  const {\n    isSuccess: flexPool1Claim,\n    isError: flexPool1ClaimError\n  } = useWaitForTransaction({\n    hash: flexClaimData1 === null || flexClaimData1 === void 0 ? void 0 : flexClaimData1.hash\n  });\n  const {\n    data: flexClaimData2,\n    write: flexClaim2,\n    isLoading: flexClaim2Loading,\n    isError: flexClaim2E\n  } = useContractWrite(claimFlexConfig2);\n  const {\n    isSuccess: flexPool2Claim,\n    isError: flexPool2ClaimError\n  } = useWaitForTransaction({\n    hash: flexClaimData2 === null || flexClaimData2 === void 0 ? void 0 : flexClaimData2.hash\n  });\n  const {\n    data: flexClaimData3,\n    write: flexClaim3,\n    isLoading: flexClaim3Loading,\n    isError: flexClaim3E\n  } = useContractWrite(claimFlexConfig3);\n  const {\n    isSuccess: flexPool3Claim,\n    isError: flexPool3ClaimError\n  } = useWaitForTransaction({\n    hash: flexClaimData3 === null || flexClaimData3 === void 0 ? void 0 : flexClaimData3.hash\n  });\n\n  // promises and use-effect for the fixed trans\n  const successAlert = () => {\n    toast.success('Successfully Indexed the block on the Chain', {\n      position: \"top-center\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: \"light\"\n    });\n  };\n  const errorAlert = () => {\n    toast.error('Error While Indexing Block', {\n      position: \"top-center\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: \"light\"\n    });\n  };\n  useEffect(() => {\n    success = pool1Staking;\n    error1 = fixStake1Error;\n  });\n  const fixStakePool1Alert = async () => {\n    if (pool1Staking && (!fixStake1Error || !fixStake1E)) {\n      await sleep(10000);\n      successAlert();\n    }\n    if (fixStake1Error || fixStake1E) {\n      errorAlert();\n    }\n  };\n  useEffect(() => {\n    fixStakePool1Alert();\n  }, [pool1Staking, fixStake1Error, fixStake1E]);\n  const fixStakePool2Alert = async () => {\n    if (pool2Staking && (!fixStake2Error || !fixStake2E)) {\n      await sleep(10000);\n      successAlert();\n    }\n    if (fixStake2Error || fixStake2E) {\n      errorAlert();\n    }\n  };\n  useEffect(() => {\n    fixStakePool2Alert();\n  }, [pool2Staking, fixStake2Error, fixStake2E]);\n  const fixStakePool3Alert = async () => {\n    if (pool3Staking && (!fixStake3Error || !fixStake3E)) {\n      await sleep(10000);\n      successAlert();\n    }\n    if (fixStake3Error || fixStake3E) {\n      errorAlert();\n    }\n  };\n  useEffect(() => {\n    fixStakePool3Alert();\n  }, [pool3Staking, fixStake3Error, fixStake3E]);\n\n  // flexible pool promises & use-effect\n  const flexStakePool1Alert = async () => {\n    if (flexPool1Staking && (!flexStake1E || !flexStake1Error)) {\n      await sleep(10000);\n      successAlert();\n    }\n    if (flexStake1E || flexStake1Error) {\n      errorAlert();\n    }\n  };\n  useEffect(() => {\n    flexStakePool1Alert();\n  }, [flexPool1Staking, flexStake1Error]);\n  const flexStakePool2Alert = async () => {\n    if (flexPool2Staking && (!flexStake2E || !flexStake2Error)) {\n      await sleep(10000);\n      successAlert();\n    }\n    if (flexStake2E || flexStake2Error) {\n      errorAlert();\n    }\n  };\n  useEffect(() => {\n    flexStakePool2Alert();\n  }, [flexPool2Staking, flexStake2Error]);\n  const flexStakePool3Alert = async () => {\n    if (flexPool3Staking && (!flexStake3E || !flexStake3Error)) {\n      await sleep(10000);\n      successAlert();\n    }\n    if (flexStake3E || flexStake3Error) {\n      errorAlert();\n    }\n  };\n  useEffect(() => {\n    flexStakePool3Alert();\n  }, [flexPool3Staking, flexStake3Error]);\n\n  // fixed claims promises & use-effect\n  const fixClaimPool1Alert = async () => {\n    if (fixPool1Claim && (!fixPool1ClaimError || !fixClaim1E)) {\n      await sleep(10000);\n      successAlert();\n    }\n    if (fixPool1ClaimError || fixClaim1E) {\n      errorAlert();\n    }\n  };\n  useEffect(() => {\n    fixClaimPool1Alert();\n  }, [fixPool1Claim, fixPool1ClaimError]);\n  const fixClaimPool2Alert = async () => {\n    if (fixPool2Claim && (!fixPool2ClaimError || !fixClaim2E)) {\n      await sleep(10000);\n      successAlert();\n    }\n    if (fixPool2ClaimError || fixClaim2E) {\n      errorAlert();\n    }\n  };\n  useEffect(() => {\n    fixClaimPool2Alert();\n  }, [fixPool2Claim, fixPool2ClaimError]);\n  const fixClaimPool3Alert = async () => {\n    if (fixPool3Claim && (!fixPool3ClaimError || !fixClaim3E)) {\n      await sleep(10000);\n      successAlert();\n    }\n    if (fixPool3ClaimError || fixClaim3E) {\n      errorAlert();\n    }\n  };\n  useEffect(() => {\n    fixClaimPool3Alert();\n  }, [fixPool3Claim, fixPool3ClaimError]);\n\n  // flexible claim pools promises & use-effect\n  const flexClaimPool1Alert = async () => {\n    if (flexPool1Claim && (!flexClaim1E || !flexPool1ClaimError)) {\n      await sleep(10000);\n      successAlert();\n    }\n    if (flexClaim1E || flexPool1ClaimError) {\n      errorAlert();\n    }\n  };\n  useEffect(() => {\n    flexClaimPool1Alert();\n  }, [flexPool1Claim, flexPool1ClaimError]);\n  const flexClaimPool2Alert = async () => {\n    if (flexPool2Claim && !flexClaim2E && !flexPool2ClaimError) {\n      await sleep(10000);\n      successAlert();\n    }\n    if (flexClaim2E && flexPool2ClaimError) {\n      errorAlert();\n    }\n  };\n  useEffect(() => {\n    flexClaimPool2Alert();\n  }, [flexPool2Claim, flexPool2ClaimError]);\n  const flexClaimPool3Alert = async () => {\n    if (flexPool3Claim && !flexClaim3E && !flexPool3ClaimError) {\n      await sleep(10000);\n      successAlert();\n    }\n    if (flexClaim1E && flexPool1ClaimError) {\n      errorAlert();\n    }\n  };\n  useEffect(() => {\n    flexClaimPool1Alert();\n  }, [flexPool3Claim, flexPool3ClaimError]);\n\n  // use-state & functions to export\n  return /*#__PURE__*/_jsxDEV(StakeContext.Provider, {\n    value: {\n      fixStakes: {\n        fixStake1,\n        fixStake2,\n        fixStake3\n      },\n      flexStakes: {\n        flexPool1,\n        flexPool2,\n        flexPool3\n      },\n      fixClaims: {\n        fixClaim1,\n        fixClaim2,\n        fixClaim3\n      },\n      flexClaims: {\n        flexClaim1,\n        flexClaim2,\n        flexClaim3\n      }\n    },\n    children: [props.children, /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 405,\n    columnNumber: 9\n  }, this);\n};\n_s(StakingState, \"7jgVDhjpcWfHnxfUCrt0fkSv0Us=\", false, function () {\n  return [usePrepareContractWrite, usePrepareContractWrite, usePrepareContractWrite, usePrepareContractWrite, usePrepareContractWrite, usePrepareContractWrite, usePrepareContractWrite, usePrepareContractWrite, usePrepareContractWrite, usePrepareContractWrite, usePrepareContractWrite, usePrepareContractWrite, useContractWrite, useWaitForTransaction, useContractWrite, useWaitForTransaction, useContractWrite, useWaitForTransaction, useContractWrite, useWaitForTransaction, useContractWrite, useWaitForTransaction, useContractWrite, useWaitForTransaction, useContractWrite, useWaitForTransaction, useContractWrite, useWaitForTransaction, useContractWrite, useWaitForTransaction, useContractWrite, useWaitForTransaction, useContractWrite, useWaitForTransaction, useContractWrite, useWaitForTransaction];\n});\n_c = StakingState;\nexport default StakingState;\nvar _c;\n$RefreshReg$(_c, \"StakingState\");","map":{"version":3,"names":["useEffect","createContext","useContext","useContractWrite","usePrepareContractWrite","useWaitForTransaction","ToastContainer","toast","StakeContext","StakeAbi","sleep","stakeContractConfig","address","process","env","React_App_Staking_Address","abi","StakingState","props","success","error1","error2","poolId1","poolId2","poolId3","config","stakeFixConfig1","functionName","args","stakeFixConfig2","stakeFixConfig3","flexPoolStakeConfig1","flexPoolStakeConfig2","flexPoolStakeConfig3","claimFixedConfig1","claimFixedConfig2","claimFixedConfig3","claimFlexConfig1","claimFlexConfig2","claimFlexConfig3","data","fixStake1Data","write","fixStake1","isLoading","fixStake1Load","isError","fixStake1E","isSuccess","pool1Staking","fixStake1Error","hash","fixStake2Data","fixStake2","fixStake2Load","fixStake2E","pool2Staking","fixStake2Error","fixStake3Data","fixStake3","fixStake3Load","fixStake3E","pool3Staking","fixStake3Error","flexPool1Data","flexPool1","flexPool1Loading","flexStake1E","flexPool1Staking","flexStake1Error","flexPool2Data","flexPool2","flexPool2Loading","flexStake2E","flexPool2Staking","flexStake2Error","flexPool3Data","flexPool3","flexPool3Loading","flexStake3E","flexPool3Staking","flexStake3Error","fixClaimData1","fixClaim1","fixClaim1Loading","fixClaim1E","fixPool1Claim","fixPool1ClaimError","fixClaimData2","fixClaim2","fixClaim2Loading","fixClaim2E","fixPool2Claim","fixPool2ClaimError","fixClaimData3","fixClaim3","fixClaim3Loading","fixClaim3E","fixPool3Claim","fixPool3ClaimError","flexClaimData1","flexClaim1","flexClaim1Loading","flexClaim1E","flexPool1Claim","flexPool1ClaimError","flexClaimData2","flexClaim2","flexClaim2Loading","flexClaim2E","flexPool2Claim","flexPool2ClaimError","flexClaimData3","flexClaim3","flexClaim3Loading","flexClaim3E","flexPool3Claim","flexPool3ClaimError","successAlert","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","errorAlert","error","fixStakePool1Alert","fixStakePool2Alert","fixStakePool3Alert","flexStakePool1Alert","flexStakePool2Alert","flexStakePool3Alert","fixClaimPool1Alert","fixClaimPool2Alert","fixClaimPool3Alert","flexClaimPool1Alert","flexClaimPool2Alert","flexClaimPool3Alert","fixStakes","flexStakes","fixClaims","flexClaims","children"],"sources":["/home/dev/Desktop/tes/app-ui/src/contextComponents/stakeContext/StakeState.js"],"sourcesContent":["import { useEffect, createContext, useContext } from \"react\";\nimport { useContractWrite, usePrepareContractWrite, useWaitForTransaction } from 'wagmi';\nimport { ToastContainer, toast } from \"react-toastify\";\n\nimport StakeContext from \"./StakeContext\"; \nimport StakeAbi from '../../contractAbi/StakingAbi';\nimport sleep from \"../../components/Pause\";\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst stakeContractConfig = {\n    address: process.env.React_App_Staking_Address,\n    abi: StakeAbi,\n};\n\nconst StakingState = (props) => {\n    let success = createContext();\n    let error1 = createContext();\n    let error2 = createContext();\n\n    const poolId1 = 0;\n    const poolId2 = 1;\n    const poolId3 = 2;\n\n    // fixed staking configs\n    const { config: stakeFixConfig1 } = usePrepareContractWrite({\n        ...stakeContractConfig,\n        functionName: 'fixStake',\n        args:[ poolId1 ],\n    });\n    const { config: stakeFixConfig2 } = usePrepareContractWrite({\n        ...stakeContractConfig,\n        functionName: 'fixStake',\n        args:[ poolId2 ],\n    });\n    const { config: stakeFixConfig3 } = usePrepareContractWrite({\n        ...stakeContractConfig,\n        functionName: 'fixStake',\n        args:[ poolId3 ],\n    });\n\n    // flexible pools configs\n    const { config: flexPoolStakeConfig1 } = usePrepareContractWrite({\n        ...stakeContractConfig,\n        functionName: 'flexStake',\n        args:[ poolId1 ],\n    });\n    const { config: flexPoolStakeConfig2 } = usePrepareContractWrite({\n        ...stakeContractConfig,\n        functionName: 'flexStake',\n        args:[ poolId2 ],\n    });\n    const { config: flexPoolStakeConfig3 } = usePrepareContractWrite({\n        ...stakeContractConfig,\n        functionName: 'flexStake',\n        args:[ poolId3 ],\n    });\n\n    // claim configs Fixed\n    const { config: claimFixedConfig1 } = usePrepareContractWrite({\n        ...stakeContractConfig,\n        functionName: 'claimFixStake',\n        args:[ poolId1 ],\n    });\n    const { config: claimFixedConfig2 } = usePrepareContractWrite({\n        ...stakeContractConfig,\n        functionName: 'claimFixStake',\n        args:[ poolId2 ],\n    });\n    const { config: claimFixedConfig3 } = usePrepareContractWrite({\n        ...stakeContractConfig,\n        functionName: 'claimFixStake',\n        args:[ poolId3 ],\n    });\n\n    // claim flexible configs\n    const { config: claimFlexConfig1 } = usePrepareContractWrite({\n        ...stakeContractConfig,\n        functionName: 'claimFlexReward',\n        args:[ poolId1 ],\n    });\n    const { config: claimFlexConfig2 } = usePrepareContractWrite({\n        ...stakeContractConfig,\n        functionName: 'claimFlexReward',\n        args:[ poolId2 ],\n    });\n    const { config: claimFlexConfig3 } = usePrepareContractWrite({\n        ...stakeContractConfig,\n        functionName: 'claimFlexReward',\n        args:[ poolId3 ],\n    });\n\n    // fixed staking writes & wait for completion\n    const {\n        data: fixStake1Data,\n        write: fixStake1,\n        isLoading: fixStake1Load,\n        isError: fixStake1E,\n    } = useContractWrite(stakeFixConfig1);\n    const {isSuccess: pool1Staking, isError: fixStake1Error } = useWaitForTransaction({\n        hash: fixStake1Data?.hash,\n    });\n    const {\n        data: fixStake2Data,\n        write: fixStake2,\n        isLoading: fixStake2Load,\n        isError: fixStake2E,\n    } = useContractWrite(stakeFixConfig2);\n    const {isSuccess: pool2Staking, isError: fixStake2Error } = useWaitForTransaction({\n        hash: fixStake2Data?.hash,\n    });\n    const {\n        data: fixStake3Data,\n        write: fixStake3,\n        isLoading: fixStake3Load,\n        isError: fixStake3E,\n    } = useContractWrite(stakeFixConfig3);\n    const {isSuccess: pool3Staking, isError: fixStake3Error } = useWaitForTransaction({\n        hash: fixStake3Data?.hash,\n    });\n\n    // flex pool write & wait for trans completion\n    const {\n        data: flexPool1Data,\n        write: flexPool1,\n        isLoading: flexPool1Loading,\n        isError: flexStake1E,\n    } = useContractWrite(flexPoolStakeConfig1);\n    const {isSuccess: flexPool1Staking, isError: flexStake1Error } = useWaitForTransaction({\n        hash: flexPool1Data?.hash,\n    });\n\n    const {\n        data: flexPool2Data,\n        write: flexPool2,\n        isLoading: flexPool2Loading,\n        isError: flexStake2E,\n    } = useContractWrite(flexPoolStakeConfig2);\n    const {isSuccess: flexPool2Staking, isError: flexStake2Error } = useWaitForTransaction({\n        hash: flexPool2Data?.hash,\n    });\n\n    const {\n        data: flexPool3Data,\n        write: flexPool3,\n        isLoading: flexPool3Loading,\n        isError: flexStake3E,\n    } = useContractWrite(flexPoolStakeConfig3);\n    const {isSuccess: flexPool3Staking, isError: flexStake3Error } = useWaitForTransaction({\n        hash: flexPool3Data?.hash,\n    });\n\n    // claim fixed pool writes\n    const {\n        data: fixClaimData1,\n        write: fixClaim1,\n        isLoading: fixClaim1Loading,\n        isError: fixClaim1E,\n    } = useContractWrite(claimFixedConfig1);\n    const {isSuccess: fixPool1Claim, isError: fixPool1ClaimError } = useWaitForTransaction({\n        hash: fixClaimData1?.hash,\n    });\n\n    const {\n        data: fixClaimData2,\n        write: fixClaim2,\n        isLoading: fixClaim2Loading,\n        isError: fixClaim2E,\n    } = useContractWrite(claimFixedConfig2);\n    const {isSuccess: fixPool2Claim, isError: fixPool2ClaimError } = useWaitForTransaction({\n        hash: fixClaimData2?.hash,\n    });\n\n    const {\n        data: fixClaimData3,\n        write: fixClaim3,\n        isLoading: fixClaim3Loading,\n        isError: fixClaim3E,\n    } = useContractWrite(claimFixedConfig3);\n    const {isSuccess: fixPool3Claim, isError: fixPool3ClaimError } = useWaitForTransaction({\n        hash: fixClaimData3?.hash,\n    });\n\n    // claim flexible pools writes & trans wait\n    const {\n        data: flexClaimData1,\n        write: flexClaim1,\n        isLoading: flexClaim1Loading,\n        isError: flexClaim1E,\n    } = useContractWrite(claimFlexConfig1);\n    const {isSuccess: flexPool1Claim, isError: flexPool1ClaimError } = useWaitForTransaction({\n        hash: flexClaimData1?.hash,\n    });\n\n    const {\n        data: flexClaimData2,\n        write: flexClaim2,\n        isLoading: flexClaim2Loading,\n        isError: flexClaim2E,\n    } = useContractWrite(claimFlexConfig2);\n    const {isSuccess: flexPool2Claim, isError: flexPool2ClaimError } = useWaitForTransaction({\n        hash: flexClaimData2?.hash,\n    });\n\n    const {\n        data: flexClaimData3,\n        write: flexClaim3,\n        isLoading: flexClaim3Loading,\n        isError: flexClaim3E,\n    } = useContractWrite(claimFlexConfig3);\n    const {isSuccess: flexPool3Claim, isError: flexPool3ClaimError } = useWaitForTransaction({\n        hash: flexClaimData3?.hash,\n    });\n\n    // promises and use-effect for the fixed trans\n    const successAlert =() => {toast.success('Successfully Indexed the block on the Chain', {\n        position: \"top-center\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\",\n        });}\n\n    const errorAlert = () => {toast.error('Error While Indexing Block', {\n            position: \"top-center\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"light\",\n            });}\n\n    useEffect(() => {\n        success = pool1Staking;\n        error1 = fixStake1Error;\n        \n    })\n\n    const fixStakePool1Alert = async() => {\n        if(pool1Staking && (!fixStake1Error || !fixStake1E)) {\n            await sleep(10000);\n            successAlert();\n        }\n        if(fixStake1Error || fixStake1E) {\n            errorAlert();\n        }\n    };\n    useEffect(() => {\n        fixStakePool1Alert();\n    }, [pool1Staking, fixStake1Error, fixStake1E]);\n\n    const fixStakePool2Alert = async() => {\n        if(pool2Staking && (!fixStake2Error || !fixStake2E)) {\n            await sleep(10000);\n            successAlert();\n        }\n        if(fixStake2Error || fixStake2E) {\n            errorAlert();\n        }\n    };\n    useEffect(() => {\n        fixStakePool2Alert();\n    }, [pool2Staking, fixStake2Error, fixStake2E]);\n\n    const fixStakePool3Alert = async() => {\n        if(pool3Staking && (!fixStake3Error || !fixStake3E)) {\n            await sleep(10000);\n            successAlert();\n        }\n        if(fixStake3Error || fixStake3E) {\n            errorAlert();\n        }\n    };\n    useEffect(() => {\n        fixStakePool3Alert();\n    }, [pool3Staking, fixStake3Error, fixStake3E]);\n\n    // flexible pool promises & use-effect\n    const flexStakePool1Alert = async() => {\n        if(flexPool1Staking && (!flexStake1E || !flexStake1Error)) {\n            await sleep(10000);\n            successAlert();\n        }\n        if(flexStake1E || flexStake1Error) {\n            errorAlert();\n        }\n    };\n    useEffect(() => {\n        flexStakePool1Alert();\n    }, [flexPool1Staking, flexStake1Error]);\n\n    const flexStakePool2Alert = async() => {\n        if(flexPool2Staking && (!flexStake2E || !flexStake2Error)) {\n            await sleep(10000);\n            successAlert();\n        }\n        if(flexStake2E || flexStake2Error) {\n            errorAlert();\n        }\n    };\n    useEffect(() => {\n        flexStakePool2Alert();\n    }, [flexPool2Staking, flexStake2Error]);\n\n    const flexStakePool3Alert = async() => {\n        if(flexPool3Staking && (!flexStake3E || !flexStake3Error)) {\n            await sleep(10000);\n            successAlert();\n        }\n        if(flexStake3E || flexStake3Error) {\n            errorAlert();\n        }\n    };\n    useEffect(() => {\n        flexStakePool3Alert();\n    }, [flexPool3Staking, flexStake3Error]);\n\n    // fixed claims promises & use-effect\n    const fixClaimPool1Alert = async() => {\n        if(fixPool1Claim && (!fixPool1ClaimError || !fixClaim1E)) {\n            await sleep(10000);\n            successAlert();\n        }\n        if(fixPool1ClaimError || fixClaim1E) {\n            errorAlert();\n        }\n    };\n    useEffect(() => {\n        fixClaimPool1Alert();\n    }, [fixPool1Claim, fixPool1ClaimError]);\n\n    const fixClaimPool2Alert = async() => {\n        if(fixPool2Claim && (!fixPool2ClaimError || !fixClaim2E)) {\n            await sleep(10000);\n            successAlert();\n        }\n        if(fixPool2ClaimError || fixClaim2E) {\n            errorAlert();\n        }\n    };\n    useEffect(() => {\n        fixClaimPool2Alert();\n    }, [fixPool2Claim, fixPool2ClaimError]);\n\n    const fixClaimPool3Alert = async() => {\n        if(fixPool3Claim && (!fixPool3ClaimError || !fixClaim3E)) {\n            await sleep(10000);\n            successAlert();\n        }\n        if(fixPool3ClaimError || fixClaim3E) {\n            errorAlert();\n        }\n    };\n    useEffect(() => {\n        fixClaimPool3Alert();\n    }, [fixPool3Claim, fixPool3ClaimError]);\n\n    // flexible claim pools promises & use-effect\n    const flexClaimPool1Alert = async() => {\n        if(flexPool1Claim && (!flexClaim1E || !flexPool1ClaimError)) {\n            await sleep(10000);\n            successAlert();\n        }\n        if((flexClaim1E || flexPool1ClaimError)) {\n            errorAlert();\n        }\n    };\n    useEffect(() => {\n        flexClaimPool1Alert();\n    }, [flexPool1Claim, flexPool1ClaimError]);\n\n    const flexClaimPool2Alert = async() => {\n        if(flexPool2Claim && (!flexClaim2E && !flexPool2ClaimError)) {\n            await sleep(10000);\n            successAlert();\n        }\n        if((flexClaim2E && flexPool2ClaimError)) {\n            errorAlert();\n        }\n    };\n    useEffect(() => {\n        flexClaimPool2Alert();\n    }, [flexPool2Claim, flexPool2ClaimError]);\n\n    const flexClaimPool3Alert = async() => {\n        if(flexPool3Claim && (!flexClaim3E && !flexPool3ClaimError)) {\n            await sleep(10000);\n            successAlert();\n        }\n        if(flexClaim1E && flexPool1ClaimError) {\n            errorAlert();\n        }\n    };\n    useEffect(() => {\n        flexClaimPool1Alert();\n    }, [flexPool3Claim, flexPool3ClaimError]);\n\n    // use-state & functions to export\n    return (\n        <StakeContext.Provider value={ {fixStakes: { fixStake1, fixStake2, fixStake3 }, flexStakes: { flexPool1, flexPool2, flexPool3 }, fixClaims: { fixClaim1, fixClaim2, fixClaim3 }, flexClaims: { flexClaim1, flexClaim2, flexClaim3 }} }>\n            { props.children }\n            <ToastContainer />\n        </StakeContext.Provider>\n    );\n}\n\nexport default StakingState;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}